                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ssd1306
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _INIT_SSD1306
                                     12 	.globl _i2cStop
                                     13 	.globl _i2cSendByte
                                     14 	.globl _i2cStartCommand
                                     15 	.globl _i2cInitialiseMaster
                                     16 	.globl _memset
                                     17 	.globl _S1SM0_FE
                                     18 	.globl _T1IE
                                     19 	.globl _T0IE
                                     20 	.globl _T1RUN
                                     21 	.globl _T0RUN
                                     22 	.globl _CY
                                     23 	.globl _AC
                                     24 	.globl _F0
                                     25 	.globl _RS1
                                     26 	.globl _RS0
                                     27 	.globl _OV
                                     28 	.globl _F1
                                     29 	.globl _P
                                     30 	.globl _EA
                                     31 	.globl _INT1IE
                                     32 	.globl _INT0IE
                                     33 	.globl _INT1TR
                                     34 	.globl _INT0TR
                                     35 	.globl _P5_5
                                     36 	.globl _P5_4
                                     37 	.globl _P5_3
                                     38 	.globl _P5_2
                                     39 	.globl _P5_1
                                     40 	.globl _P5_0
                                     41 	.globl _P3_7
                                     42 	.globl _P3_6
                                     43 	.globl _P3_5
                                     44 	.globl _P3_4
                                     45 	.globl _P3_3
                                     46 	.globl _P3_2
                                     47 	.globl _P3_1
                                     48 	.globl _P3_0
                                     49 	.globl _P2_7
                                     50 	.globl _P2_6
                                     51 	.globl _P2_5
                                     52 	.globl _P2_4
                                     53 	.globl _P2_3
                                     54 	.globl _P2_2
                                     55 	.globl _P2_1
                                     56 	.globl _P2_0
                                     57 	.globl _P1_7
                                     58 	.globl _P1_6
                                     59 	.globl _P1_5
                                     60 	.globl _P1_4
                                     61 	.globl _P1_3
                                     62 	.globl _P1_2
                                     63 	.globl _P1_1
                                     64 	.globl _P1_0
                                     65 	.globl _USBADR
                                     66 	.globl _USBCON
                                     67 	.globl _USBDAT
                                     68 	.globl _USBCLK
                                     69 	.globl _S4BUF
                                     70 	.globl _S4CON
                                     71 	.globl _S3BUF
                                     72 	.globl _S3CON
                                     73 	.globl _S2BUF
                                     74 	.globl _S2CON
                                     75 	.globl _S1BUF
                                     76 	.globl _S1CON
                                     77 	.globl _SADEN
                                     78 	.globl _SADDR
                                     79 	.globl _AUXINTIF
                                     80 	.globl _T3
                                     81 	.globl _T3L
                                     82 	.globl _T3H
                                     83 	.globl _T4
                                     84 	.globl _T4L
                                     85 	.globl _T4H
                                     86 	.globl _T4T3M
                                     87 	.globl _WDT_CONTR
                                     88 	.globl _AUXR
                                     89 	.globl _T2
                                     90 	.globl _T2H
                                     91 	.globl _T2L
                                     92 	.globl _T1
                                     93 	.globl _T1H
                                     94 	.globl _T1L
                                     95 	.globl _T0
                                     96 	.globl _T0H
                                     97 	.globl _T0L
                                     98 	.globl _TMOD
                                     99 	.globl _TCON
                                    100 	.globl _IRTRIM
                                    101 	.globl _LIRTRIM
                                    102 	.globl _IRCBAND
                                    103 	.globl _SPDAT
                                    104 	.globl _SPCTL
                                    105 	.globl _SPSTAT
                                    106 	.globl _WKTC
                                    107 	.globl _WKTCH
                                    108 	.globl _WKTCL
                                    109 	.globl _BUS_SPEED
                                    110 	.globl _P_SW2
                                    111 	.globl _P_SW1
                                    112 	.globl _RSTCFG
                                    113 	.globl _PCON
                                    114 	.globl _B
                                    115 	.globl _ACC
                                    116 	.globl _PSW
                                    117 	.globl _SP
                                    118 	.globl _IP3H
                                    119 	.globl _IP3L
                                    120 	.globl _IP2H
                                    121 	.globl _IP2L
                                    122 	.globl _IE2
                                    123 	.globl _IP1H
                                    124 	.globl _IP1L
                                    125 	.globl _IE1
                                    126 	.globl _INT_CLKO
                                    127 	.globl _IAP_TPS
                                    128 	.globl _IAP_CONTR
                                    129 	.globl _IAP_TRIG
                                    130 	.globl _IAP_CMD
                                    131 	.globl _IAP_ADDR
                                    132 	.globl _IAP_ADDRL
                                    133 	.globl _IAP_ADDRH
                                    134 	.globl _IAP_DATA
                                    135 	.globl _P5M0
                                    136 	.globl _P5M1
                                    137 	.globl _P5
                                    138 	.globl _P3M0
                                    139 	.globl _P3M1
                                    140 	.globl _P3
                                    141 	.globl _P2M0
                                    142 	.globl _P2M1
                                    143 	.globl _P2
                                    144 	.globl _P1M0
                                    145 	.globl _P1M1
                                    146 	.globl _P1
                                    147 	.globl _TA
                                    148 	.globl _DPH1
                                    149 	.globl _DPL1
                                    150 	.globl _DPS
                                    151 	.globl _DP
                                    152 	.globl _DPH
                                    153 	.globl _DPL
                                    154 	.globl _CMPCR2
                                    155 	.globl _CMPCR1
                                    156 	.globl _DMA_ADC_AMT
                                    157 	.globl _ADCCFG
                                    158 	.globl _ADC_RES
                                    159 	.globl _ADC_RESL
                                    160 	.globl _ADC_RESH
                                    161 	.globl _ADC_CONTR
                                    162 	.globl _SSD1306_DrawLine_PARM_4
                                    163 	.globl _SSD1306_DrawLine_PARM_3
                                    164 	.globl _SSD1306_DrawLine_PARM_2
                                    165 	.globl _SSD1306_DrawPixel_PARM_2
                                    166 	.globl _SSD1306_SetPosition_PARM_2
                                    167 	.globl __counter
                                    168 	.globl _DMA_UR4R_TXAL
                                    169 	.globl _DMA_UR4R_TXAH
                                    170 	.globl _DMA_UR4R_DONE
                                    171 	.globl _DMA_UR4R_AMT
                                    172 	.globl _DMA_UR4R_STA
                                    173 	.globl _DMA_UR4R_CR
                                    174 	.globl _DMA_UR4R_CFG
                                    175 	.globl _DMA_UR4T_TXAL
                                    176 	.globl _DMA_UR4T_TXAH
                                    177 	.globl _DMA_UR4T_DONE
                                    178 	.globl _DMA_UR4T_AMT
                                    179 	.globl _DMA_UR4T_STA
                                    180 	.globl _DMA_UR4T_CR
                                    181 	.globl _DMA_UR4T_CFG
                                    182 	.globl _DMA_UR3R_TXAL
                                    183 	.globl _DMA_UR3R_TXAH
                                    184 	.globl _DMA_UR3R_DONE
                                    185 	.globl _DMA_UR3R_AMT
                                    186 	.globl _DMA_UR3R_STA
                                    187 	.globl _DMA_UR3R_CR
                                    188 	.globl _DMA_UR3R_CFG
                                    189 	.globl _DMA_UR3T_TXAL
                                    190 	.globl _DMA_UR3T_TXAH
                                    191 	.globl _DMA_UR3T_DONE
                                    192 	.globl _DMA_UR3T_AMT
                                    193 	.globl _DMA_UR3T_STA
                                    194 	.globl _DMA_UR3T_CR
                                    195 	.globl _DMA_UR3T_CFG
                                    196 	.globl _DMA_UR2R_TXAL
                                    197 	.globl _DMA_UR2R_TXAH
                                    198 	.globl _DMA_UR2R_DONE
                                    199 	.globl _DMA_UR2R_AMT
                                    200 	.globl _DMA_UR2R_STA
                                    201 	.globl _DMA_UR2R_CR
                                    202 	.globl _DMA_UR2R_CFG
                                    203 	.globl _DMA_UR2T_TXAL
                                    204 	.globl _DMA_UR2T_TXAH
                                    205 	.globl _DMA_UR2T_DONE
                                    206 	.globl _DMA_UR2T_AMT
                                    207 	.globl _DMA_UR2T_STA
                                    208 	.globl _DMA_UR2T_CR
                                    209 	.globl _DMA_UR2T_CFG
                                    210 	.globl _DMA_UR1R_TXAL
                                    211 	.globl _DMA_UR1R_TXAH
                                    212 	.globl _DMA_UR1R_DONE
                                    213 	.globl _DMA_UR1R_AMT
                                    214 	.globl _DMA_UR1R_STA
                                    215 	.globl _DMA_UR1R_CR
                                    216 	.globl _DMA_UR1R_CFG
                                    217 	.globl _DMA_UR1T_TXAL
                                    218 	.globl _DMA_UR1T_TXAH
                                    219 	.globl _DMA_UR1T_DONE
                                    220 	.globl _DMA_URTX_AMT
                                    221 	.globl _DMA_UR1T_STA
                                    222 	.globl _DMA_UR1T_CR
                                    223 	.globl _DMA_UR1T_CFG
                                    224 	.globl _TM4PS
                                    225 	.globl _TM3PS
                                    226 	.globl _TM2PS
                                    227 	.globl _IRC48MCR
                                    228 	.globl _IRCDB
                                    229 	.globl _MCLKOCR
                                    230 	.globl _CKSEL
                                    231 	.globl _IRC32KCR
                                    232 	.globl _XOSCCR
                                    233 	.globl _HIRCCR
                                    234 	.globl _CLKDIV
                                    235 	.globl _DMA_SPI_CFG2
                                    236 	.globl _DMA_SPI_RXAL
                                    237 	.globl _DMA_SPI_RXAH
                                    238 	.globl _DMA_SPI_TXAL
                                    239 	.globl _DMA_SPI_TXAH
                                    240 	.globl _DMA_SPI_DONE
                                    241 	.globl _DMA_SPI_AMT
                                    242 	.globl _DMA_SPI_STA
                                    243 	.globl _DMA_SPI_CR
                                    244 	.globl _DMA_SPI_CFG
                                    245 	.globl _SSEC
                                    246 	.globl _SEC
                                    247 	.globl _MIN
                                    248 	.globl _HOUR
                                    249 	.globl _DAY
                                    250 	.globl _MONTH
                                    251 	.globl _YEAR
                                    252 	.globl _INISSEC
                                    253 	.globl _INISEC
                                    254 	.globl _INIMIN
                                    255 	.globl _INIHOUR
                                    256 	.globl _INIDAY
                                    257 	.globl _INIMONTH
                                    258 	.globl _INIYEAR
                                    259 	.globl _ALASSEC
                                    260 	.globl _ALASEC
                                    261 	.globl _ALAMIN
                                    262 	.globl _ALAHOUR
                                    263 	.globl _RTCIF
                                    264 	.globl _RTCIEN
                                    265 	.globl _RTCCFG
                                    266 	.globl _RTCCR
                                    267 	.globl _PWMB_OISR
                                    268 	.globl _PWMB_DTR
                                    269 	.globl _PWMB_BKR
                                    270 	.globl _PWMB_CCR4L
                                    271 	.globl _PWMB_CCR4H
                                    272 	.globl _PWMB_CCR3L
                                    273 	.globl _PWMB_CCR3H
                                    274 	.globl _PWMB_CCR2L
                                    275 	.globl _PWMB_CCR2H
                                    276 	.globl _PWMB_CCR1L
                                    277 	.globl _PWMB_CCR1H
                                    278 	.globl _PWMB_RCR
                                    279 	.globl _PWMB_ARRL
                                    280 	.globl _PWMB_ARRH
                                    281 	.globl _PWMB_PSCRL
                                    282 	.globl _PWMB_PSCRH
                                    283 	.globl _PWMB_CNTRL
                                    284 	.globl _PWMB_CNTRH
                                    285 	.globl _PWMB_CCER2
                                    286 	.globl _PWMB_CCER1
                                    287 	.globl _PWMB_CCMR4
                                    288 	.globl _PWMB_CCMR3
                                    289 	.globl _PWMB_CCMR2
                                    290 	.globl _PWMB_CCMR1
                                    291 	.globl _PWMB_EGR
                                    292 	.globl _PWMB_SR2
                                    293 	.globl _PWMB_SR1
                                    294 	.globl _PWMB_IER
                                    295 	.globl _PWMB_ETR
                                    296 	.globl _PWMB_SMCR
                                    297 	.globl _PWMB_CR2
                                    298 	.globl _PWMB_CR1
                                    299 	.globl _PWMA_OISR
                                    300 	.globl _PWMA_DTR
                                    301 	.globl _PWMA_BKR
                                    302 	.globl _PWMA_CCR4L
                                    303 	.globl _PWMA_CCR4H
                                    304 	.globl _PWMA_CCR3L
                                    305 	.globl _PWMA_CCR3H
                                    306 	.globl _PWMA_CCR2L
                                    307 	.globl _PWMA_CCR2H
                                    308 	.globl _PWMA_CCR1L
                                    309 	.globl _PWMA_CCR1H
                                    310 	.globl _PWMA_RCR
                                    311 	.globl _PWMA_ARRL
                                    312 	.globl _PWMA_ARRH
                                    313 	.globl _PWMA_PSCRL
                                    314 	.globl _PWMA_PSCRH
                                    315 	.globl _PWMA_CNTRL
                                    316 	.globl _PWMA_CNTRH
                                    317 	.globl _PWMA_CCER2
                                    318 	.globl _PWMA_CCER1
                                    319 	.globl _PWMA_CCMR4
                                    320 	.globl _PWMA_CCMR3
                                    321 	.globl _PWMA_CCMR2
                                    322 	.globl _PWMA_CCMR1
                                    323 	.globl _PWMA_EGR
                                    324 	.globl _PWMA_SR2
                                    325 	.globl _PWMA_SR1
                                    326 	.globl _PWMA_IER
                                    327 	.globl _PWMA_ETR
                                    328 	.globl _PWMA_SMCR
                                    329 	.globl _PWMA_CR2
                                    330 	.globl _PWMA_CR1
                                    331 	.globl _PWMB_IOAUX
                                    332 	.globl _PWMB_PS
                                    333 	.globl _PWMB_ENO
                                    334 	.globl _PWMB_ETRPS
                                    335 	.globl _PWMA_IOAUX
                                    336 	.globl _PWMA_PS
                                    337 	.globl _PWMA_ENO
                                    338 	.globl _PWMA_ETRPS
                                    339 	.globl _RSTFLAG
                                    340 	.globl _SPFUNC
                                    341 	.globl _OPCON
                                    342 	.globl _ARCON
                                    343 	.globl _MD4
                                    344 	.globl _MD5
                                    345 	.globl _MD0
                                    346 	.globl _MD1
                                    347 	.globl _MD2
                                    348 	.globl _MD3
                                    349 	.globl _DMA_LCM_RXAL
                                    350 	.globl _DMA_LCM_RXAH
                                    351 	.globl _DMA_LCM_TXAL
                                    352 	.globl _DMA_LCM_TXAH
                                    353 	.globl _DMA_LCM_DONE
                                    354 	.globl _DMA_LCM_AMT
                                    355 	.globl _DMA_LCM_STA
                                    356 	.globl _DMA_LCM_CR
                                    357 	.globl _DMA_LCM_CFG
                                    358 	.globl _LCMIDDAT
                                    359 	.globl _LCMIDDATH
                                    360 	.globl _LCMIDDATL
                                    361 	.globl _LCMSTA
                                    362 	.globl _LCMCR
                                    363 	.globl _LCMCFG2
                                    364 	.globl _LCMCFG
                                    365 	.globl _I2CMSAUX
                                    366 	.globl _I2CRXD
                                    367 	.globl _I2CTXD
                                    368 	.globl _I2CSLADR
                                    369 	.globl _I2CSLST
                                    370 	.globl _I2CSLCR
                                    371 	.globl _I2CMSST
                                    372 	.globl _I2CMSCR
                                    373 	.globl _I2CCFG
                                    374 	.globl _PINIPH
                                    375 	.globl _PINIPL
                                    376 	.globl _P5IE
                                    377 	.globl _P5DR
                                    378 	.globl _P5SR
                                    379 	.globl _P5NCS
                                    380 	.globl _P5PU
                                    381 	.globl _P5WKUE
                                    382 	.globl _P5IM1
                                    383 	.globl _P5IM0
                                    384 	.globl _P5INTF
                                    385 	.globl _P5INTE
                                    386 	.globl _P3IE
                                    387 	.globl _P3DR
                                    388 	.globl _P3SR
                                    389 	.globl _P3NCS
                                    390 	.globl _P3PU
                                    391 	.globl _P3WKUE
                                    392 	.globl _P3IM1
                                    393 	.globl _P3IM0
                                    394 	.globl _P3INTF
                                    395 	.globl _P3INTE
                                    396 	.globl _P2IE
                                    397 	.globl _P2DR
                                    398 	.globl _P2SR
                                    399 	.globl _P2NCS
                                    400 	.globl _P2PU
                                    401 	.globl _P2WKUE
                                    402 	.globl _P2IM1
                                    403 	.globl _P2IM0
                                    404 	.globl _P2INTF
                                    405 	.globl _P2INTE
                                    406 	.globl _P1IE
                                    407 	.globl _P1DR
                                    408 	.globl _P1SR
                                    409 	.globl _P1NCS
                                    410 	.globl _P1PU
                                    411 	.globl _P1WKUE
                                    412 	.globl _P1IM1
                                    413 	.globl _P1IM0
                                    414 	.globl _P1INTF
                                    415 	.globl _P1INTE
                                    416 	.globl _DMA_M2M_RXAL
                                    417 	.globl _DMA_M2M_RXAH
                                    418 	.globl _DMA_M2M_TXAL
                                    419 	.globl _DMA_M2M_TXAH
                                    420 	.globl _DMA_M2M_DONE
                                    421 	.globl _DMA_M2M_AMT
                                    422 	.globl _DMA_M2M_STA
                                    423 	.globl _DMA_M2M_CR
                                    424 	.globl _DMA_M2M_CFG
                                    425 	.globl _CMPEXCFG
                                    426 	.globl _DMA_ADC_CHSW1
                                    427 	.globl _DMA_ADC_CHSW0
                                    428 	.globl _DMA_ADC_CFG2
                                    429 	.globl _DMA_ADC_RXAL
                                    430 	.globl _DMA_ADC_RXAH
                                    431 	.globl _DMA_ADC_STA
                                    432 	.globl _DMA_ADC_CR
                                    433 	.globl _DMA_ADC_CFG
                                    434 	.globl _ADCEXCFG
                                    435 	.globl _ADCTIM
                                    436 	.globl _SSD1306_Init
                                    437 	.globl _SSD1306_NormalScreen
                                    438 	.globl _SSD1306_InverseScreen
                                    439 	.globl _SSD1306_UpdateScreen
                                    440 	.globl _SSD1306_ClearScreen
                                    441 	.globl _SSD1306_SetPosition
                                    442 	.globl _SSD1306_UpdatePosition
                                    443 	.globl _SSD1306_DrawChar
                                    444 	.globl _SSD1306_DrawString
                                    445 	.globl _SSD1306_DrawPixel
                                    446 	.globl _SSD1306_DrawLine
                                    447 ;--------------------------------------------------------
                                    448 ; special function registers
                                    449 ;--------------------------------------------------------
                                    450 	.area RSEG    (ABS,DATA)
      000000                        451 	.org 0x0000
                           0000BC   452 _ADC_CONTR	=	0x00bc
                           0000BD   453 _ADC_RESH	=	0x00bd
                           0000BE   454 _ADC_RESL	=	0x00be
                           00BDBE   455 _ADC_RES	=	0xbdbe
                           0000DE   456 _ADCCFG	=	0x00de
                           0000FA   457 _DMA_ADC_AMT	=	0x00fa
                           0000E6   458 _CMPCR1	=	0x00e6
                           0000E7   459 _CMPCR2	=	0x00e7
                           000082   460 _DPL	=	0x0082
                           000083   461 _DPH	=	0x0083
                           008382   462 _DP	=	0x8382
                           0000E3   463 _DPS	=	0x00e3
                           0000E4   464 _DPL1	=	0x00e4
                           0000E5   465 _DPH1	=	0x00e5
                           0000AE   466 _TA	=	0x00ae
                           000090   467 _P1	=	0x0090
                           000091   468 _P1M1	=	0x0091
                           000092   469 _P1M0	=	0x0092
                           0000A0   470 _P2	=	0x00a0
                           000095   471 _P2M1	=	0x0095
                           000096   472 _P2M0	=	0x0096
                           0000B0   473 _P3	=	0x00b0
                           0000B1   474 _P3M1	=	0x00b1
                           0000B2   475 _P3M0	=	0x00b2
                           0000C8   476 _P5	=	0x00c8
                           0000C9   477 _P5M1	=	0x00c9
                           0000CA   478 _P5M0	=	0x00ca
                           0000C2   479 _IAP_DATA	=	0x00c2
                           0000C3   480 _IAP_ADDRH	=	0x00c3
                           0000C4   481 _IAP_ADDRL	=	0x00c4
                           00C3C4   482 _IAP_ADDR	=	0xc3c4
                           0000C5   483 _IAP_CMD	=	0x00c5
                           0000C6   484 _IAP_TRIG	=	0x00c6
                           0000C7   485 _IAP_CONTR	=	0x00c7
                           0000F5   486 _IAP_TPS	=	0x00f5
                           00008F   487 _INT_CLKO	=	0x008f
                           0000A8   488 _IE1	=	0x00a8
                           0000B8   489 _IP1L	=	0x00b8
                           0000B7   490 _IP1H	=	0x00b7
                           0000AF   491 _IE2	=	0x00af
                           0000B5   492 _IP2L	=	0x00b5
                           0000B6   493 _IP2H	=	0x00b6
                           0000DF   494 _IP3L	=	0x00df
                           0000EE   495 _IP3H	=	0x00ee
                           000081   496 _SP	=	0x0081
                           0000D0   497 _PSW	=	0x00d0
                           0000E0   498 _ACC	=	0x00e0
                           0000F0   499 _B	=	0x00f0
                           000087   500 _PCON	=	0x0087
                           0000FF   501 _RSTCFG	=	0x00ff
                           0000A2   502 _P_SW1	=	0x00a2
                           0000BA   503 _P_SW2	=	0x00ba
                           0000A1   504 _BUS_SPEED	=	0x00a1
                           0000AA   505 _WKTCL	=	0x00aa
                           0000AB   506 _WKTCH	=	0x00ab
                           00ABAA   507 _WKTC	=	0xabaa
                           0000CD   508 _SPSTAT	=	0x00cd
                           0000CE   509 _SPCTL	=	0x00ce
                           0000CF   510 _SPDAT	=	0x00cf
                           00009D   511 _IRCBAND	=	0x009d
                           00009E   512 _LIRTRIM	=	0x009e
                           00009F   513 _IRTRIM	=	0x009f
                           000088   514 _TCON	=	0x0088
                           000089   515 _TMOD	=	0x0089
                           00008A   516 _T0L	=	0x008a
                           00008C   517 _T0H	=	0x008c
                           008C8A   518 _T0	=	0x8c8a
                           00008B   519 _T1L	=	0x008b
                           00008D   520 _T1H	=	0x008d
                           008D8B   521 _T1	=	0x8d8b
                           0000D7   522 _T2L	=	0x00d7
                           0000D6   523 _T2H	=	0x00d6
                           00D6D7   524 _T2	=	0xd6d7
                           00008E   525 _AUXR	=	0x008e
                           0000C1   526 _WDT_CONTR	=	0x00c1
                           0000D1   527 _T4T3M	=	0x00d1
                           0000D2   528 _T4H	=	0x00d2
                           0000D3   529 _T4L	=	0x00d3
                           00D2D3   530 _T4	=	0xd2d3
                           0000D4   531 _T3H	=	0x00d4
                           0000D5   532 _T3L	=	0x00d5
                           00D4D5   533 _T3	=	0xd4d5
                           0000EF   534 _AUXINTIF	=	0x00ef
                           0000A9   535 _SADDR	=	0x00a9
                           0000B9   536 _SADEN	=	0x00b9
                           000098   537 _S1CON	=	0x0098
                           000099   538 _S1BUF	=	0x0099
                           00009A   539 _S2CON	=	0x009a
                           00009B   540 _S2BUF	=	0x009b
                           0000AC   541 _S3CON	=	0x00ac
                           0000AD   542 _S3BUF	=	0x00ad
                           000084   543 _S4CON	=	0x0084
                           000085   544 _S4BUF	=	0x0085
                           0000DC   545 _USBCLK	=	0x00dc
                           0000EC   546 _USBDAT	=	0x00ec
                           0000F4   547 _USBCON	=	0x00f4
                           0000FC   548 _USBADR	=	0x00fc
                                    549 ;--------------------------------------------------------
                                    550 ; special function bits
                                    551 ;--------------------------------------------------------
                                    552 	.area RSEG    (ABS,DATA)
      000000                        553 	.org 0x0000
                           000090   554 _P1_0	=	0x0090
                           000091   555 _P1_1	=	0x0091
                           000092   556 _P1_2	=	0x0092
                           000093   557 _P1_3	=	0x0093
                           000094   558 _P1_4	=	0x0094
                           000095   559 _P1_5	=	0x0095
                           000096   560 _P1_6	=	0x0096
                           000097   561 _P1_7	=	0x0097
                           0000A0   562 _P2_0	=	0x00a0
                           0000A1   563 _P2_1	=	0x00a1
                           0000A2   564 _P2_2	=	0x00a2
                           0000A3   565 _P2_3	=	0x00a3
                           0000A4   566 _P2_4	=	0x00a4
                           0000A5   567 _P2_5	=	0x00a5
                           0000A6   568 _P2_6	=	0x00a6
                           0000A7   569 _P2_7	=	0x00a7
                           0000B0   570 _P3_0	=	0x00b0
                           0000B1   571 _P3_1	=	0x00b1
                           0000B2   572 _P3_2	=	0x00b2
                           0000B3   573 _P3_3	=	0x00b3
                           0000B4   574 _P3_4	=	0x00b4
                           0000B5   575 _P3_5	=	0x00b5
                           0000B6   576 _P3_6	=	0x00b6
                           0000B7   577 _P3_7	=	0x00b7
                           0000C8   578 _P5_0	=	0x00c8
                           0000C9   579 _P5_1	=	0x00c9
                           0000CA   580 _P5_2	=	0x00ca
                           0000CB   581 _P5_3	=	0x00cb
                           0000CC   582 _P5_4	=	0x00cc
                           0000CD   583 _P5_5	=	0x00cd
                           000088   584 _INT0TR	=	0x0088
                           00008A   585 _INT1TR	=	0x008a
                           0000A8   586 _INT0IE	=	0x00a8
                           0000AA   587 _INT1IE	=	0x00aa
                           0000AF   588 _EA	=	0x00af
                           0000D0   589 _P	=	0x00d0
                           0000D1   590 _F1	=	0x00d1
                           0000D2   591 _OV	=	0x00d2
                           0000D3   592 _RS0	=	0x00d3
                           0000D4   593 _RS1	=	0x00d4
                           0000D5   594 _F0	=	0x00d5
                           0000D6   595 _AC	=	0x00d6
                           0000D7   596 _CY	=	0x00d7
                           00008C   597 _T0RUN	=	0x008c
                           00008E   598 _T1RUN	=	0x008e
                           0000A9   599 _T0IE	=	0x00a9
                           0000AB   600 _T1IE	=	0x00ab
                           00009F   601 _S1SM0_FE	=	0x009f
                                    602 ;--------------------------------------------------------
                                    603 ; overlayable register banks
                                    604 ;--------------------------------------------------------
                                    605 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        606 	.ds 8
                                    607 ;--------------------------------------------------------
                                    608 ; internal ram data
                                    609 ;--------------------------------------------------------
                                    610 	.area DSEG    (DATA)
      00002A                        611 _SSD1306_DrawLine_sloc0_1_0:
      00002A                        612 	.ds 2
      00002C                        613 _SSD1306_DrawLine_sloc1_1_0:
      00002C                        614 	.ds 1
      00002D                        615 _SSD1306_DrawLine_sloc2_1_0:
      00002D                        616 	.ds 2
      00002F                        617 _SSD1306_DrawLine_sloc3_1_0:
      00002F                        618 	.ds 2
      000031                        619 _SSD1306_DrawLine_sloc4_1_0:
      000031                        620 	.ds 1
      000032                        621 _SSD1306_DrawLine_sloc5_1_0:
      000032                        622 	.ds 2
      000034                        623 _SSD1306_DrawLine_sloc6_1_0:
      000034                        624 	.ds 2
                                    625 ;--------------------------------------------------------
                                    626 ; overlayable items in internal ram 
                                    627 ;--------------------------------------------------------
                                    628 ;--------------------------------------------------------
                                    629 ; indirectly addressable internal ram data
                                    630 ;--------------------------------------------------------
                                    631 	.area ISEG    (DATA)
                                    632 ;--------------------------------------------------------
                                    633 ; absolute internal ram data
                                    634 ;--------------------------------------------------------
                                    635 	.area IABS    (ABS,DATA)
                                    636 	.area IABS    (ABS,DATA)
                                    637 ;--------------------------------------------------------
                                    638 ; bit data
                                    639 ;--------------------------------------------------------
                                    640 	.area BSEG    (BIT)
                                    641 ;--------------------------------------------------------
                                    642 ; paged external ram data
                                    643 ;--------------------------------------------------------
                                    644 	.area PSEG    (PAG,XDATA)
                                    645 ;--------------------------------------------------------
                                    646 ; external ram data
                                    647 ;--------------------------------------------------------
                                    648 	.area XSEG    (XDATA)
                           00FEA8   649 _ADCTIM	=	0xfea8
                           00FEAD   650 _ADCEXCFG	=	0xfead
                           00FA10   651 _DMA_ADC_CFG	=	0xfa10
                           00FA11   652 _DMA_ADC_CR	=	0xfa11
                           00FA12   653 _DMA_ADC_STA	=	0xfa12
                           00FA17   654 _DMA_ADC_RXAH	=	0xfa17
                           00FA18   655 _DMA_ADC_RXAL	=	0xfa18
                           00FA19   656 _DMA_ADC_CFG2	=	0xfa19
                           00FA1A   657 _DMA_ADC_CHSW0	=	0xfa1a
                           00FA1B   658 _DMA_ADC_CHSW1	=	0xfa1b
                           00FEAE   659 _CMPEXCFG	=	0xfeae
                           00FA00   660 _DMA_M2M_CFG	=	0xfa00
                           00FA01   661 _DMA_M2M_CR	=	0xfa01
                           00FA02   662 _DMA_M2M_STA	=	0xfa02
                           00FA03   663 _DMA_M2M_AMT	=	0xfa03
                           00FA04   664 _DMA_M2M_DONE	=	0xfa04
                           00FA05   665 _DMA_M2M_TXAH	=	0xfa05
                           00FA06   666 _DMA_M2M_TXAL	=	0xfa06
                           00FA07   667 _DMA_M2M_RXAH	=	0xfa07
                           00FA08   668 _DMA_M2M_RXAL	=	0xfa08
                           00FD01   669 _P1INTE	=	0xfd01
                           00FD11   670 _P1INTF	=	0xfd11
                           00FD21   671 _P1IM0	=	0xfd21
                           00FD31   672 _P1IM1	=	0xfd31
                           00FD41   673 _P1WKUE	=	0xfd41
                           00FE11   674 _P1PU	=	0xfe11
                           00FE19   675 _P1NCS	=	0xfe19
                           00FE21   676 _P1SR	=	0xfe21
                           00FE29   677 _P1DR	=	0xfe29
                           00FE31   678 _P1IE	=	0xfe31
                           00FD02   679 _P2INTE	=	0xfd02
                           00FD12   680 _P2INTF	=	0xfd12
                           00FD22   681 _P2IM0	=	0xfd22
                           00FD32   682 _P2IM1	=	0xfd32
                           00FD42   683 _P2WKUE	=	0xfd42
                           00FE12   684 _P2PU	=	0xfe12
                           00FE1A   685 _P2NCS	=	0xfe1a
                           00FE22   686 _P2SR	=	0xfe22
                           00FE2A   687 _P2DR	=	0xfe2a
                           00FE32   688 _P2IE	=	0xfe32
                           00FD03   689 _P3INTE	=	0xfd03
                           00FD13   690 _P3INTF	=	0xfd13
                           00FD23   691 _P3IM0	=	0xfd23
                           00FD33   692 _P3IM1	=	0xfd33
                           00FD43   693 _P3WKUE	=	0xfd43
                           00FE13   694 _P3PU	=	0xfe13
                           00FE1B   695 _P3NCS	=	0xfe1b
                           00FE23   696 _P3SR	=	0xfe23
                           00FE2B   697 _P3DR	=	0xfe2b
                           00FE33   698 _P3IE	=	0xfe33
                           00FD05   699 _P5INTE	=	0xfd05
                           00FD15   700 _P5INTF	=	0xfd15
                           00FD25   701 _P5IM0	=	0xfd25
                           00FD35   702 _P5IM1	=	0xfd35
                           00FD45   703 _P5WKUE	=	0xfd45
                           00FE15   704 _P5PU	=	0xfe15
                           00FE1D   705 _P5NCS	=	0xfe1d
                           00FE25   706 _P5SR	=	0xfe25
                           00FE2D   707 _P5DR	=	0xfe2d
                           00FE35   708 _P5IE	=	0xfe35
                           00FD60   709 _PINIPL	=	0xfd60
                           00FD61   710 _PINIPH	=	0xfd61
                           00FE80   711 _I2CCFG	=	0xfe80
                           00FE81   712 _I2CMSCR	=	0xfe81
                           00FE82   713 _I2CMSST	=	0xfe82
                           00FE83   714 _I2CSLCR	=	0xfe83
                           00FE84   715 _I2CSLST	=	0xfe84
                           00FE85   716 _I2CSLADR	=	0xfe85
                           00FE86   717 _I2CTXD	=	0xfe86
                           00FE87   718 _I2CRXD	=	0xfe87
                           00FE88   719 _I2CMSAUX	=	0xfe88
                           00FE50   720 _LCMCFG	=	0xfe50
                           00FE51   721 _LCMCFG2	=	0xfe51
                           00FE52   722 _LCMCR	=	0xfe52
                           00FE53   723 _LCMSTA	=	0xfe53
                           00FE54   724 _LCMIDDATL	=	0xfe54
                           00FE55   725 _LCMIDDATH	=	0xfe55
                           00FE54   726 _LCMIDDAT	=	0xfe54
                           00FA70   727 _DMA_LCM_CFG	=	0xfa70
                           00FA71   728 _DMA_LCM_CR	=	0xfa71
                           00FA72   729 _DMA_LCM_STA	=	0xfa72
                           00FA73   730 _DMA_LCM_AMT	=	0xfa73
                           00FA74   731 _DMA_LCM_DONE	=	0xfa74
                           00FA75   732 _DMA_LCM_TXAH	=	0xfa75
                           00FA76   733 _DMA_LCM_TXAL	=	0xfa76
                           00FA77   734 _DMA_LCM_RXAH	=	0xfa77
                           00FA78   735 _DMA_LCM_RXAL	=	0xfa78
                           00FCF0   736 _MD3	=	0xfcf0
                           00FCF1   737 _MD2	=	0xfcf1
                           00FCF2   738 _MD1	=	0xfcf2
                           00FCF3   739 _MD0	=	0xfcf3
                           00FCF4   740 _MD5	=	0xfcf4
                           00FCF5   741 _MD4	=	0xfcf5
                           00FCF6   742 _ARCON	=	0xfcf6
                           00FCF7   743 _OPCON	=	0xfcf7
                           00FE08   744 _SPFUNC	=	0xfe08
                           00FE09   745 _RSTFLAG	=	0xfe09
                           00FEB0   746 _PWMA_ETRPS	=	0xfeb0
                           00FEB1   747 _PWMA_ENO	=	0xfeb1
                           00FEB2   748 _PWMA_PS	=	0xfeb2
                           00FEB3   749 _PWMA_IOAUX	=	0xfeb3
                           00FEB4   750 _PWMB_ETRPS	=	0xfeb4
                           00FEB5   751 _PWMB_ENO	=	0xfeb5
                           00FEB6   752 _PWMB_PS	=	0xfeb6
                           00FEB7   753 _PWMB_IOAUX	=	0xfeb7
                           00FEC0   754 _PWMA_CR1	=	0xfec0
                           00FEC1   755 _PWMA_CR2	=	0xfec1
                           00FEC2   756 _PWMA_SMCR	=	0xfec2
                           00FEC3   757 _PWMA_ETR	=	0xfec3
                           00FEC4   758 _PWMA_IER	=	0xfec4
                           00FEC5   759 _PWMA_SR1	=	0xfec5
                           00FEC6   760 _PWMA_SR2	=	0xfec6
                           00FEC7   761 _PWMA_EGR	=	0xfec7
                           00FEC8   762 _PWMA_CCMR1	=	0xfec8
                           00FEC9   763 _PWMA_CCMR2	=	0xfec9
                           00FECA   764 _PWMA_CCMR3	=	0xfeca
                           00FECB   765 _PWMA_CCMR4	=	0xfecb
                           00FECC   766 _PWMA_CCER1	=	0xfecc
                           00FECD   767 _PWMA_CCER2	=	0xfecd
                           00FECE   768 _PWMA_CNTRH	=	0xfece
                           00FECF   769 _PWMA_CNTRL	=	0xfecf
                           00FED0   770 _PWMA_PSCRH	=	0xfed0
                           00FED1   771 _PWMA_PSCRL	=	0xfed1
                           00FED2   772 _PWMA_ARRH	=	0xfed2
                           00FED3   773 _PWMA_ARRL	=	0xfed3
                           00FED4   774 _PWMA_RCR	=	0xfed4
                           00FED5   775 _PWMA_CCR1H	=	0xfed5
                           00FED6   776 _PWMA_CCR1L	=	0xfed6
                           00FED7   777 _PWMA_CCR2H	=	0xfed7
                           00FED8   778 _PWMA_CCR2L	=	0xfed8
                           00FED9   779 _PWMA_CCR3H	=	0xfed9
                           00FEDA   780 _PWMA_CCR3L	=	0xfeda
                           00FEDB   781 _PWMA_CCR4H	=	0xfedb
                           00FEDC   782 _PWMA_CCR4L	=	0xfedc
                           00FEDD   783 _PWMA_BKR	=	0xfedd
                           00FEDE   784 _PWMA_DTR	=	0xfede
                           00FEDF   785 _PWMA_OISR	=	0xfedf
                           00FEE0   786 _PWMB_CR1	=	0xfee0
                           00FEE1   787 _PWMB_CR2	=	0xfee1
                           00FEE2   788 _PWMB_SMCR	=	0xfee2
                           00FEE3   789 _PWMB_ETR	=	0xfee3
                           00FEE4   790 _PWMB_IER	=	0xfee4
                           00FEE5   791 _PWMB_SR1	=	0xfee5
                           00FEE6   792 _PWMB_SR2	=	0xfee6
                           00FEE7   793 _PWMB_EGR	=	0xfee7
                           00FEE8   794 _PWMB_CCMR1	=	0xfee8
                           00FEE9   795 _PWMB_CCMR2	=	0xfee9
                           00FEEA   796 _PWMB_CCMR3	=	0xfeea
                           00FEEB   797 _PWMB_CCMR4	=	0xfeeb
                           00FEEC   798 _PWMB_CCER1	=	0xfeec
                           00FEED   799 _PWMB_CCER2	=	0xfeed
                           00FEEE   800 _PWMB_CNTRH	=	0xfeee
                           00FEEF   801 _PWMB_CNTRL	=	0xfeef
                           00FEF0   802 _PWMB_PSCRH	=	0xfef0
                           00FEF1   803 _PWMB_PSCRL	=	0xfef1
                           00FEF2   804 _PWMB_ARRH	=	0xfef2
                           00FEF3   805 _PWMB_ARRL	=	0xfef3
                           00FEF4   806 _PWMB_RCR	=	0xfef4
                           00FEF5   807 _PWMB_CCR1H	=	0xfef5
                           00FEF6   808 _PWMB_CCR1L	=	0xfef6
                           00FEF7   809 _PWMB_CCR2H	=	0xfef7
                           00FEF8   810 _PWMB_CCR2L	=	0xfef8
                           00FEF9   811 _PWMB_CCR3H	=	0xfef9
                           00FEFA   812 _PWMB_CCR3L	=	0xfefa
                           00FEFB   813 _PWMB_CCR4H	=	0xfefb
                           00FEFC   814 _PWMB_CCR4L	=	0xfefc
                           00FEFD   815 _PWMB_BKR	=	0xfefd
                           00FEFE   816 _PWMB_DTR	=	0xfefe
                           00FEFF   817 _PWMB_OISR	=	0xfeff
                           00FE60   818 _RTCCR	=	0xfe60
                           00FE61   819 _RTCCFG	=	0xfe61
                           00FE62   820 _RTCIEN	=	0xfe62
                           00FE63   821 _RTCIF	=	0xfe63
                           00FE64   822 _ALAHOUR	=	0xfe64
                           00FE65   823 _ALAMIN	=	0xfe65
                           00FE66   824 _ALASEC	=	0xfe66
                           00FE67   825 _ALASSEC	=	0xfe67
                           00FE68   826 _INIYEAR	=	0xfe68
                           00FE69   827 _INIMONTH	=	0xfe69
                           00FE6A   828 _INIDAY	=	0xfe6a
                           00FE6B   829 _INIHOUR	=	0xfe6b
                           00FE6C   830 _INIMIN	=	0xfe6c
                           00FE6D   831 _INISEC	=	0xfe6d
                           00FE6E   832 _INISSEC	=	0xfe6e
                           00FE70   833 _YEAR	=	0xfe70
                           00FE71   834 _MONTH	=	0xfe71
                           00FE72   835 _DAY	=	0xfe72
                           00FE73   836 _HOUR	=	0xfe73
                           00FE74   837 _MIN	=	0xfe74
                           00FE75   838 _SEC	=	0xfe75
                           00FE76   839 _SSEC	=	0xfe76
                           00FA20   840 _DMA_SPI_CFG	=	0xfa20
                           00FA21   841 _DMA_SPI_CR	=	0xfa21
                           00FA22   842 _DMA_SPI_STA	=	0xfa22
                           00FA23   843 _DMA_SPI_AMT	=	0xfa23
                           00FA24   844 _DMA_SPI_DONE	=	0xfa24
                           00FA25   845 _DMA_SPI_TXAH	=	0xfa25
                           00FA26   846 _DMA_SPI_TXAL	=	0xfa26
                           00FA27   847 _DMA_SPI_RXAH	=	0xfa27
                           00FA28   848 _DMA_SPI_RXAL	=	0xfa28
                           00FA29   849 _DMA_SPI_CFG2	=	0xfa29
                           00FE01   850 _CLKDIV	=	0xfe01
                           00FE02   851 _HIRCCR	=	0xfe02
                           00FE03   852 _XOSCCR	=	0xfe03
                           00FE04   853 _IRC32KCR	=	0xfe04
                           00FE00   854 _CKSEL	=	0xfe00
                           00FE05   855 _MCLKOCR	=	0xfe05
                           00FE06   856 _IRCDB	=	0xfe06
                           00FE07   857 _IRC48MCR	=	0xfe07
                           00FEA2   858 _TM2PS	=	0xfea2
                           00FEA3   859 _TM3PS	=	0xfea3
                           00FEA4   860 _TM4PS	=	0xfea4
                           00FA30   861 _DMA_UR1T_CFG	=	0xfa30
                           00FA31   862 _DMA_UR1T_CR	=	0xfa31
                           00FA32   863 _DMA_UR1T_STA	=	0xfa32
                           00FA33   864 _DMA_URTX_AMT	=	0xfa33
                           00FA34   865 _DMA_UR1T_DONE	=	0xfa34
                           00FA35   866 _DMA_UR1T_TXAH	=	0xfa35
                           00FA36   867 _DMA_UR1T_TXAL	=	0xfa36
                           00FA38   868 _DMA_UR1R_CFG	=	0xfa38
                           00FA39   869 _DMA_UR1R_CR	=	0xfa39
                           00FA3A   870 _DMA_UR1R_STA	=	0xfa3a
                           00FA3B   871 _DMA_UR1R_AMT	=	0xfa3b
                           00FA3C   872 _DMA_UR1R_DONE	=	0xfa3c
                           00FA3D   873 _DMA_UR1R_TXAH	=	0xfa3d
                           00FA3E   874 _DMA_UR1R_TXAL	=	0xfa3e
                           00FA30   875 _DMA_UR2T_CFG	=	0xfa30
                           00FA31   876 _DMA_UR2T_CR	=	0xfa31
                           00FA32   877 _DMA_UR2T_STA	=	0xfa32
                           00FA33   878 _DMA_UR2T_AMT	=	0xfa33
                           00FA34   879 _DMA_UR2T_DONE	=	0xfa34
                           00FA35   880 _DMA_UR2T_TXAH	=	0xfa35
                           00FA36   881 _DMA_UR2T_TXAL	=	0xfa36
                           00FA38   882 _DMA_UR2R_CFG	=	0xfa38
                           00FA39   883 _DMA_UR2R_CR	=	0xfa39
                           00FA3A   884 _DMA_UR2R_STA	=	0xfa3a
                           00FA3B   885 _DMA_UR2R_AMT	=	0xfa3b
                           00FA3C   886 _DMA_UR2R_DONE	=	0xfa3c
                           00FA3D   887 _DMA_UR2R_TXAH	=	0xfa3d
                           00FA3E   888 _DMA_UR2R_TXAL	=	0xfa3e
                           00FA30   889 _DMA_UR3T_CFG	=	0xfa30
                           00FA31   890 _DMA_UR3T_CR	=	0xfa31
                           00FA32   891 _DMA_UR3T_STA	=	0xfa32
                           00FA33   892 _DMA_UR3T_AMT	=	0xfa33
                           00FA34   893 _DMA_UR3T_DONE	=	0xfa34
                           00FA35   894 _DMA_UR3T_TXAH	=	0xfa35
                           00FA36   895 _DMA_UR3T_TXAL	=	0xfa36
                           00FA38   896 _DMA_UR3R_CFG	=	0xfa38
                           00FA39   897 _DMA_UR3R_CR	=	0xfa39
                           00FA3A   898 _DMA_UR3R_STA	=	0xfa3a
                           00FA3B   899 _DMA_UR3R_AMT	=	0xfa3b
                           00FA3C   900 _DMA_UR3R_DONE	=	0xfa3c
                           00FA3D   901 _DMA_UR3R_TXAH	=	0xfa3d
                           00FA3E   902 _DMA_UR3R_TXAL	=	0xfa3e
                           00FA30   903 _DMA_UR4T_CFG	=	0xfa30
                           00FA31   904 _DMA_UR4T_CR	=	0xfa31
                           00FA32   905 _DMA_UR4T_STA	=	0xfa32
                           00FA33   906 _DMA_UR4T_AMT	=	0xfa33
                           00FA34   907 _DMA_UR4T_DONE	=	0xfa34
                           00FA35   908 _DMA_UR4T_TXAH	=	0xfa35
                           00FA36   909 _DMA_UR4T_TXAL	=	0xfa36
                           00FA38   910 _DMA_UR4R_CFG	=	0xfa38
                           00FA39   911 _DMA_UR4R_CR	=	0xfa39
                           00FA3A   912 _DMA_UR4R_STA	=	0xfa3a
                           00FA3B   913 _DMA_UR4R_AMT	=	0xfa3b
                           00FA3C   914 _DMA_UR4R_DONE	=	0xfa3c
                           00FA3D   915 _DMA_UR4R_TXAH	=	0xfa3d
                           00FA3E   916 _DMA_UR4R_TXAL	=	0xfa3e
      000133                        917 _uartGetCharacter_result_65536_69:
      000133                        918 	.ds 1
      000134                        919 __counter::
      000134                        920 	.ds 2
      000136                        921 _cacheMemLcd:
      000136                        922 	.ds 1024
      000536                        923 _SSD1306_Init_list_65537_150:
      000536                        924 	.ds 3
      000539                        925 _SSD1306_SetPosition_PARM_2:
      000539                        926 	.ds 1
      00053A                        927 _SSD1306_SetPosition_x_65536_162:
      00053A                        928 	.ds 1
      00053B                        929 _SSD1306_DrawChar_character_65536_169:
      00053B                        930 	.ds 1
      00053C                        931 _SSD1306_DrawString_str_65536_173:
      00053C                        932 	.ds 3
      00053F                        933 _SSD1306_DrawPixel_PARM_2:
      00053F                        934 	.ds 1
      000540                        935 _SSD1306_DrawPixel_x_65536_176:
      000540                        936 	.ds 1
      000541                        937 _SSD1306_DrawLine_PARM_2:
      000541                        938 	.ds 1
      000542                        939 _SSD1306_DrawLine_PARM_3:
      000542                        940 	.ds 1
      000543                        941 _SSD1306_DrawLine_PARM_4:
      000543                        942 	.ds 1
      000544                        943 _SSD1306_DrawLine_x1_65536_179:
      000544                        944 	.ds 1
      000545                        945 _SSD1306_DrawLine_D_65536_180:
      000545                        946 	.ds 2
      000547                        947 _SSD1306_DrawLine_delta_x_65536_180:
      000547                        948 	.ds 2
      000549                        949 _SSD1306_DrawLine_delta_y_65536_180:
      000549                        950 	.ds 2
      00054B                        951 _SSD1306_DrawLine_trace_x_65536_180:
      00054B                        952 	.ds 2
      00054D                        953 _SSD1306_DrawLine_trace_y_65536_180:
      00054D                        954 	.ds 2
                                    955 ;--------------------------------------------------------
                                    956 ; absolute external ram data
                                    957 ;--------------------------------------------------------
                                    958 	.area XABS    (ABS,XDATA)
                                    959 ;--------------------------------------------------------
                                    960 ; external initialized ram data
                                    961 ;--------------------------------------------------------
                                    962 	.area XISEG   (XDATA)
                                    963 	.area HOME    (CODE)
                                    964 	.area GSINIT0 (CODE)
                                    965 	.area GSINIT1 (CODE)
                                    966 	.area GSINIT2 (CODE)
                                    967 	.area GSINIT3 (CODE)
                                    968 	.area GSINIT4 (CODE)
                                    969 	.area GSINIT5 (CODE)
                                    970 	.area GSINIT  (CODE)
                                    971 	.area GSFINAL (CODE)
                                    972 	.area CSEG    (CODE)
                                    973 ;--------------------------------------------------------
                                    974 ; global & static initialisations
                                    975 ;--------------------------------------------------------
                                    976 	.area HOME    (CODE)
                                    977 	.area GSINIT  (CODE)
                                    978 	.area GSFINAL (CODE)
                                    979 	.area GSINIT  (CODE)
                                    980 ;--------------------------------------------------------
                                    981 ; Home
                                    982 ;--------------------------------------------------------
                                    983 	.area HOME    (CODE)
                                    984 	.area HOME    (CODE)
                                    985 ;--------------------------------------------------------
                                    986 ; code
                                    987 ;--------------------------------------------------------
                                    988 	.area CSEG    (CODE)
                                    989 ;------------------------------------------------------------
                                    990 ;Allocation info for local variables in function 'SSD1306_Init'
                                    991 ;------------------------------------------------------------
                                    992 ;list                      Allocated with name '_SSD1306_Init_list_65537_150'
                                    993 ;arguments                 Allocated with name '_SSD1306_Init_arguments_65537_150'
                                    994 ;commands                  Allocated with name '_SSD1306_Init_commands_65537_150'
                                    995 ;------------------------------------------------------------
                                    996 ;	ssd1306.c:37: void SSD1306_Init(void) { 
                                    997 ;	-----------------------------------------
                                    998 ;	 function SSD1306_Init
                                    999 ;	-----------------------------------------
      002CEB                       1000 _SSD1306_Init:
                           000007  1001 	ar7 = 0x07
                           000006  1002 	ar6 = 0x06
                           000005  1003 	ar5 = 0x05
                           000004  1004 	ar4 = 0x04
                           000003  1005 	ar3 = 0x03
                           000002  1006 	ar2 = 0x02
                           000001  1007 	ar1 = 0x01
                           000000  1008 	ar0 = 0x00
                                   1009 ;	ssd1306.c:40: i2cInitialiseMaster(0, I2C_CLOCK_400kHz);
      002CEB 90 00 F8         [24] 1010 	mov	dptr,#_i2cInitialiseMaster_PARM_2
      002CEE 74 80            [12] 1011 	mov	a,#0x80
      002CF0 F0               [24] 1012 	movx	@dptr,a
      002CF1 74 1A            [12] 1013 	mov	a,#0x1a
      002CF3 A3               [24] 1014 	inc	dptr
      002CF4 F0               [24] 1015 	movx	@dptr,a
      002CF5 74 06            [12] 1016 	mov	a,#0x06
      002CF7 A3               [24] 1017 	inc	dptr
      002CF8 F0               [24] 1018 	movx	@dptr,a
      002CF9 E4               [12] 1019 	clr	a
      002CFA A3               [24] 1020 	inc	dptr
      002CFB F0               [24] 1021 	movx	@dptr,a
      002CFC 75 82 00         [24] 1022 	mov	dpl,#0x00
      002CFF 12 26 25         [24] 1023 	lcall	_i2cInitialiseMaster
                                   1024 ;	ssd1306.c:49: const uint8_t * list = INIT_SSD1306;
                                   1025 ;	ssd1306.c:51: uint8_t commands = *list++;
      002D02 90 6B 63         [24] 1026 	mov	dptr,#_INIT_SSD1306
      002D05 E4               [12] 1027 	clr	a
      002D06 93               [24] 1028 	movc	a,@a+dptr
      002D07 FF               [12] 1029 	mov	r7,a
      002D08 90 05 36         [24] 1030 	mov	dptr,#_SSD1306_Init_list_65537_150
      002D0B 74 01            [12] 1031 	mov	a,#0x01
      002D0D 24 63            [12] 1032 	add	a,#_INIT_SSD1306
      002D0F F0               [24] 1033 	movx	@dptr,a
      002D10 E4               [12] 1034 	clr	a
      002D11 34 6B            [12] 1035 	addc	a,#(_INIT_SSD1306 >> 8)
      002D13 A3               [24] 1036 	inc	dptr
      002D14 F0               [24] 1037 	movx	@dptr,a
      002D15 74 80            [12] 1038 	mov	a,#0x80
      002D17 A3               [24] 1039 	inc	dptr
      002D18 F0               [24] 1040 	movx	@dptr,a
                                   1041 ;	ssd1306.c:54: i2cStartCommand(SSD1306_ADDRESS, I2C_WRITE);
      002D19 90 01 00         [24] 1042 	mov	dptr,#_i2cStartCommand_PARM_2
      002D1C E4               [12] 1043 	clr	a
      002D1D F0               [24] 1044 	movx	@dptr,a
      002D1E 75 82 3C         [24] 1045 	mov	dpl,#0x3c
      002D21 C0 07            [24] 1046 	push	ar7
      002D23 12 27 12         [24] 1047 	lcall	_i2cStartCommand
      002D26 D0 07            [24] 1048 	pop	ar7
                                   1049 ;	ssd1306.c:55: while (commands--) {
      002D28                       1050 00104$:
      002D28 8F 06            [24] 1051 	mov	ar6,r7
      002D2A 1F               [12] 1052 	dec	r7
      002D2B EE               [12] 1053 	mov	a,r6
      002D2C 70 03            [24] 1054 	jnz	00126$
      002D2E 02 26 A6         [24] 1055 	ljmp	_i2cStop
      002D31                       1056 00126$:
                                   1057 ;	ssd1306.c:56: i2cSendByte(SSD1306_COMMAND);
      002D31 75 82 80         [24] 1058 	mov	dpl,#0x80
      002D34 C0 07            [24] 1059 	push	ar7
      002D36 12 27 40         [24] 1060 	lcall	_i2cSendByte
                                   1061 ;	ssd1306.c:57: i2cSendByte(*list++);
      002D39 90 05 36         [24] 1062 	mov	dptr,#_SSD1306_Init_list_65537_150
      002D3C E0               [24] 1063 	movx	a,@dptr
      002D3D FC               [12] 1064 	mov	r4,a
      002D3E A3               [24] 1065 	inc	dptr
      002D3F E0               [24] 1066 	movx	a,@dptr
      002D40 FD               [12] 1067 	mov	r5,a
      002D41 A3               [24] 1068 	inc	dptr
      002D42 E0               [24] 1069 	movx	a,@dptr
      002D43 FE               [12] 1070 	mov	r6,a
      002D44 8C 82            [24] 1071 	mov	dpl,r4
      002D46 8D 83            [24] 1072 	mov	dph,r5
      002D48 8E F0            [24] 1073 	mov	b,r6
      002D4A 12 58 3E         [24] 1074 	lcall	__gptrget
      002D4D FB               [12] 1075 	mov	r3,a
      002D4E 90 05 36         [24] 1076 	mov	dptr,#_SSD1306_Init_list_65537_150
      002D51 74 01            [12] 1077 	mov	a,#0x01
      002D53 2C               [12] 1078 	add	a,r4
      002D54 F0               [24] 1079 	movx	@dptr,a
      002D55 E4               [12] 1080 	clr	a
      002D56 3D               [12] 1081 	addc	a,r5
      002D57 A3               [24] 1082 	inc	dptr
      002D58 F0               [24] 1083 	movx	@dptr,a
      002D59 EE               [12] 1084 	mov	a,r6
      002D5A A3               [24] 1085 	inc	dptr
      002D5B F0               [24] 1086 	movx	@dptr,a
      002D5C 8B 82            [24] 1087 	mov	dpl,r3
      002D5E 12 27 40         [24] 1088 	lcall	_i2cSendByte
      002D61 D0 07            [24] 1089 	pop	ar7
                                   1090 ;	ssd1306.c:58: arguments = *list++;
      002D63 90 05 36         [24] 1091 	mov	dptr,#_SSD1306_Init_list_65537_150
      002D66 E0               [24] 1092 	movx	a,@dptr
      002D67 FC               [12] 1093 	mov	r4,a
      002D68 A3               [24] 1094 	inc	dptr
      002D69 E0               [24] 1095 	movx	a,@dptr
      002D6A FD               [12] 1096 	mov	r5,a
      002D6B A3               [24] 1097 	inc	dptr
      002D6C E0               [24] 1098 	movx	a,@dptr
      002D6D FE               [12] 1099 	mov	r6,a
      002D6E 8C 82            [24] 1100 	mov	dpl,r4
      002D70 8D 83            [24] 1101 	mov	dph,r5
      002D72 8E F0            [24] 1102 	mov	b,r6
      002D74 12 58 3E         [24] 1103 	lcall	__gptrget
      002D77 FB               [12] 1104 	mov	r3,a
      002D78 90 05 36         [24] 1105 	mov	dptr,#_SSD1306_Init_list_65537_150
      002D7B 74 01            [12] 1106 	mov	a,#0x01
      002D7D 2C               [12] 1107 	add	a,r4
      002D7E F0               [24] 1108 	movx	@dptr,a
      002D7F E4               [12] 1109 	clr	a
      002D80 3D               [12] 1110 	addc	a,r5
      002D81 A3               [24] 1111 	inc	dptr
      002D82 F0               [24] 1112 	movx	@dptr,a
      002D83 EE               [12] 1113 	mov	a,r6
      002D84 A3               [24] 1114 	inc	dptr
      002D85 F0               [24] 1115 	movx	@dptr,a
                                   1116 ;	ssd1306.c:59: while (arguments--) {
      002D86 90 05 36         [24] 1117 	mov	dptr,#_SSD1306_Init_list_65537_150
      002D89 E0               [24] 1118 	movx	a,@dptr
      002D8A FC               [12] 1119 	mov	r4,a
      002D8B A3               [24] 1120 	inc	dptr
      002D8C E0               [24] 1121 	movx	a,@dptr
      002D8D FD               [12] 1122 	mov	r5,a
      002D8E A3               [24] 1123 	inc	dptr
      002D8F E0               [24] 1124 	movx	a,@dptr
      002D90 FE               [12] 1125 	mov	r6,a
      002D91                       1126 00101$:
      002D91 8B 02            [24] 1127 	mov	ar2,r3
      002D93 1B               [12] 1128 	dec	r3
      002D94 EA               [12] 1129 	mov	a,r2
      002D95 60 91            [24] 1130 	jz	00104$
                                   1131 ;	ssd1306.c:60: i2cSendByte(SSD1306_COMMAND);
      002D97 75 82 80         [24] 1132 	mov	dpl,#0x80
      002D9A C0 07            [24] 1133 	push	ar7
      002D9C C0 06            [24] 1134 	push	ar6
      002D9E C0 05            [24] 1135 	push	ar5
      002DA0 C0 04            [24] 1136 	push	ar4
      002DA2 C0 03            [24] 1137 	push	ar3
      002DA4 12 27 40         [24] 1138 	lcall	_i2cSendByte
      002DA7 D0 03            [24] 1139 	pop	ar3
      002DA9 D0 04            [24] 1140 	pop	ar4
      002DAB D0 05            [24] 1141 	pop	ar5
      002DAD D0 06            [24] 1142 	pop	ar6
                                   1143 ;	ssd1306.c:61: i2cSendByte(*list++); // argument
      002DAF 8C 82            [24] 1144 	mov	dpl,r4
      002DB1 8D 83            [24] 1145 	mov	dph,r5
      002DB3 8E F0            [24] 1146 	mov	b,r6
      002DB5 12 58 3E         [24] 1147 	lcall	__gptrget
      002DB8 FA               [12] 1148 	mov	r2,a
      002DB9 A3               [24] 1149 	inc	dptr
      002DBA AC 82            [24] 1150 	mov	r4,dpl
      002DBC AD 83            [24] 1151 	mov	r5,dph
      002DBE 90 05 36         [24] 1152 	mov	dptr,#_SSD1306_Init_list_65537_150
      002DC1 EC               [12] 1153 	mov	a,r4
      002DC2 F0               [24] 1154 	movx	@dptr,a
      002DC3 ED               [12] 1155 	mov	a,r5
      002DC4 A3               [24] 1156 	inc	dptr
      002DC5 F0               [24] 1157 	movx	@dptr,a
      002DC6 EE               [12] 1158 	mov	a,r6
      002DC7 A3               [24] 1159 	inc	dptr
      002DC8 F0               [24] 1160 	movx	@dptr,a
      002DC9 8A 82            [24] 1161 	mov	dpl,r2
      002DCB C0 06            [24] 1162 	push	ar6
      002DCD C0 05            [24] 1163 	push	ar5
      002DCF C0 04            [24] 1164 	push	ar4
      002DD1 C0 03            [24] 1165 	push	ar3
      002DD3 12 27 40         [24] 1166 	lcall	_i2cSendByte
      002DD6 D0 03            [24] 1167 	pop	ar3
      002DD8 D0 04            [24] 1168 	pop	ar4
      002DDA D0 05            [24] 1169 	pop	ar5
      002DDC D0 06            [24] 1170 	pop	ar6
      002DDE D0 07            [24] 1171 	pop	ar7
                                   1172 ;	ssd1306.c:65: i2cStop();
                                   1173 ;	ssd1306.c:67: }
      002DE0 80 AF            [24] 1174 	sjmp	00101$
                                   1175 ;------------------------------------------------------------
                                   1176 ;Allocation info for local variables in function 'SSD1306_NormalScreen'
                                   1177 ;------------------------------------------------------------
                                   1178 ;	ssd1306.c:69: void SSD1306_NormalScreen(void) {
                                   1179 ;	-----------------------------------------
                                   1180 ;	 function SSD1306_NormalScreen
                                   1181 ;	-----------------------------------------
      002DE2                       1182 _SSD1306_NormalScreen:
                                   1183 ;	ssd1306.c:70: i2cStartCommand(SSD1306_ADDRESS, I2C_WRITE);
      002DE2 90 01 00         [24] 1184 	mov	dptr,#_i2cStartCommand_PARM_2
      002DE5 E4               [12] 1185 	clr	a
      002DE6 F0               [24] 1186 	movx	@dptr,a
      002DE7 75 82 3C         [24] 1187 	mov	dpl,#0x3c
      002DEA 12 27 12         [24] 1188 	lcall	_i2cStartCommand
                                   1189 ;	ssd1306.c:71: i2cSendByte(SSD1306_COMMAND);
      002DED 75 82 80         [24] 1190 	mov	dpl,#0x80
      002DF0 12 27 40         [24] 1191 	lcall	_i2cSendByte
                                   1192 ;	ssd1306.c:72: i2cSendByte(SSD1306_DIS_NORMAL);
      002DF3 75 82 A6         [24] 1193 	mov	dpl,#0xa6
      002DF6 12 27 40         [24] 1194 	lcall	_i2cSendByte
                                   1195 ;	ssd1306.c:73: i2cStop();
                                   1196 ;	ssd1306.c:74: }
      002DF9 02 26 A6         [24] 1197 	ljmp	_i2cStop
                                   1198 ;------------------------------------------------------------
                                   1199 ;Allocation info for local variables in function 'SSD1306_InverseScreen'
                                   1200 ;------------------------------------------------------------
                                   1201 ;	ssd1306.c:76: void SSD1306_InverseScreen(void) {
                                   1202 ;	-----------------------------------------
                                   1203 ;	 function SSD1306_InverseScreen
                                   1204 ;	-----------------------------------------
      002DFC                       1205 _SSD1306_InverseScreen:
                                   1206 ;	ssd1306.c:78: i2cStartCommand(SSD1306_ADDRESS, I2C_WRITE);
      002DFC 90 01 00         [24] 1207 	mov	dptr,#_i2cStartCommand_PARM_2
      002DFF E4               [12] 1208 	clr	a
      002E00 F0               [24] 1209 	movx	@dptr,a
      002E01 75 82 3C         [24] 1210 	mov	dpl,#0x3c
      002E04 12 27 12         [24] 1211 	lcall	_i2cStartCommand
                                   1212 ;	ssd1306.c:79: i2cSendByte(SSD1306_COMMAND);
      002E07 75 82 80         [24] 1213 	mov	dpl,#0x80
      002E0A 12 27 40         [24] 1214 	lcall	_i2cSendByte
                                   1215 ;	ssd1306.c:80: i2cSendByte(SSD1306_DIS_INVERSE);
      002E0D 75 82 A7         [24] 1216 	mov	dpl,#0xa7
      002E10 12 27 40         [24] 1217 	lcall	_i2cSendByte
                                   1218 ;	ssd1306.c:81: i2cStop();
                                   1219 ;	ssd1306.c:83: }
      002E13 02 26 A6         [24] 1220 	ljmp	_i2cStop
                                   1221 ;------------------------------------------------------------
                                   1222 ;Allocation info for local variables in function 'SSD1306_UpdateScreen'
                                   1223 ;------------------------------------------------------------
                                   1224 ;i                         Allocated with name '_SSD1306_UpdateScreen_i_65536_158'
                                   1225 ;------------------------------------------------------------
                                   1226 ;	ssd1306.c:85: uint8_t SSD1306_UpdateScreen(void) {
                                   1227 ;	-----------------------------------------
                                   1228 ;	 function SSD1306_UpdateScreen
                                   1229 ;	-----------------------------------------
      002E16                       1230 _SSD1306_UpdateScreen:
                                   1231 ;	ssd1306.c:88: i2cStartCommand(SSD1306_ADDRESS, I2C_WRITE);
      002E16 90 01 00         [24] 1232 	mov	dptr,#_i2cStartCommand_PARM_2
      002E19 E4               [12] 1233 	clr	a
      002E1A F0               [24] 1234 	movx	@dptr,a
      002E1B 75 82 3C         [24] 1235 	mov	dpl,#0x3c
      002E1E 12 27 12         [24] 1236 	lcall	_i2cStartCommand
                                   1237 ;	ssd1306.c:89: i2cSendByte(SSD1306_DATA_STREAM);
      002E21 75 82 40         [24] 1238 	mov	dpl,#0x40
      002E24 12 27 40         [24] 1239 	lcall	_i2cSendByte
                                   1240 ;	ssd1306.c:90: while (i < CACHE_SIZE_MEM) {
      002E27 7E 00            [12] 1241 	mov	r6,#0x00
      002E29 7F 00            [12] 1242 	mov	r7,#0x00
      002E2B                       1243 00101$:
      002E2B 8E 04            [24] 1244 	mov	ar4,r6
      002E2D 8F 05            [24] 1245 	mov	ar5,r7
      002E2F 74 FC            [12] 1246 	mov	a,#0x100 - 0x04
      002E31 2D               [12] 1247 	add	a,r5
      002E32 40 1F            [24] 1248 	jc	00103$
                                   1249 ;	ssd1306.c:91: i2cSendByte(cacheMemLcd[i++]);  // send data
      002E34 EE               [12] 1250 	mov	a,r6
      002E35 24 36            [12] 1251 	add	a,#_cacheMemLcd
      002E37 F5 82            [12] 1252 	mov	dpl,a
      002E39 EF               [12] 1253 	mov	a,r7
      002E3A 34 01            [12] 1254 	addc	a,#(_cacheMemLcd >> 8)
      002E3C F5 83            [12] 1255 	mov	dph,a
      002E3E 0E               [12] 1256 	inc	r6
      002E3F BE 00 01         [24] 1257 	cjne	r6,#0x00,00116$
      002E42 0F               [12] 1258 	inc	r7
      002E43                       1259 00116$:
      002E43 E0               [24] 1260 	movx	a,@dptr
      002E44 F5 82            [12] 1261 	mov	dpl,a
      002E46 C0 07            [24] 1262 	push	ar7
      002E48 C0 06            [24] 1263 	push	ar6
      002E4A 12 27 40         [24] 1264 	lcall	_i2cSendByte
      002E4D D0 06            [24] 1265 	pop	ar6
      002E4F D0 07            [24] 1266 	pop	ar7
      002E51 80 D8            [24] 1267 	sjmp	00101$
      002E53                       1268 00103$:
                                   1269 ;	ssd1306.c:93: i2cStop();
      002E53 12 26 A6         [24] 1270 	lcall	_i2cStop
                                   1271 ;	ssd1306.c:95: return SSD1306_SUCCESS;
      002E56 75 82 00         [24] 1272 	mov	dpl,#0x00
                                   1273 ;	ssd1306.c:96: }
      002E59 22               [24] 1274 	ret
                                   1275 ;------------------------------------------------------------
                                   1276 ;Allocation info for local variables in function 'SSD1306_ClearScreen'
                                   1277 ;------------------------------------------------------------
                                   1278 ;	ssd1306.c:98: void SSD1306_ClearScreen(void) {
                                   1279 ;	-----------------------------------------
                                   1280 ;	 function SSD1306_ClearScreen
                                   1281 ;	-----------------------------------------
      002E5A                       1282 _SSD1306_ClearScreen:
                                   1283 ;	ssd1306.c:99: memset (cacheMemLcd, 0x00, CACHE_SIZE_MEM);                     // null cache memory lcd
      002E5A 90 05 E9         [24] 1284 	mov	dptr,#_memset_PARM_2
      002E5D E4               [12] 1285 	clr	a
      002E5E F0               [24] 1286 	movx	@dptr,a
      002E5F 90 05 EA         [24] 1287 	mov	dptr,#_memset_PARM_3
      002E62 F0               [24] 1288 	movx	@dptr,a
      002E63 74 04            [12] 1289 	mov	a,#0x04
      002E65 A3               [24] 1290 	inc	dptr
      002E66 F0               [24] 1291 	movx	@dptr,a
      002E67 90 01 36         [24] 1292 	mov	dptr,#_cacheMemLcd
      002E6A 75 F0 00         [24] 1293 	mov	b,#0x00
                                   1294 ;	ssd1306.c:100: }
      002E6D 02 4B D2         [24] 1295 	ljmp	_memset
                                   1296 ;------------------------------------------------------------
                                   1297 ;Allocation info for local variables in function 'SSD1306_SetPosition'
                                   1298 ;------------------------------------------------------------
                                   1299 ;y                         Allocated with name '_SSD1306_SetPosition_PARM_2'
                                   1300 ;x                         Allocated with name '_SSD1306_SetPosition_x_65536_162'
                                   1301 ;------------------------------------------------------------
                                   1302 ;	ssd1306.c:102: void SSD1306_SetPosition(uint8_t x, uint8_t y) {
                                   1303 ;	-----------------------------------------
                                   1304 ;	 function SSD1306_SetPosition
                                   1305 ;	-----------------------------------------
      002E70                       1306 _SSD1306_SetPosition:
      002E70 E5 82            [12] 1307 	mov	a,dpl
      002E72 90 05 3A         [24] 1308 	mov	dptr,#_SSD1306_SetPosition_x_65536_162
      002E75 F0               [24] 1309 	movx	@dptr,a
                                   1310 ;	ssd1306.c:103: _counter = x + (y << 7);                                        // update counter
      002E76 E0               [24] 1311 	movx	a,@dptr
      002E77 FF               [12] 1312 	mov	r7,a
      002E78 7E 00            [12] 1313 	mov	r6,#0x00
      002E7A 90 05 39         [24] 1314 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      002E7D E0               [24] 1315 	movx	a,@dptr
      002E7E FD               [12] 1316 	mov	r5,a
      002E7F E4               [12] 1317 	clr	a
      002E80 54 01            [12] 1318 	anl	a,#0x01
      002E82 A2 E0            [12] 1319 	mov	c,acc.0
      002E84 CD               [12] 1320 	xch	a,r5
      002E85 13               [12] 1321 	rrc	a
      002E86 CD               [12] 1322 	xch	a,r5
      002E87 13               [12] 1323 	rrc	a
      002E88 CD               [12] 1324 	xch	a,r5
      002E89 FC               [12] 1325 	mov	r4,a
      002E8A 90 01 34         [24] 1326 	mov	dptr,#__counter
      002E8D ED               [12] 1327 	mov	a,r5
      002E8E 2F               [12] 1328 	add	a,r7
      002E8F F0               [24] 1329 	movx	@dptr,a
      002E90 EC               [12] 1330 	mov	a,r4
      002E91 3E               [12] 1331 	addc	a,r6
      002E92 A3               [24] 1332 	inc	dptr
      002E93 F0               [24] 1333 	movx	@dptr,a
                                   1334 ;	ssd1306.c:104: }
      002E94 22               [24] 1335 	ret
                                   1336 ;------------------------------------------------------------
                                   1337 ;Allocation info for local variables in function 'SSD1306_UpdatePosition'
                                   1338 ;------------------------------------------------------------
                                   1339 ;y                         Allocated with name '_SSD1306_UpdatePosition_y_65536_165'
                                   1340 ;x                         Allocated with name '_SSD1306_UpdatePosition_x_65536_165'
                                   1341 ;x_new                     Allocated with name '_SSD1306_UpdatePosition_x_new_65536_165'
                                   1342 ;------------------------------------------------------------
                                   1343 ;	ssd1306.c:106: uint8_t SSD1306_UpdatePosition(void) {
                                   1344 ;	-----------------------------------------
                                   1345 ;	 function SSD1306_UpdatePosition
                                   1346 ;	-----------------------------------------
      002E95                       1347 _SSD1306_UpdatePosition:
                                   1348 ;	ssd1306.c:107: uint8_t y = _counter >> 7;                                      // y / 8
      002E95 90 01 34         [24] 1349 	mov	dptr,#__counter
      002E98 E0               [24] 1350 	movx	a,@dptr
      002E99 FE               [12] 1351 	mov	r6,a
      002E9A A3               [24] 1352 	inc	dptr
      002E9B E0               [24] 1353 	movx	a,@dptr
      002E9C 8E 04            [24] 1354 	mov	ar4,r6
      002E9E A2 E7            [12] 1355 	mov	c,acc.7
      002EA0 CC               [12] 1356 	xch	a,r4
      002EA1 33               [12] 1357 	rlc	a
      002EA2 CC               [12] 1358 	xch	a,r4
      002EA3 33               [12] 1359 	rlc	a
      002EA4 CC               [12] 1360 	xch	a,r4
      002EA5 54 01            [12] 1361 	anl	a,#0x01
                                   1362 ;	ssd1306.c:108: uint8_t x = _counter - (y << 7);                                // y % 8
      002EA7 8C 07            [24] 1363 	mov	ar7,r4
      002EA9 EF               [12] 1364 	mov	a,r7
      002EAA 03               [12] 1365 	rr	a
      002EAB 54 80            [12] 1366 	anl	a,#0x80
      002EAD FF               [12] 1367 	mov	r7,a
      002EAE EE               [12] 1368 	mov	a,r6
      002EAF C3               [12] 1369 	clr	c
      002EB0 9F               [12] 1370 	subb	a,r7
                                   1371 ;	ssd1306.c:109: uint8_t x_new = x + CHARS_COLS_LENGTH + 1;                      // x + character length + 1
                                   1372 ;	ssd1306.c:111: if (x_new > END_COLUMN_ADDR) {                                  // check position
      002EB1 24 06            [12] 1373 	add	a,#0x06
      002EB3 24 80            [12] 1374 	add	a,#0xff - 0x7f
      002EB5 50 1F            [24] 1375 	jnc	00107$
                                   1376 ;	ssd1306.c:112: if (y > END_PAGE_ADDR) {                                      // if more than allowable number of pages
      002EB7 EC               [12] 1377 	mov	a,r4
      002EB8 24 F8            [12] 1378 	add	a,#0xff - 0x07
      002EBA 50 04            [24] 1379 	jnc	00104$
                                   1380 ;	ssd1306.c:113: return SSD1306_ERROR;                                       // return out of range
      002EBC 75 82 01         [24] 1381 	mov	dpl,#0x01
      002EBF 22               [24] 1382 	ret
      002EC0                       1383 00104$:
                                   1384 ;	ssd1306.c:114: } else if (y < (END_PAGE_ADDR-1)) {                           // if x reach the end but page in range
      002EC0 BC 06 00         [24] 1385 	cjne	r4,#0x06,00124$
      002EC3                       1386 00124$:
      002EC3 50 11            [24] 1387 	jnc	00107$
                                   1388 ;	ssd1306.c:115: _counter = ((++y) << 7);                                    // update
      002EC5 0C               [12] 1389 	inc	r4
      002EC6 E4               [12] 1390 	clr	a
      002EC7 C3               [12] 1391 	clr	c
      002EC8 CC               [12] 1392 	xch	a,r4
      002EC9 13               [12] 1393 	rrc	a
      002ECA CC               [12] 1394 	xch	a,r4
      002ECB 13               [12] 1395 	rrc	a
      002ECC CC               [12] 1396 	xch	a,r4
      002ECD FF               [12] 1397 	mov	r7,a
      002ECE 90 01 34         [24] 1398 	mov	dptr,#__counter
      002ED1 EC               [12] 1399 	mov	a,r4
      002ED2 F0               [24] 1400 	movx	@dptr,a
      002ED3 EF               [12] 1401 	mov	a,r7
      002ED4 A3               [24] 1402 	inc	dptr
      002ED5 F0               [24] 1403 	movx	@dptr,a
      002ED6                       1404 00107$:
                                   1405 ;	ssd1306.c:119: return SSD1306_SUCCESS;
      002ED6 75 82 00         [24] 1406 	mov	dpl,#0x00
                                   1407 ;	ssd1306.c:120: }
      002ED9 22               [24] 1408 	ret
                                   1409 ;------------------------------------------------------------
                                   1410 ;Allocation info for local variables in function 'SSD1306_DrawChar'
                                   1411 ;------------------------------------------------------------
                                   1412 ;character                 Allocated with name '_SSD1306_DrawChar_character_65536_169'
                                   1413 ;i                         Allocated with name '_SSD1306_DrawChar_i_65536_170'
                                   1414 ;------------------------------------------------------------
                                   1415 ;	ssd1306.c:122: uint8_t SSD1306_DrawChar(char character) {
                                   1416 ;	-----------------------------------------
                                   1417 ;	 function SSD1306_DrawChar
                                   1418 ;	-----------------------------------------
      002EDA                       1419 _SSD1306_DrawChar:
      002EDA E5 82            [12] 1420 	mov	a,dpl
      002EDC 90 05 3B         [24] 1421 	mov	dptr,#_SSD1306_DrawChar_character_65536_169
      002EDF F0               [24] 1422 	movx	@dptr,a
                                   1423 ;	ssd1306.c:125: if (SSD1306_UpdatePosition () == SSD1306_ERROR) {
      002EE0 12 2E 95         [24] 1424 	lcall	_SSD1306_UpdatePosition
      002EE3 AF 82            [24] 1425 	mov	r7,dpl
      002EE5 BF 01 04         [24] 1426 	cjne	r7,#0x01,00110$
                                   1427 ;	ssd1306.c:126: return SSD1306_ERROR;
      002EE8 75 82 01         [24] 1428 	mov	dpl,#0x01
      002EEB 22               [24] 1429 	ret
                                   1430 ;	ssd1306.c:128: while (i < CHARS_COLS_LENGTH) {
      002EEC                       1431 00110$:
      002EEC 90 05 3B         [24] 1432 	mov	dptr,#_SSD1306_DrawChar_character_65536_169
      002EEF E0               [24] 1433 	movx	a,@dptr
      002EF0 FF               [12] 1434 	mov	r7,a
      002EF1 7E 00            [12] 1435 	mov	r6,#0x00
      002EF3                       1436 00103$:
      002EF3 BE 05 00         [24] 1437 	cjne	r6,#0x05,00123$
      002EF6                       1438 00123$:
      002EF6 50 66            [24] 1439 	jnc	00105$
                                   1440 ;	ssd1306.c:129: cacheMemLcd[_counter++] = FONTS[character-32][i++];
      002EF8 90 01 34         [24] 1441 	mov	dptr,#__counter
      002EFB E0               [24] 1442 	movx	a,@dptr
      002EFC FC               [12] 1443 	mov	r4,a
      002EFD A3               [24] 1444 	inc	dptr
      002EFE E0               [24] 1445 	movx	a,@dptr
      002EFF FD               [12] 1446 	mov	r5,a
      002F00 90 01 34         [24] 1447 	mov	dptr,#__counter
      002F03 74 01            [12] 1448 	mov	a,#0x01
      002F05 2C               [12] 1449 	add	a,r4
      002F06 F0               [24] 1450 	movx	@dptr,a
      002F07 E4               [12] 1451 	clr	a
      002F08 3D               [12] 1452 	addc	a,r5
      002F09 A3               [24] 1453 	inc	dptr
      002F0A F0               [24] 1454 	movx	@dptr,a
      002F0B EC               [12] 1455 	mov	a,r4
      002F0C 24 36            [12] 1456 	add	a,#_cacheMemLcd
      002F0E FC               [12] 1457 	mov	r4,a
      002F0F ED               [12] 1458 	mov	a,r5
      002F10 34 01            [12] 1459 	addc	a,#(_cacheMemLcd >> 8)
      002F12 FD               [12] 1460 	mov	r5,a
      002F13 8F 02            [24] 1461 	mov	ar2,r7
      002F15 7B 00            [12] 1462 	mov	r3,#0x00
      002F17 EA               [12] 1463 	mov	a,r2
      002F18 24 E0            [12] 1464 	add	a,#0xe0
      002F1A FA               [12] 1465 	mov	r2,a
      002F1B EB               [12] 1466 	mov	a,r3
      002F1C 34 FF            [12] 1467 	addc	a,#0xff
      002F1E FB               [12] 1468 	mov	r3,a
      002F1F 90 05 ED         [24] 1469 	mov	dptr,#__mulint_PARM_2
      002F22 EA               [12] 1470 	mov	a,r2
      002F23 F0               [24] 1471 	movx	@dptr,a
      002F24 EB               [12] 1472 	mov	a,r3
      002F25 A3               [24] 1473 	inc	dptr
      002F26 F0               [24] 1474 	movx	@dptr,a
      002F27 90 00 05         [24] 1475 	mov	dptr,#0x0005
      002F2A C0 07            [24] 1476 	push	ar7
      002F2C C0 06            [24] 1477 	push	ar6
      002F2E C0 05            [24] 1478 	push	ar5
      002F30 C0 04            [24] 1479 	push	ar4
      002F32 12 4C 15         [24] 1480 	lcall	__mulint
      002F35 AA 82            [24] 1481 	mov	r2,dpl
      002F37 AB 83            [24] 1482 	mov	r3,dph
      002F39 D0 04            [24] 1483 	pop	ar4
      002F3B D0 05            [24] 1484 	pop	ar5
      002F3D D0 06            [24] 1485 	pop	ar6
      002F3F D0 07            [24] 1486 	pop	ar7
      002F41 EA               [12] 1487 	mov	a,r2
      002F42 24 83            [12] 1488 	add	a,#_FONTS
      002F44 FA               [12] 1489 	mov	r2,a
      002F45 EB               [12] 1490 	mov	a,r3
      002F46 34 69            [12] 1491 	addc	a,#(_FONTS >> 8)
      002F48 FB               [12] 1492 	mov	r3,a
      002F49 8E 01            [24] 1493 	mov	ar1,r6
      002F4B 0E               [12] 1494 	inc	r6
      002F4C E9               [12] 1495 	mov	a,r1
      002F4D 2A               [12] 1496 	add	a,r2
      002F4E F5 82            [12] 1497 	mov	dpl,a
      002F50 E4               [12] 1498 	clr	a
      002F51 3B               [12] 1499 	addc	a,r3
      002F52 F5 83            [12] 1500 	mov	dph,a
      002F54 E4               [12] 1501 	clr	a
      002F55 93               [24] 1502 	movc	a,@a+dptr
      002F56 FB               [12] 1503 	mov	r3,a
      002F57 8C 82            [24] 1504 	mov	dpl,r4
      002F59 8D 83            [24] 1505 	mov	dph,r5
      002F5B F0               [24] 1506 	movx	@dptr,a
      002F5C 80 95            [24] 1507 	sjmp	00103$
      002F5E                       1508 00105$:
                                   1509 ;	ssd1306.c:131: _counter++;
      002F5E 90 01 34         [24] 1510 	mov	dptr,#__counter
      002F61 E0               [24] 1511 	movx	a,@dptr
      002F62 24 01            [12] 1512 	add	a,#0x01
      002F64 F0               [24] 1513 	movx	@dptr,a
      002F65 A3               [24] 1514 	inc	dptr
      002F66 E0               [24] 1515 	movx	a,@dptr
      002F67 34 00            [12] 1516 	addc	a,#0x00
      002F69 F0               [24] 1517 	movx	@dptr,a
                                   1518 ;	ssd1306.c:133: return SSD1306_SUCCESS;
      002F6A 75 82 00         [24] 1519 	mov	dpl,#0x00
                                   1520 ;	ssd1306.c:134: }
      002F6D 22               [24] 1521 	ret
                                   1522 ;------------------------------------------------------------
                                   1523 ;Allocation info for local variables in function 'SSD1306_DrawString'
                                   1524 ;------------------------------------------------------------
                                   1525 ;str                       Allocated with name '_SSD1306_DrawString_str_65536_173'
                                   1526 ;i                         Allocated with name '_SSD1306_DrawString_i_65536_174'
                                   1527 ;------------------------------------------------------------
                                   1528 ;	ssd1306.c:136: void SSD1306_DrawString(char *str) {
                                   1529 ;	-----------------------------------------
                                   1530 ;	 function SSD1306_DrawString
                                   1531 ;	-----------------------------------------
      002F6E                       1532 _SSD1306_DrawString:
      002F6E AF F0            [24] 1533 	mov	r7,b
      002F70 AE 83            [24] 1534 	mov	r6,dph
      002F72 E5 82            [12] 1535 	mov	a,dpl
      002F74 90 05 3C         [24] 1536 	mov	dptr,#_SSD1306_DrawString_str_65536_173
      002F77 F0               [24] 1537 	movx	@dptr,a
      002F78 EE               [12] 1538 	mov	a,r6
      002F79 A3               [24] 1539 	inc	dptr
      002F7A F0               [24] 1540 	movx	@dptr,a
      002F7B EF               [12] 1541 	mov	a,r7
      002F7C A3               [24] 1542 	inc	dptr
      002F7D F0               [24] 1543 	movx	@dptr,a
                                   1544 ;	ssd1306.c:138: while (str[i] != '\0') {
      002F7E 90 05 3C         [24] 1545 	mov	dptr,#_SSD1306_DrawString_str_65536_173
      002F81 E0               [24] 1546 	movx	a,@dptr
      002F82 FD               [12] 1547 	mov	r5,a
      002F83 A3               [24] 1548 	inc	dptr
      002F84 E0               [24] 1549 	movx	a,@dptr
      002F85 FE               [12] 1550 	mov	r6,a
      002F86 A3               [24] 1551 	inc	dptr
      002F87 E0               [24] 1552 	movx	a,@dptr
      002F88 FF               [12] 1553 	mov	r7,a
      002F89 7B 00            [12] 1554 	mov	r3,#0x00
      002F8B 7C 00            [12] 1555 	mov	r4,#0x00
      002F8D                       1556 00101$:
      002F8D EB               [12] 1557 	mov	a,r3
      002F8E 2D               [12] 1558 	add	a,r5
      002F8F F8               [12] 1559 	mov	r0,a
      002F90 EC               [12] 1560 	mov	a,r4
      002F91 3E               [12] 1561 	addc	a,r6
      002F92 F9               [12] 1562 	mov	r1,a
      002F93 8F 02            [24] 1563 	mov	ar2,r7
      002F95 88 82            [24] 1564 	mov	dpl,r0
      002F97 89 83            [24] 1565 	mov	dph,r1
      002F99 8A F0            [24] 1566 	mov	b,r2
      002F9B 12 58 3E         [24] 1567 	lcall	__gptrget
      002F9E 60 31            [24] 1568 	jz	00104$
                                   1569 ;	ssd1306.c:139: SSD1306_DrawChar(str[i++]);
      002FA0 EB               [12] 1570 	mov	a,r3
      002FA1 2D               [12] 1571 	add	a,r5
      002FA2 F8               [12] 1572 	mov	r0,a
      002FA3 EC               [12] 1573 	mov	a,r4
      002FA4 3E               [12] 1574 	addc	a,r6
      002FA5 F9               [12] 1575 	mov	r1,a
      002FA6 8F 02            [24] 1576 	mov	ar2,r7
      002FA8 0B               [12] 1577 	inc	r3
      002FA9 BB 00 01         [24] 1578 	cjne	r3,#0x00,00116$
      002FAC 0C               [12] 1579 	inc	r4
      002FAD                       1580 00116$:
      002FAD 88 82            [24] 1581 	mov	dpl,r0
      002FAF 89 83            [24] 1582 	mov	dph,r1
      002FB1 8A F0            [24] 1583 	mov	b,r2
      002FB3 12 58 3E         [24] 1584 	lcall	__gptrget
      002FB6 F5 82            [12] 1585 	mov	dpl,a
      002FB8 C0 07            [24] 1586 	push	ar7
      002FBA C0 06            [24] 1587 	push	ar6
      002FBC C0 05            [24] 1588 	push	ar5
      002FBE C0 04            [24] 1589 	push	ar4
      002FC0 C0 03            [24] 1590 	push	ar3
      002FC2 12 2E DA         [24] 1591 	lcall	_SSD1306_DrawChar
      002FC5 D0 03            [24] 1592 	pop	ar3
      002FC7 D0 04            [24] 1593 	pop	ar4
      002FC9 D0 05            [24] 1594 	pop	ar5
      002FCB D0 06            [24] 1595 	pop	ar6
      002FCD D0 07            [24] 1596 	pop	ar7
      002FCF 80 BC            [24] 1597 	sjmp	00101$
      002FD1                       1598 00104$:
                                   1599 ;	ssd1306.c:141: }
      002FD1 22               [24] 1600 	ret
                                   1601 ;------------------------------------------------------------
                                   1602 ;Allocation info for local variables in function 'SSD1306_DrawPixel'
                                   1603 ;------------------------------------------------------------
                                   1604 ;y                         Allocated with name '_SSD1306_DrawPixel_PARM_2'
                                   1605 ;x                         Allocated with name '_SSD1306_DrawPixel_x_65536_176'
                                   1606 ;page                      Allocated with name '_SSD1306_DrawPixel_page_65536_177'
                                   1607 ;pixel                     Allocated with name '_SSD1306_DrawPixel_pixel_65536_177'
                                   1608 ;__655360012               Allocated with name '_SSD1306_DrawPixel___655360012_65536_177'
                                   1609 ;------------------------------------------------------------
                                   1610 ;	ssd1306.c:143: uint8_t SSD1306_DrawPixel(uint8_t x, uint8_t y) {
                                   1611 ;	-----------------------------------------
                                   1612 ;	 function SSD1306_DrawPixel
                                   1613 ;	-----------------------------------------
      002FD2                       1614 _SSD1306_DrawPixel:
      002FD2 E5 82            [12] 1615 	mov	a,dpl
      002FD4 90 05 40         [24] 1616 	mov	dptr,#_SSD1306_DrawPixel_x_65536_176
      002FD7 F0               [24] 1617 	movx	@dptr,a
                                   1618 ;	ssd1306.c:147: if ((x > MAX_X) || (y > MAX_Y)) {                               // if out of range
      002FD8 E0               [24] 1619 	movx	a,@dptr
      002FD9 FF               [12] 1620 	mov  r7,a
      002FDA 24 80            [12] 1621 	add	a,#0xff - 0x7f
      002FDC 40 09            [24] 1622 	jc	00101$
      002FDE 90 05 3F         [24] 1623 	mov	dptr,#_SSD1306_DrawPixel_PARM_2
      002FE1 E0               [24] 1624 	movx	a,@dptr
      002FE2 FE               [12] 1625 	mov  r6,a
      002FE3 24 BF            [12] 1626 	add	a,#0xff - 0x40
      002FE5 50 04            [24] 1627 	jnc	00102$
      002FE7                       1628 00101$:
                                   1629 ;	ssd1306.c:148: return SSD1306_ERROR;                                         // out of range
      002FE7 75 82 01         [24] 1630 	mov	dpl,#0x01
      002FEA 22               [24] 1631 	ret
      002FEB                       1632 00102$:
                                   1633 ;	ssd1306.c:150: page = y >> 3;                                                  // find page (y / 8)
      002FEB EE               [12] 1634 	mov	a,r6
      002FEC C4               [12] 1635 	swap	a
      002FED 23               [12] 1636 	rl	a
      002FEE 54 1F            [12] 1637 	anl	a,#0x1f
                                   1638 ;	ssd1306.c:151: pixel = 1 << (y - (page << 3));                                 // which pixel (y % 8)
      002FF0 FD               [12] 1639 	mov	r5,a
      002FF1 C4               [12] 1640 	swap	a
      002FF2 03               [12] 1641 	rr	a
      002FF3 54 F8            [12] 1642 	anl	a,#0xf8
      002FF5 FC               [12] 1643 	mov	r4,a
      002FF6 EE               [12] 1644 	mov	a,r6
      002FF7 C3               [12] 1645 	clr	c
      002FF8 9C               [12] 1646 	subb	a,r4
      002FF9 F5 F0            [12] 1647 	mov	b,a
      002FFB 05 F0            [12] 1648 	inc	b
      002FFD 74 01            [12] 1649 	mov	a,#0x01
      002FFF 80 02            [24] 1650 	sjmp	00114$
      003001                       1651 00112$:
      003001 25 E0            [12] 1652 	add	a,acc
      003003                       1653 00114$:
      003003 D5 F0 FB         [24] 1654 	djnz	b,00112$
      003006 FE               [12] 1655 	mov	r6,a
                                   1656 ;	ssd1306.c:152: _counter = x + (page << 7);                                     // update counter
      003007 E4               [12] 1657 	clr	a
      003008 FC               [12] 1658 	mov	r4,a
      003009 54 01            [12] 1659 	anl	a,#0x01
      00300B A2 E0            [12] 1660 	mov	c,acc.0
      00300D CD               [12] 1661 	xch	a,r5
      00300E 13               [12] 1662 	rrc	a
      00300F CD               [12] 1663 	xch	a,r5
      003010 13               [12] 1664 	rrc	a
      003011 CD               [12] 1665 	xch	a,r5
      003012 FB               [12] 1666 	mov	r3,a
      003013 ED               [12] 1667 	mov	a,r5
      003014 2F               [12] 1668 	add	a,r7
      003015 FF               [12] 1669 	mov	r7,a
      003016 EB               [12] 1670 	mov	a,r3
      003017 3C               [12] 1671 	addc	a,r4
      003018 FC               [12] 1672 	mov	r4,a
                                   1673 ;	ssd1306.c:153: cacheMemLcd[_counter++] |= pixel;                               // save pixel
      003019 90 01 34         [24] 1674 	mov	dptr,#__counter
      00301C 74 01            [12] 1675 	mov	a,#0x01
      00301E 2F               [12] 1676 	add	a,r7
      00301F F0               [24] 1677 	movx	@dptr,a
      003020 E4               [12] 1678 	clr	a
      003021 3C               [12] 1679 	addc	a,r4
      003022 A3               [24] 1680 	inc	dptr
      003023 F0               [24] 1681 	movx	@dptr,a
      003024 EF               [12] 1682 	mov	a,r7
      003025 24 36            [12] 1683 	add	a,#_cacheMemLcd
      003027 FF               [12] 1684 	mov	r7,a
      003028 EC               [12] 1685 	mov	a,r4
      003029 34 01            [12] 1686 	addc	a,#(_cacheMemLcd >> 8)
      00302B FC               [12] 1687 	mov	r4,a
      00302C 8F 82            [24] 1688 	mov	dpl,r7
      00302E 8C 83            [24] 1689 	mov	dph,r4
      003030 E0               [24] 1690 	movx	a,@dptr
      003031 42 06            [12] 1691 	orl	ar6,a
      003033 8F 82            [24] 1692 	mov	dpl,r7
      003035 8C 83            [24] 1693 	mov	dph,r4
      003037 EE               [12] 1694 	mov	a,r6
      003038 F0               [24] 1695 	movx	@dptr,a
                                   1696 ;	ssd1306.c:155: return SSD1306_SUCCESS;
      003039 75 82 00         [24] 1697 	mov	dpl,#0x00
                                   1698 ;	ssd1306.c:156: }
      00303C 22               [24] 1699 	ret
                                   1700 ;------------------------------------------------------------
                                   1701 ;Allocation info for local variables in function 'SSD1306_DrawLine'
                                   1702 ;------------------------------------------------------------
                                   1703 ;sloc0                     Allocated with name '_SSD1306_DrawLine_sloc0_1_0'
                                   1704 ;sloc1                     Allocated with name '_SSD1306_DrawLine_sloc1_1_0'
                                   1705 ;sloc2                     Allocated with name '_SSD1306_DrawLine_sloc2_1_0'
                                   1706 ;sloc3                     Allocated with name '_SSD1306_DrawLine_sloc3_1_0'
                                   1707 ;sloc4                     Allocated with name '_SSD1306_DrawLine_sloc4_1_0'
                                   1708 ;sloc5                     Allocated with name '_SSD1306_DrawLine_sloc5_1_0'
                                   1709 ;sloc6                     Allocated with name '_SSD1306_DrawLine_sloc6_1_0'
                                   1710 ;x2                        Allocated with name '_SSD1306_DrawLine_PARM_2'
                                   1711 ;y1                        Allocated with name '_SSD1306_DrawLine_PARM_3'
                                   1712 ;y2                        Allocated with name '_SSD1306_DrawLine_PARM_4'
                                   1713 ;x1                        Allocated with name '_SSD1306_DrawLine_x1_65536_179'
                                   1714 ;D                         Allocated with name '_SSD1306_DrawLine_D_65536_180'
                                   1715 ;delta_x                   Allocated with name '_SSD1306_DrawLine_delta_x_65536_180'
                                   1716 ;delta_y                   Allocated with name '_SSD1306_DrawLine_delta_y_65536_180'
                                   1717 ;trace_x                   Allocated with name '_SSD1306_DrawLine_trace_x_65536_180'
                                   1718 ;trace_y                   Allocated with name '_SSD1306_DrawLine_trace_y_65536_180'
                                   1719 ;------------------------------------------------------------
                                   1720 ;	ssd1306.c:158: uint8_t SSD1306_DrawLine (uint8_t x1, uint8_t x2, uint8_t y1, uint8_t y2) {
                                   1721 ;	-----------------------------------------
                                   1722 ;	 function SSD1306_DrawLine
                                   1723 ;	-----------------------------------------
      00303D                       1724 _SSD1306_DrawLine:
      00303D E5 82            [12] 1725 	mov	a,dpl
      00303F 90 05 44         [24] 1726 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      003042 F0               [24] 1727 	movx	@dptr,a
                                   1728 ;	ssd1306.c:161: int16_t trace_x = 1, trace_y = 1;                               // steps
      003043 90 05 4B         [24] 1729 	mov	dptr,#_SSD1306_DrawLine_trace_x_65536_180
      003046 74 01            [12] 1730 	mov	a,#0x01
      003048 F0               [24] 1731 	movx	@dptr,a
      003049 E4               [12] 1732 	clr	a
      00304A A3               [24] 1733 	inc	dptr
      00304B F0               [24] 1734 	movx	@dptr,a
      00304C 90 05 4D         [24] 1735 	mov	dptr,#_SSD1306_DrawLine_trace_y_65536_180
      00304F 04               [12] 1736 	inc	a
      003050 F0               [24] 1737 	movx	@dptr,a
      003051 E4               [12] 1738 	clr	a
      003052 A3               [24] 1739 	inc	dptr
      003053 F0               [24] 1740 	movx	@dptr,a
                                   1741 ;	ssd1306.c:163: delta_x = x2 - x1;                                              // delta x
      003054 90 05 41         [24] 1742 	mov	dptr,#_SSD1306_DrawLine_PARM_2
      003057 E0               [24] 1743 	movx	a,@dptr
      003058 FF               [12] 1744 	mov	r7,a
      003059 FD               [12] 1745 	mov	r5,a
      00305A 7E 00            [12] 1746 	mov	r6,#0x00
      00305C 90 05 44         [24] 1747 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      00305F E0               [24] 1748 	movx	a,@dptr
      003060 FC               [12] 1749 	mov	r4,a
      003061 7B 00            [12] 1750 	mov	r3,#0x00
      003063 ED               [12] 1751 	mov	a,r5
      003064 C3               [12] 1752 	clr	c
      003065 9C               [12] 1753 	subb	a,r4
      003066 FD               [12] 1754 	mov	r5,a
      003067 EE               [12] 1755 	mov	a,r6
      003068 9B               [12] 1756 	subb	a,r3
      003069 FE               [12] 1757 	mov	r6,a
      00306A 90 05 47         [24] 1758 	mov	dptr,#_SSD1306_DrawLine_delta_x_65536_180
      00306D ED               [12] 1759 	mov	a,r5
      00306E F0               [24] 1760 	movx	@dptr,a
      00306F EE               [12] 1761 	mov	a,r6
      003070 A3               [24] 1762 	inc	dptr
      003071 F0               [24] 1763 	movx	@dptr,a
                                   1764 ;	ssd1306.c:164: delta_y = y2 - y1;                                              // delta y
      003072 90 05 43         [24] 1765 	mov	dptr,#_SSD1306_DrawLine_PARM_4
      003075 E0               [24] 1766 	movx	a,@dptr
      003076 FC               [12] 1767 	mov	r4,a
      003077 8C 2A            [24] 1768 	mov	_SSD1306_DrawLine_sloc0_1_0,r4
                                   1769 ;	1-genFromRTrack replaced	mov	(_SSD1306_DrawLine_sloc0_1_0 + 1),#0x00
      003079 8B 2B            [24] 1770 	mov	(_SSD1306_DrawLine_sloc0_1_0 + 1),r3
      00307B 90 05 42         [24] 1771 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      00307E E0               [24] 1772 	movx	a,@dptr
      00307F F5 2C            [12] 1773 	mov	_SSD1306_DrawLine_sloc1_1_0,a
      003081 A8 2C            [24] 1774 	mov	r0,_SSD1306_DrawLine_sloc1_1_0
      003083 7B 00            [12] 1775 	mov	r3,#0x00
      003085 E5 2A            [12] 1776 	mov	a,_SSD1306_DrawLine_sloc0_1_0
      003087 C3               [12] 1777 	clr	c
      003088 98               [12] 1778 	subb	a,r0
      003089 F8               [12] 1779 	mov	r0,a
      00308A E5 2B            [12] 1780 	mov	a,(_SSD1306_DrawLine_sloc0_1_0 + 1)
      00308C 9B               [12] 1781 	subb	a,r3
      00308D FB               [12] 1782 	mov	r3,a
      00308E 90 05 49         [24] 1783 	mov	dptr,#_SSD1306_DrawLine_delta_y_65536_180
      003091 E8               [12] 1784 	mov	a,r0
      003092 F0               [24] 1785 	movx	@dptr,a
      003093 EB               [12] 1786 	mov	a,r3
      003094 A3               [24] 1787 	inc	dptr
      003095 F0               [24] 1788 	movx	@dptr,a
                                   1789 ;	ssd1306.c:166: if (delta_x < 0) {                                              // check if x2 > x1
      003096 8D 01            [24] 1790 	mov	ar1,r5
      003098 8E 02            [24] 1791 	mov	ar2,r6
      00309A EA               [12] 1792 	mov	a,r2
      00309B 30 E7 13         [24] 1793 	jnb	acc.7,00102$
                                   1794 ;	ssd1306.c:167: delta_x = -delta_x;                                           // negate delta x
      00309E 90 05 47         [24] 1795 	mov	dptr,#_SSD1306_DrawLine_delta_x_65536_180
      0030A1 C3               [12] 1796 	clr	c
      0030A2 E4               [12] 1797 	clr	a
      0030A3 9D               [12] 1798 	subb	a,r5
      0030A4 F0               [24] 1799 	movx	@dptr,a
      0030A5 E4               [12] 1800 	clr	a
      0030A6 9E               [12] 1801 	subb	a,r6
      0030A7 A3               [24] 1802 	inc	dptr
      0030A8 F0               [24] 1803 	movx	@dptr,a
                                   1804 ;	ssd1306.c:168: trace_x = -trace_x;                                           // negate step x
      0030A9 90 05 4B         [24] 1805 	mov	dptr,#_SSD1306_DrawLine_trace_x_65536_180
      0030AC 74 FF            [12] 1806 	mov	a,#0xff
      0030AE F0               [24] 1807 	movx	@dptr,a
      0030AF A3               [24] 1808 	inc	dptr
      0030B0 F0               [24] 1809 	movx	@dptr,a
      0030B1                       1810 00102$:
                                   1811 ;	ssd1306.c:171: if (delta_y < 0) {                                              // check if y2 > y1
      0030B1 88 05            [24] 1812 	mov	ar5,r0
      0030B3 8B 06            [24] 1813 	mov	ar6,r3
      0030B5 EE               [12] 1814 	mov	a,r6
      0030B6 30 E7 13         [24] 1815 	jnb	acc.7,00104$
                                   1816 ;	ssd1306.c:172: delta_y = -delta_y;                                           // negate detla y
      0030B9 90 05 49         [24] 1817 	mov	dptr,#_SSD1306_DrawLine_delta_y_65536_180
      0030BC C3               [12] 1818 	clr	c
      0030BD E4               [12] 1819 	clr	a
      0030BE 98               [12] 1820 	subb	a,r0
      0030BF F0               [24] 1821 	movx	@dptr,a
      0030C0 E4               [12] 1822 	clr	a
      0030C1 9B               [12] 1823 	subb	a,r3
      0030C2 A3               [24] 1824 	inc	dptr
      0030C3 F0               [24] 1825 	movx	@dptr,a
                                   1826 ;	ssd1306.c:173: trace_y = -trace_y;                                           // negate step y
      0030C4 90 05 4D         [24] 1827 	mov	dptr,#_SSD1306_DrawLine_trace_y_65536_180
      0030C7 74 FF            [12] 1828 	mov	a,#0xff
      0030C9 F0               [24] 1829 	movx	@dptr,a
      0030CA A3               [24] 1830 	inc	dptr
      0030CB F0               [24] 1831 	movx	@dptr,a
      0030CC                       1832 00104$:
                                   1833 ;	ssd1306.c:178: if (delta_y < delta_x) {
      0030CC 90 05 49         [24] 1834 	mov	dptr,#_SSD1306_DrawLine_delta_y_65536_180
      0030CF E0               [24] 1835 	movx	a,@dptr
      0030D0 FD               [12] 1836 	mov	r5,a
      0030D1 A3               [24] 1837 	inc	dptr
      0030D2 E0               [24] 1838 	movx	a,@dptr
      0030D3 FE               [12] 1839 	mov	r6,a
      0030D4 90 05 47         [24] 1840 	mov	dptr,#_SSD1306_DrawLine_delta_x_65536_180
      0030D7 E0               [24] 1841 	movx	a,@dptr
      0030D8 FA               [12] 1842 	mov	r2,a
      0030D9 A3               [24] 1843 	inc	dptr
      0030DA E0               [24] 1844 	movx	a,@dptr
      0030DB FB               [12] 1845 	mov	r3,a
      0030DC C3               [12] 1846 	clr	c
      0030DD ED               [12] 1847 	mov	a,r5
      0030DE 9A               [12] 1848 	subb	a,r2
      0030DF EE               [12] 1849 	mov	a,r6
      0030E0 64 80            [12] 1850 	xrl	a,#0x80
      0030E2 8B F0            [24] 1851 	mov	b,r3
      0030E4 63 F0 80         [24] 1852 	xrl	b,#0x80
      0030E7 95 F0            [12] 1853 	subb	a,b
      0030E9 40 03            [24] 1854 	jc	00158$
      0030EB 02 31 D0         [24] 1855 	ljmp	00116$
      0030EE                       1856 00158$:
                                   1857 ;	ssd1306.c:179: D = (delta_y << 1) - delta_x;                                 // calculate determinant
      0030EE ED               [12] 1858 	mov	a,r5
      0030EF 2D               [12] 1859 	add	a,r5
      0030F0 F8               [12] 1860 	mov	r0,a
      0030F1 EE               [12] 1861 	mov	a,r6
      0030F2 33               [12] 1862 	rlc	a
      0030F3 F9               [12] 1863 	mov	r1,a
      0030F4 90 05 45         [24] 1864 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      0030F7 E8               [12] 1865 	mov	a,r0
      0030F8 C3               [12] 1866 	clr	c
      0030F9 9A               [12] 1867 	subb	a,r2
      0030FA F0               [24] 1868 	movx	@dptr,a
      0030FB E9               [12] 1869 	mov	a,r1
      0030FC 9B               [12] 1870 	subb	a,r3
      0030FD A3               [24] 1871 	inc	dptr
      0030FE F0               [24] 1872 	movx	@dptr,a
                                   1873 ;	ssd1306.c:180: SSD1306_DrawPixel (x1, y1);                                   // draw first pixel
      0030FF 90 05 44         [24] 1874 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      003102 E0               [24] 1875 	movx	a,@dptr
      003103 F9               [12] 1876 	mov	r1,a
      003104 90 05 3F         [24] 1877 	mov	dptr,#_SSD1306_DrawPixel_PARM_2
      003107 E5 2C            [12] 1878 	mov	a,_SSD1306_DrawLine_sloc1_1_0
      003109 F0               [24] 1879 	movx	@dptr,a
      00310A 89 82            [24] 1880 	mov	dpl,r1
      00310C C0 07            [24] 1881 	push	ar7
      00310E C0 06            [24] 1882 	push	ar6
      003110 C0 05            [24] 1883 	push	ar5
      003112 C0 03            [24] 1884 	push	ar3
      003114 C0 02            [24] 1885 	push	ar2
      003116 12 2F D2         [24] 1886 	lcall	_SSD1306_DrawPixel
      003119 D0 02            [24] 1887 	pop	ar2
      00311B D0 03            [24] 1888 	pop	ar3
      00311D D0 05            [24] 1889 	pop	ar5
      00311F D0 06            [24] 1890 	pop	ar6
      003121 D0 07            [24] 1891 	pop	ar7
                                   1892 ;	ssd1306.c:181: while (x1 != x2) {                                            // check if x1 equal x2
      003123 90 05 4D         [24] 1893 	mov	dptr,#_SSD1306_DrawLine_trace_y_65536_180
      003126 E0               [24] 1894 	movx	a,@dptr
      003127 F5 34            [12] 1895 	mov	_SSD1306_DrawLine_sloc6_1_0,a
      003129 A3               [24] 1896 	inc	dptr
      00312A E0               [24] 1897 	movx	a,@dptr
      00312B F5 35            [12] 1898 	mov	(_SSD1306_DrawLine_sloc6_1_0 + 1),a
      00312D 8A 2A            [24] 1899 	mov	_SSD1306_DrawLine_sloc0_1_0,r2
      00312F 8B 2B            [24] 1900 	mov	(_SSD1306_DrawLine_sloc0_1_0 + 1),r3
      003131 90 05 4B         [24] 1901 	mov	dptr,#_SSD1306_DrawLine_trace_x_65536_180
      003134 E0               [24] 1902 	movx	a,@dptr
      003135 F5 2D            [12] 1903 	mov	_SSD1306_DrawLine_sloc2_1_0,a
      003137 A3               [24] 1904 	inc	dptr
      003138 E0               [24] 1905 	movx	a,@dptr
      003139 F5 2E            [12] 1906 	mov	(_SSD1306_DrawLine_sloc2_1_0 + 1),a
      00313B 8D 2F            [24] 1907 	mov	_SSD1306_DrawLine_sloc3_1_0,r5
      00313D 8E 30            [24] 1908 	mov	(_SSD1306_DrawLine_sloc3_1_0 + 1),r6
      00313F                       1909 00107$:
      00313F 90 05 44         [24] 1910 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      003142 E0               [24] 1911 	movx	a,@dptr
      003143 F5 31            [12] 1912 	mov	_SSD1306_DrawLine_sloc4_1_0,a
      003145 EF               [12] 1913 	mov	a,r7
      003146 B5 31 03         [24] 1914 	cjne	a,_SSD1306_DrawLine_sloc4_1_0,00159$
      003149 02 32 D7         [24] 1915 	ljmp	00117$
      00314C                       1916 00159$:
                                   1917 ;	ssd1306.c:182: x1 += trace_x;                                              // update x1
      00314C A9 2D            [24] 1918 	mov	r1,_SSD1306_DrawLine_sloc2_1_0
      00314E A8 31            [24] 1919 	mov	r0,_SSD1306_DrawLine_sloc4_1_0
      003150 90 05 44         [24] 1920 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      003153 E9               [12] 1921 	mov	a,r1
      003154 28               [12] 1922 	add	a,r0
      003155 F0               [24] 1923 	movx	@dptr,a
                                   1924 ;	ssd1306.c:183: if (D >= 0) {                                               // check if determinant is positive
      003156 90 05 45         [24] 1925 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      003159 E0               [24] 1926 	movx	a,@dptr
      00315A F8               [12] 1927 	mov	r0,a
      00315B A3               [24] 1928 	inc	dptr
      00315C E0               [24] 1929 	movx	a,@dptr
      00315D F9               [12] 1930 	mov	r1,a
      00315E 88 32            [24] 1931 	mov	_SSD1306_DrawLine_sloc5_1_0,r0
      003160 E9               [12] 1932 	mov	a,r1
      003161 F5 33            [12] 1933 	mov	(_SSD1306_DrawLine_sloc5_1_0 + 1),a
      003163 20 E7 29         [24] 1934 	jb	acc.7,00106$
                                   1935 ;	ssd1306.c:184: y1 += trace_y;                                            // update y1
      003166 C0 07            [24] 1936 	push	ar7
      003168 85 34 31         [24] 1937 	mov	_SSD1306_DrawLine_sloc4_1_0,_SSD1306_DrawLine_sloc6_1_0
      00316B 90 05 42         [24] 1938 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      00316E E0               [24] 1939 	movx	a,@dptr
      00316F 25 31            [12] 1940 	add	a,_SSD1306_DrawLine_sloc4_1_0
      003171 F0               [24] 1941 	movx	@dptr,a
                                   1942 ;	ssd1306.c:185: D -= 2*delta_x;                                           // update determinant
      003172 A9 2A            [24] 1943 	mov	r1,_SSD1306_DrawLine_sloc0_1_0
      003174 AF 2B            [24] 1944 	mov	r7,(_SSD1306_DrawLine_sloc0_1_0 + 1)
      003176 E9               [12] 1945 	mov	a,r1
      003177 29               [12] 1946 	add	a,r1
      003178 F9               [12] 1947 	mov	r1,a
      003179 EF               [12] 1948 	mov	a,r7
      00317A 33               [12] 1949 	rlc	a
      00317B FF               [12] 1950 	mov	r7,a
      00317C E5 32            [12] 1951 	mov	a,_SSD1306_DrawLine_sloc5_1_0
      00317E C3               [12] 1952 	clr	c
      00317F 99               [12] 1953 	subb	a,r1
      003180 F9               [12] 1954 	mov	r1,a
      003181 E5 33            [12] 1955 	mov	a,(_SSD1306_DrawLine_sloc5_1_0 + 1)
      003183 9F               [12] 1956 	subb	a,r7
      003184 FF               [12] 1957 	mov	r7,a
      003185 90 05 45         [24] 1958 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      003188 E9               [12] 1959 	mov	a,r1
      003189 F0               [24] 1960 	movx	@dptr,a
      00318A EF               [12] 1961 	mov	a,r7
      00318B A3               [24] 1962 	inc	dptr
      00318C F0               [24] 1963 	movx	@dptr,a
                                   1964 ;	ssd1306.c:206: return SSD1306_SUCCESS;
      00318D D0 07            [24] 1965 	pop	ar7
                                   1966 ;	ssd1306.c:185: D -= 2*delta_x;                                           // update determinant
      00318F                       1967 00106$:
                                   1968 ;	ssd1306.c:187: D += 2*delta_y;                                             // update deteminant
      00318F C0 07            [24] 1969 	push	ar7
      003191 A8 2F            [24] 1970 	mov	r0,_SSD1306_DrawLine_sloc3_1_0
      003193 A9 30            [24] 1971 	mov	r1,(_SSD1306_DrawLine_sloc3_1_0 + 1)
      003195 E8               [12] 1972 	mov	a,r0
      003196 28               [12] 1973 	add	a,r0
      003197 F5 32            [12] 1974 	mov	_SSD1306_DrawLine_sloc5_1_0,a
      003199 E9               [12] 1975 	mov	a,r1
      00319A 33               [12] 1976 	rlc	a
      00319B F5 33            [12] 1977 	mov	(_SSD1306_DrawLine_sloc5_1_0 + 1),a
      00319D 90 05 45         [24] 1978 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      0031A0 E0               [24] 1979 	movx	a,@dptr
      0031A1 F9               [12] 1980 	mov	r1,a
      0031A2 A3               [24] 1981 	inc	dptr
      0031A3 E0               [24] 1982 	movx	a,@dptr
      0031A4 FF               [12] 1983 	mov	r7,a
      0031A5 E5 32            [12] 1984 	mov	a,_SSD1306_DrawLine_sloc5_1_0
      0031A7 29               [12] 1985 	add	a,r1
      0031A8 F9               [12] 1986 	mov	r1,a
      0031A9 E5 33            [12] 1987 	mov	a,(_SSD1306_DrawLine_sloc5_1_0 + 1)
      0031AB 3F               [12] 1988 	addc	a,r7
      0031AC FF               [12] 1989 	mov	r7,a
      0031AD 90 05 45         [24] 1990 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      0031B0 E9               [12] 1991 	mov	a,r1
      0031B1 F0               [24] 1992 	movx	@dptr,a
      0031B2 EF               [12] 1993 	mov	a,r7
      0031B3 A3               [24] 1994 	inc	dptr
      0031B4 F0               [24] 1995 	movx	@dptr,a
                                   1996 ;	ssd1306.c:188: SSD1306_DrawPixel (x1, y1);                                 // draw next pixel
      0031B5 90 05 44         [24] 1997 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      0031B8 E0               [24] 1998 	movx	a,@dptr
      0031B9 FF               [12] 1999 	mov	r7,a
      0031BA 90 05 42         [24] 2000 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      0031BD E0               [24] 2001 	movx	a,@dptr
      0031BE 90 05 3F         [24] 2002 	mov	dptr,#_SSD1306_DrawPixel_PARM_2
      0031C1 F0               [24] 2003 	movx	@dptr,a
      0031C2 8F 82            [24] 2004 	mov	dpl,r7
      0031C4 C0 07            [24] 2005 	push	ar7
      0031C6 12 2F D2         [24] 2006 	lcall	_SSD1306_DrawPixel
      0031C9 D0 07            [24] 2007 	pop	ar7
      0031CB D0 07            [24] 2008 	pop	ar7
      0031CD 02 31 3F         [24] 2009 	ljmp	00107$
      0031D0                       2010 00116$:
                                   2011 ;	ssd1306.c:193: D = delta_y - (delta_x << 1);                                 // calculate determinant
      0031D0 EA               [12] 2012 	mov	a,r2
      0031D1 2A               [12] 2013 	add	a,r2
      0031D2 F9               [12] 2014 	mov	r1,a
      0031D3 EB               [12] 2015 	mov	a,r3
      0031D4 33               [12] 2016 	rlc	a
      0031D5 FF               [12] 2017 	mov	r7,a
      0031D6 90 05 45         [24] 2018 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      0031D9 ED               [12] 2019 	mov	a,r5
      0031DA C3               [12] 2020 	clr	c
      0031DB 99               [12] 2021 	subb	a,r1
      0031DC F0               [24] 2022 	movx	@dptr,a
      0031DD EE               [12] 2023 	mov	a,r6
      0031DE 9F               [12] 2024 	subb	a,r7
      0031DF A3               [24] 2025 	inc	dptr
      0031E0 F0               [24] 2026 	movx	@dptr,a
                                   2027 ;	ssd1306.c:194: SSD1306_DrawPixel (x1, y1);                                   // draw first pixel
      0031E1 90 05 44         [24] 2028 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      0031E4 E0               [24] 2029 	movx	a,@dptr
      0031E5 FF               [12] 2030 	mov	r7,a
      0031E6 90 05 3F         [24] 2031 	mov	dptr,#_SSD1306_DrawPixel_PARM_2
      0031E9 E5 2C            [12] 2032 	mov	a,_SSD1306_DrawLine_sloc1_1_0
      0031EB F0               [24] 2033 	movx	@dptr,a
      0031EC 8F 82            [24] 2034 	mov	dpl,r7
      0031EE C0 06            [24] 2035 	push	ar6
      0031F0 C0 05            [24] 2036 	push	ar5
      0031F2 C0 04            [24] 2037 	push	ar4
      0031F4 C0 03            [24] 2038 	push	ar3
      0031F6 C0 02            [24] 2039 	push	ar2
      0031F8 12 2F D2         [24] 2040 	lcall	_SSD1306_DrawPixel
      0031FB D0 02            [24] 2041 	pop	ar2
      0031FD D0 03            [24] 2042 	pop	ar3
      0031FF D0 04            [24] 2043 	pop	ar4
      003201 D0 05            [24] 2044 	pop	ar5
      003203 D0 06            [24] 2045 	pop	ar6
                                   2046 ;	ssd1306.c:195: while (y1 != y2) {                                            // check if y2 equal y1
      003205 90 05 4B         [24] 2047 	mov	dptr,#_SSD1306_DrawLine_trace_x_65536_180
      003208 E0               [24] 2048 	movx	a,@dptr
      003209 F9               [12] 2049 	mov	r1,a
      00320A A3               [24] 2050 	inc	dptr
      00320B E0               [24] 2051 	movx	a,@dptr
      00320C FF               [12] 2052 	mov	r7,a
      00320D 90 05 4D         [24] 2053 	mov	dptr,#_SSD1306_DrawLine_trace_y_65536_180
      003210 E0               [24] 2054 	movx	a,@dptr
      003211 F5 34            [12] 2055 	mov	_SSD1306_DrawLine_sloc6_1_0,a
      003213 A3               [24] 2056 	inc	dptr
      003214 E0               [24] 2057 	movx	a,@dptr
      003215 F5 35            [12] 2058 	mov	(_SSD1306_DrawLine_sloc6_1_0 + 1),a
      003217                       2059 00112$:
      003217 90 05 42         [24] 2060 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      00321A E0               [24] 2061 	movx	a,@dptr
      00321B F8               [12] 2062 	mov	r0,a
      00321C B5 04 03         [24] 2063 	cjne	a,ar4,00161$
      00321F 02 32 D7         [24] 2064 	ljmp	00117$
      003222                       2065 00161$:
                                   2066 ;	ssd1306.c:196: y1 += trace_y;                                              // update y1
      003222 C0 02            [24] 2067 	push	ar2
      003224 C0 03            [24] 2068 	push	ar3
      003226 AB 34            [24] 2069 	mov	r3,_SSD1306_DrawLine_sloc6_1_0
      003228 90 05 42         [24] 2070 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      00322B EB               [12] 2071 	mov	a,r3
      00322C 28               [12] 2072 	add	a,r0
      00322D F0               [24] 2073 	movx	@dptr,a
                                   2074 ;	ssd1306.c:197: if (D <= 0) {                                               // check if determinant is positive
      00322E 90 05 45         [24] 2075 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      003231 E0               [24] 2076 	movx	a,@dptr
      003232 FA               [12] 2077 	mov	r2,a
      003233 A3               [24] 2078 	inc	dptr
      003234 E0               [24] 2079 	movx	a,@dptr
      003235 FB               [12] 2080 	mov	r3,a
      003236 8A 32            [24] 2081 	mov	_SSD1306_DrawLine_sloc5_1_0,r2
      003238 8B 33            [24] 2082 	mov	(_SSD1306_DrawLine_sloc5_1_0 + 1),r3
      00323A C3               [12] 2083 	clr	c
      00323B E4               [12] 2084 	clr	a
      00323C 95 32            [12] 2085 	subb	a,_SSD1306_DrawLine_sloc5_1_0
      00323E 74 80            [12] 2086 	mov	a,#(0x00 ^ 0x80)
      003240 85 33 F0         [24] 2087 	mov	b,(_SSD1306_DrawLine_sloc5_1_0 + 1)
      003243 63 F0 80         [24] 2088 	xrl	b,#0x80
      003246 95 F0            [12] 2089 	subb	a,b
      003248 D0 03            [24] 2090 	pop	ar3
      00324A D0 02            [24] 2091 	pop	ar2
      00324C 40 2A            [24] 2092 	jc	00111$
                                   2093 ;	ssd1306.c:198: x1 += trace_x;                                            // update y1
      00324E C0 02            [24] 2094 	push	ar2
      003250 C0 03            [24] 2095 	push	ar3
      003252 89 00            [24] 2096 	mov	ar0,r1
      003254 90 05 44         [24] 2097 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      003257 E0               [24] 2098 	movx	a,@dptr
      003258 28               [12] 2099 	add	a,r0
      003259 F0               [24] 2100 	movx	@dptr,a
                                   2101 ;	ssd1306.c:199: D += 2*delta_y;                                           // update determinant
      00325A 8D 02            [24] 2102 	mov	ar2,r5
      00325C 8E 03            [24] 2103 	mov	ar3,r6
      00325E EA               [12] 2104 	mov	a,r2
      00325F 2A               [12] 2105 	add	a,r2
      003260 FA               [12] 2106 	mov	r2,a
      003261 EB               [12] 2107 	mov	a,r3
      003262 33               [12] 2108 	rlc	a
      003263 FB               [12] 2109 	mov	r3,a
      003264 EA               [12] 2110 	mov	a,r2
      003265 25 32            [12] 2111 	add	a,_SSD1306_DrawLine_sloc5_1_0
      003267 FA               [12] 2112 	mov	r2,a
      003268 EB               [12] 2113 	mov	a,r3
      003269 35 33            [12] 2114 	addc	a,(_SSD1306_DrawLine_sloc5_1_0 + 1)
      00326B FB               [12] 2115 	mov	r3,a
      00326C 90 05 45         [24] 2116 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      00326F EA               [12] 2117 	mov	a,r2
      003270 F0               [24] 2118 	movx	@dptr,a
      003271 EB               [12] 2119 	mov	a,r3
      003272 A3               [24] 2120 	inc	dptr
      003273 F0               [24] 2121 	movx	@dptr,a
                                   2122 ;	ssd1306.c:206: return SSD1306_SUCCESS;
      003274 D0 03            [24] 2123 	pop	ar3
      003276 D0 02            [24] 2124 	pop	ar2
                                   2125 ;	ssd1306.c:199: D += 2*delta_y;                                           // update determinant
      003278                       2126 00111$:
                                   2127 ;	ssd1306.c:201: D -= 2*delta_x;                                             // update deteminant
      003278 C0 05            [24] 2128 	push	ar5
      00327A C0 06            [24] 2129 	push	ar6
      00327C 8A 00            [24] 2130 	mov	ar0,r2
      00327E 8B 06            [24] 2131 	mov	ar6,r3
      003280 E8               [12] 2132 	mov	a,r0
      003281 28               [12] 2133 	add	a,r0
      003282 F5 32            [12] 2134 	mov	_SSD1306_DrawLine_sloc5_1_0,a
      003284 EE               [12] 2135 	mov	a,r6
      003285 33               [12] 2136 	rlc	a
      003286 F5 33            [12] 2137 	mov	(_SSD1306_DrawLine_sloc5_1_0 + 1),a
      003288 90 05 45         [24] 2138 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      00328B E0               [24] 2139 	movx	a,@dptr
      00328C FD               [12] 2140 	mov	r5,a
      00328D A3               [24] 2141 	inc	dptr
      00328E E0               [24] 2142 	movx	a,@dptr
      00328F FE               [12] 2143 	mov	r6,a
      003290 ED               [12] 2144 	mov	a,r5
      003291 C3               [12] 2145 	clr	c
      003292 95 32            [12] 2146 	subb	a,_SSD1306_DrawLine_sloc5_1_0
      003294 FD               [12] 2147 	mov	r5,a
      003295 EE               [12] 2148 	mov	a,r6
      003296 95 33            [12] 2149 	subb	a,(_SSD1306_DrawLine_sloc5_1_0 + 1)
      003298 FE               [12] 2150 	mov	r6,a
      003299 90 05 45         [24] 2151 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      00329C ED               [12] 2152 	mov	a,r5
      00329D F0               [24] 2153 	movx	@dptr,a
      00329E EE               [12] 2154 	mov	a,r6
      00329F A3               [24] 2155 	inc	dptr
      0032A0 F0               [24] 2156 	movx	@dptr,a
                                   2157 ;	ssd1306.c:202: SSD1306_DrawPixel (x1, y1);                                 // draw next pixel
      0032A1 90 05 44         [24] 2158 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      0032A4 E0               [24] 2159 	movx	a,@dptr
      0032A5 FE               [12] 2160 	mov	r6,a
      0032A6 90 05 42         [24] 2161 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      0032A9 E0               [24] 2162 	movx	a,@dptr
      0032AA FD               [12] 2163 	mov	r5,a
      0032AB 90 05 3F         [24] 2164 	mov	dptr,#_SSD1306_DrawPixel_PARM_2
      0032AE F0               [24] 2165 	movx	@dptr,a
      0032AF 8E 82            [24] 2166 	mov	dpl,r6
      0032B1 C0 07            [24] 2167 	push	ar7
      0032B3 C0 06            [24] 2168 	push	ar6
      0032B5 C0 05            [24] 2169 	push	ar5
      0032B7 C0 04            [24] 2170 	push	ar4
      0032B9 C0 03            [24] 2171 	push	ar3
      0032BB C0 02            [24] 2172 	push	ar2
      0032BD C0 01            [24] 2173 	push	ar1
      0032BF 12 2F D2         [24] 2174 	lcall	_SSD1306_DrawPixel
      0032C2 D0 01            [24] 2175 	pop	ar1
      0032C4 D0 02            [24] 2176 	pop	ar2
      0032C6 D0 03            [24] 2177 	pop	ar3
      0032C8 D0 04            [24] 2178 	pop	ar4
      0032CA D0 05            [24] 2179 	pop	ar5
      0032CC D0 06            [24] 2180 	pop	ar6
      0032CE D0 07            [24] 2181 	pop	ar7
      0032D0 D0 06            [24] 2182 	pop	ar6
      0032D2 D0 05            [24] 2183 	pop	ar5
      0032D4 02 32 17         [24] 2184 	ljmp	00112$
      0032D7                       2185 00117$:
                                   2186 ;	ssd1306.c:206: return SSD1306_SUCCESS;
      0032D7 75 82 00         [24] 2187 	mov	dpl,#0x00
                                   2188 ;	ssd1306.c:207: }
      0032DA 22               [24] 2189 	ret
                                   2190 	.area CSEG    (CODE)
                                   2191 	.area CONST   (CODE)
      006983                       2192 _FONTS:
      006983 00                    2193 	.db #0x00	; 0
      006984 00                    2194 	.db #0x00	; 0
      006985 00                    2195 	.db #0x00	; 0
      006986 00                    2196 	.db #0x00	; 0
      006987 00                    2197 	.db #0x00	; 0
      006988 81                    2198 	.db #0x81	; 129
      006989 81                    2199 	.db #0x81	; 129
      00698A 18                    2200 	.db #0x18	; 24
      00698B 81                    2201 	.db #0x81	; 129
      00698C 81                    2202 	.db #0x81	; 129
      00698D 00                    2203 	.db #0x00	; 0
      00698E 07                    2204 	.db #0x07	; 7
      00698F 00                    2205 	.db #0x00	; 0
      006990 07                    2206 	.db #0x07	; 7
      006991 00                    2207 	.db #0x00	; 0
      006992 14                    2208 	.db #0x14	; 20
      006993 7F                    2209 	.db #0x7f	; 127
      006994 14                    2210 	.db #0x14	; 20
      006995 7F                    2211 	.db #0x7f	; 127
      006996 14                    2212 	.db #0x14	; 20
      006997 24                    2213 	.db #0x24	; 36
      006998 2A                    2214 	.db #0x2a	; 42
      006999 7F                    2215 	.db #0x7f	; 127
      00699A 2A                    2216 	.db #0x2a	; 42
      00699B 12                    2217 	.db #0x12	; 18
      00699C 23                    2218 	.db #0x23	; 35
      00699D 13                    2219 	.db #0x13	; 19
      00699E 08                    2220 	.db #0x08	; 8
      00699F 64                    2221 	.db #0x64	; 100	'd'
      0069A0 62                    2222 	.db #0x62	; 98	'b'
      0069A1 36                    2223 	.db #0x36	; 54	'6'
      0069A2 49                    2224 	.db #0x49	; 73	'I'
      0069A3 55                    2225 	.db #0x55	; 85	'U'
      0069A4 22                    2226 	.db #0x22	; 34
      0069A5 50                    2227 	.db #0x50	; 80	'P'
      0069A6 00                    2228 	.db #0x00	; 0
      0069A7 05                    2229 	.db #0x05	; 5
      0069A8 03                    2230 	.db #0x03	; 3
      0069A9 00                    2231 	.db #0x00	; 0
      0069AA 00                    2232 	.db #0x00	; 0
      0069AB 00                    2233 	.db #0x00	; 0
      0069AC 1C                    2234 	.db #0x1c	; 28
      0069AD 22                    2235 	.db #0x22	; 34
      0069AE 41                    2236 	.db #0x41	; 65	'A'
      0069AF 00                    2237 	.db #0x00	; 0
      0069B0 00                    2238 	.db #0x00	; 0
      0069B1 41                    2239 	.db #0x41	; 65	'A'
      0069B2 22                    2240 	.db #0x22	; 34
      0069B3 1C                    2241 	.db #0x1c	; 28
      0069B4 00                    2242 	.db #0x00	; 0
      0069B5 14                    2243 	.db #0x14	; 20
      0069B6 08                    2244 	.db #0x08	; 8
      0069B7 3E                    2245 	.db #0x3e	; 62
      0069B8 08                    2246 	.db #0x08	; 8
      0069B9 14                    2247 	.db #0x14	; 20
      0069BA 08                    2248 	.db #0x08	; 8
      0069BB 08                    2249 	.db #0x08	; 8
      0069BC 3E                    2250 	.db #0x3e	; 62
      0069BD 08                    2251 	.db #0x08	; 8
      0069BE 08                    2252 	.db #0x08	; 8
      0069BF 00                    2253 	.db #0x00	; 0
      0069C0 50                    2254 	.db #0x50	; 80	'P'
      0069C1 30                    2255 	.db #0x30	; 48	'0'
      0069C2 00                    2256 	.db #0x00	; 0
      0069C3 00                    2257 	.db #0x00	; 0
      0069C4 08                    2258 	.db #0x08	; 8
      0069C5 08                    2259 	.db #0x08	; 8
      0069C6 08                    2260 	.db #0x08	; 8
      0069C7 08                    2261 	.db #0x08	; 8
      0069C8 08                    2262 	.db #0x08	; 8
      0069C9 00                    2263 	.db #0x00	; 0
      0069CA 60                    2264 	.db #0x60	; 96
      0069CB 60                    2265 	.db #0x60	; 96
      0069CC 00                    2266 	.db #0x00	; 0
      0069CD 00                    2267 	.db #0x00	; 0
      0069CE 20                    2268 	.db #0x20	; 32
      0069CF 10                    2269 	.db #0x10	; 16
      0069D0 08                    2270 	.db #0x08	; 8
      0069D1 04                    2271 	.db #0x04	; 4
      0069D2 02                    2272 	.db #0x02	; 2
      0069D3 3E                    2273 	.db #0x3e	; 62
      0069D4 51                    2274 	.db #0x51	; 81	'Q'
      0069D5 49                    2275 	.db #0x49	; 73	'I'
      0069D6 45                    2276 	.db #0x45	; 69	'E'
      0069D7 3E                    2277 	.db #0x3e	; 62
      0069D8 00                    2278 	.db #0x00	; 0
      0069D9 42                    2279 	.db #0x42	; 66	'B'
      0069DA 7F                    2280 	.db #0x7f	; 127
      0069DB 40                    2281 	.db #0x40	; 64
      0069DC 00                    2282 	.db #0x00	; 0
      0069DD 42                    2283 	.db #0x42	; 66	'B'
      0069DE 61                    2284 	.db #0x61	; 97	'a'
      0069DF 51                    2285 	.db #0x51	; 81	'Q'
      0069E0 49                    2286 	.db #0x49	; 73	'I'
      0069E1 46                    2287 	.db #0x46	; 70	'F'
      0069E2 21                    2288 	.db #0x21	; 33
      0069E3 41                    2289 	.db #0x41	; 65	'A'
      0069E4 45                    2290 	.db #0x45	; 69	'E'
      0069E5 4B                    2291 	.db #0x4b	; 75	'K'
      0069E6 31                    2292 	.db #0x31	; 49	'1'
      0069E7 18                    2293 	.db #0x18	; 24
      0069E8 14                    2294 	.db #0x14	; 20
      0069E9 12                    2295 	.db #0x12	; 18
      0069EA 7F                    2296 	.db #0x7f	; 127
      0069EB 10                    2297 	.db #0x10	; 16
      0069EC 27                    2298 	.db #0x27	; 39
      0069ED 45                    2299 	.db #0x45	; 69	'E'
      0069EE 45                    2300 	.db #0x45	; 69	'E'
      0069EF 45                    2301 	.db #0x45	; 69	'E'
      0069F0 39                    2302 	.db #0x39	; 57	'9'
      0069F1 3C                    2303 	.db #0x3c	; 60
      0069F2 4A                    2304 	.db #0x4a	; 74	'J'
      0069F3 49                    2305 	.db #0x49	; 73	'I'
      0069F4 49                    2306 	.db #0x49	; 73	'I'
      0069F5 30                    2307 	.db #0x30	; 48	'0'
      0069F6 01                    2308 	.db #0x01	; 1
      0069F7 71                    2309 	.db #0x71	; 113	'q'
      0069F8 09                    2310 	.db #0x09	; 9
      0069F9 05                    2311 	.db #0x05	; 5
      0069FA 03                    2312 	.db #0x03	; 3
      0069FB 36                    2313 	.db #0x36	; 54	'6'
      0069FC 49                    2314 	.db #0x49	; 73	'I'
      0069FD 49                    2315 	.db #0x49	; 73	'I'
      0069FE 49                    2316 	.db #0x49	; 73	'I'
      0069FF 36                    2317 	.db #0x36	; 54	'6'
      006A00 06                    2318 	.db #0x06	; 6
      006A01 49                    2319 	.db #0x49	; 73	'I'
      006A02 49                    2320 	.db #0x49	; 73	'I'
      006A03 29                    2321 	.db #0x29	; 41
      006A04 1E                    2322 	.db #0x1e	; 30
      006A05 00                    2323 	.db #0x00	; 0
      006A06 36                    2324 	.db #0x36	; 54	'6'
      006A07 36                    2325 	.db #0x36	; 54	'6'
      006A08 00                    2326 	.db #0x00	; 0
      006A09 00                    2327 	.db #0x00	; 0
      006A0A 00                    2328 	.db #0x00	; 0
      006A0B 56                    2329 	.db #0x56	; 86	'V'
      006A0C 36                    2330 	.db #0x36	; 54	'6'
      006A0D 00                    2331 	.db #0x00	; 0
      006A0E 00                    2332 	.db #0x00	; 0
      006A0F 08                    2333 	.db #0x08	; 8
      006A10 14                    2334 	.db #0x14	; 20
      006A11 22                    2335 	.db #0x22	; 34
      006A12 41                    2336 	.db #0x41	; 65	'A'
      006A13 00                    2337 	.db #0x00	; 0
      006A14 14                    2338 	.db #0x14	; 20
      006A15 14                    2339 	.db #0x14	; 20
      006A16 14                    2340 	.db #0x14	; 20
      006A17 14                    2341 	.db #0x14	; 20
      006A18 14                    2342 	.db #0x14	; 20
      006A19 00                    2343 	.db #0x00	; 0
      006A1A 41                    2344 	.db #0x41	; 65	'A'
      006A1B 22                    2345 	.db #0x22	; 34
      006A1C 14                    2346 	.db #0x14	; 20
      006A1D 08                    2347 	.db #0x08	; 8
      006A1E 02                    2348 	.db #0x02	; 2
      006A1F 01                    2349 	.db #0x01	; 1
      006A20 51                    2350 	.db #0x51	; 81	'Q'
      006A21 09                    2351 	.db #0x09	; 9
      006A22 06                    2352 	.db #0x06	; 6
      006A23 32                    2353 	.db #0x32	; 50	'2'
      006A24 49                    2354 	.db #0x49	; 73	'I'
      006A25 79                    2355 	.db #0x79	; 121	'y'
      006A26 41                    2356 	.db #0x41	; 65	'A'
      006A27 3E                    2357 	.db #0x3e	; 62
      006A28 7E                    2358 	.db #0x7e	; 126
      006A29 11                    2359 	.db #0x11	; 17
      006A2A 11                    2360 	.db #0x11	; 17
      006A2B 11                    2361 	.db #0x11	; 17
      006A2C 7E                    2362 	.db #0x7e	; 126
      006A2D 7F                    2363 	.db #0x7f	; 127
      006A2E 49                    2364 	.db #0x49	; 73	'I'
      006A2F 49                    2365 	.db #0x49	; 73	'I'
      006A30 49                    2366 	.db #0x49	; 73	'I'
      006A31 36                    2367 	.db #0x36	; 54	'6'
      006A32 3E                    2368 	.db #0x3e	; 62
      006A33 41                    2369 	.db #0x41	; 65	'A'
      006A34 41                    2370 	.db #0x41	; 65	'A'
      006A35 41                    2371 	.db #0x41	; 65	'A'
      006A36 22                    2372 	.db #0x22	; 34
      006A37 7F                    2373 	.db #0x7f	; 127
      006A38 41                    2374 	.db #0x41	; 65	'A'
      006A39 41                    2375 	.db #0x41	; 65	'A'
      006A3A 22                    2376 	.db #0x22	; 34
      006A3B 1C                    2377 	.db #0x1c	; 28
      006A3C 7F                    2378 	.db #0x7f	; 127
      006A3D 49                    2379 	.db #0x49	; 73	'I'
      006A3E 49                    2380 	.db #0x49	; 73	'I'
      006A3F 49                    2381 	.db #0x49	; 73	'I'
      006A40 41                    2382 	.db #0x41	; 65	'A'
      006A41 7F                    2383 	.db #0x7f	; 127
      006A42 09                    2384 	.db #0x09	; 9
      006A43 09                    2385 	.db #0x09	; 9
      006A44 09                    2386 	.db #0x09	; 9
      006A45 01                    2387 	.db #0x01	; 1
      006A46 3E                    2388 	.db #0x3e	; 62
      006A47 41                    2389 	.db #0x41	; 65	'A'
      006A48 49                    2390 	.db #0x49	; 73	'I'
      006A49 49                    2391 	.db #0x49	; 73	'I'
      006A4A 7A                    2392 	.db #0x7a	; 122	'z'
      006A4B 7F                    2393 	.db #0x7f	; 127
      006A4C 08                    2394 	.db #0x08	; 8
      006A4D 08                    2395 	.db #0x08	; 8
      006A4E 08                    2396 	.db #0x08	; 8
      006A4F 7F                    2397 	.db #0x7f	; 127
      006A50 00                    2398 	.db #0x00	; 0
      006A51 41                    2399 	.db #0x41	; 65	'A'
      006A52 7F                    2400 	.db #0x7f	; 127
      006A53 41                    2401 	.db #0x41	; 65	'A'
      006A54 00                    2402 	.db #0x00	; 0
      006A55 20                    2403 	.db #0x20	; 32
      006A56 40                    2404 	.db #0x40	; 64
      006A57 41                    2405 	.db #0x41	; 65	'A'
      006A58 3F                    2406 	.db #0x3f	; 63
      006A59 01                    2407 	.db #0x01	; 1
      006A5A 7F                    2408 	.db #0x7f	; 127
      006A5B 08                    2409 	.db #0x08	; 8
      006A5C 14                    2410 	.db #0x14	; 20
      006A5D 22                    2411 	.db #0x22	; 34
      006A5E 41                    2412 	.db #0x41	; 65	'A'
      006A5F 7F                    2413 	.db #0x7f	; 127
      006A60 40                    2414 	.db #0x40	; 64
      006A61 40                    2415 	.db #0x40	; 64
      006A62 40                    2416 	.db #0x40	; 64
      006A63 40                    2417 	.db #0x40	; 64
      006A64 7F                    2418 	.db #0x7f	; 127
      006A65 02                    2419 	.db #0x02	; 2
      006A66 0C                    2420 	.db #0x0c	; 12
      006A67 02                    2421 	.db #0x02	; 2
      006A68 7F                    2422 	.db #0x7f	; 127
      006A69 7F                    2423 	.db #0x7f	; 127
      006A6A 04                    2424 	.db #0x04	; 4
      006A6B 08                    2425 	.db #0x08	; 8
      006A6C 10                    2426 	.db #0x10	; 16
      006A6D 7F                    2427 	.db #0x7f	; 127
      006A6E 3E                    2428 	.db #0x3e	; 62
      006A6F 41                    2429 	.db #0x41	; 65	'A'
      006A70 41                    2430 	.db #0x41	; 65	'A'
      006A71 41                    2431 	.db #0x41	; 65	'A'
      006A72 3E                    2432 	.db #0x3e	; 62
      006A73 7F                    2433 	.db #0x7f	; 127
      006A74 09                    2434 	.db #0x09	; 9
      006A75 09                    2435 	.db #0x09	; 9
      006A76 09                    2436 	.db #0x09	; 9
      006A77 06                    2437 	.db #0x06	; 6
      006A78 3E                    2438 	.db #0x3e	; 62
      006A79 41                    2439 	.db #0x41	; 65	'A'
      006A7A 51                    2440 	.db #0x51	; 81	'Q'
      006A7B 21                    2441 	.db #0x21	; 33
      006A7C 5E                    2442 	.db #0x5e	; 94
      006A7D 7F                    2443 	.db #0x7f	; 127
      006A7E 09                    2444 	.db #0x09	; 9
      006A7F 19                    2445 	.db #0x19	; 25
      006A80 29                    2446 	.db #0x29	; 41
      006A81 46                    2447 	.db #0x46	; 70	'F'
      006A82 46                    2448 	.db #0x46	; 70	'F'
      006A83 49                    2449 	.db #0x49	; 73	'I'
      006A84 49                    2450 	.db #0x49	; 73	'I'
      006A85 49                    2451 	.db #0x49	; 73	'I'
      006A86 31                    2452 	.db #0x31	; 49	'1'
      006A87 01                    2453 	.db #0x01	; 1
      006A88 01                    2454 	.db #0x01	; 1
      006A89 7F                    2455 	.db #0x7f	; 127
      006A8A 01                    2456 	.db #0x01	; 1
      006A8B 01                    2457 	.db #0x01	; 1
      006A8C 3F                    2458 	.db #0x3f	; 63
      006A8D 40                    2459 	.db #0x40	; 64
      006A8E 40                    2460 	.db #0x40	; 64
      006A8F 40                    2461 	.db #0x40	; 64
      006A90 3F                    2462 	.db #0x3f	; 63
      006A91 1F                    2463 	.db #0x1f	; 31
      006A92 20                    2464 	.db #0x20	; 32
      006A93 40                    2465 	.db #0x40	; 64
      006A94 20                    2466 	.db #0x20	; 32
      006A95 1F                    2467 	.db #0x1f	; 31
      006A96 3F                    2468 	.db #0x3f	; 63
      006A97 40                    2469 	.db #0x40	; 64
      006A98 38                    2470 	.db #0x38	; 56	'8'
      006A99 40                    2471 	.db #0x40	; 64
      006A9A 3F                    2472 	.db #0x3f	; 63
      006A9B 63                    2473 	.db #0x63	; 99	'c'
      006A9C 14                    2474 	.db #0x14	; 20
      006A9D 08                    2475 	.db #0x08	; 8
      006A9E 14                    2476 	.db #0x14	; 20
      006A9F 63                    2477 	.db #0x63	; 99	'c'
      006AA0 07                    2478 	.db #0x07	; 7
      006AA1 08                    2479 	.db #0x08	; 8
      006AA2 70                    2480 	.db #0x70	; 112	'p'
      006AA3 08                    2481 	.db #0x08	; 8
      006AA4 07                    2482 	.db #0x07	; 7
      006AA5 61                    2483 	.db #0x61	; 97	'a'
      006AA6 51                    2484 	.db #0x51	; 81	'Q'
      006AA7 49                    2485 	.db #0x49	; 73	'I'
      006AA8 45                    2486 	.db #0x45	; 69	'E'
      006AA9 43                    2487 	.db #0x43	; 67	'C'
      006AAA 00                    2488 	.db #0x00	; 0
      006AAB 7F                    2489 	.db #0x7f	; 127
      006AAC 41                    2490 	.db #0x41	; 65	'A'
      006AAD 41                    2491 	.db #0x41	; 65	'A'
      006AAE 00                    2492 	.db #0x00	; 0
      006AAF 02                    2493 	.db #0x02	; 2
      006AB0 04                    2494 	.db #0x04	; 4
      006AB1 08                    2495 	.db #0x08	; 8
      006AB2 10                    2496 	.db #0x10	; 16
      006AB3 20                    2497 	.db #0x20	; 32
      006AB4 00                    2498 	.db #0x00	; 0
      006AB5 41                    2499 	.db #0x41	; 65	'A'
      006AB6 41                    2500 	.db #0x41	; 65	'A'
      006AB7 7F                    2501 	.db #0x7f	; 127
      006AB8 00                    2502 	.db #0x00	; 0
      006AB9 04                    2503 	.db #0x04	; 4
      006ABA 02                    2504 	.db #0x02	; 2
      006ABB 01                    2505 	.db #0x01	; 1
      006ABC 02                    2506 	.db #0x02	; 2
      006ABD 04                    2507 	.db #0x04	; 4
      006ABE 40                    2508 	.db #0x40	; 64
      006ABF 40                    2509 	.db #0x40	; 64
      006AC0 40                    2510 	.db #0x40	; 64
      006AC1 40                    2511 	.db #0x40	; 64
      006AC2 40                    2512 	.db #0x40	; 64
      006AC3 00                    2513 	.db #0x00	; 0
      006AC4 01                    2514 	.db #0x01	; 1
      006AC5 02                    2515 	.db #0x02	; 2
      006AC6 04                    2516 	.db #0x04	; 4
      006AC7 00                    2517 	.db #0x00	; 0
      006AC8 20                    2518 	.db #0x20	; 32
      006AC9 54                    2519 	.db #0x54	; 84	'T'
      006ACA 54                    2520 	.db #0x54	; 84	'T'
      006ACB 54                    2521 	.db #0x54	; 84	'T'
      006ACC 78                    2522 	.db #0x78	; 120	'x'
      006ACD 7F                    2523 	.db #0x7f	; 127
      006ACE 48                    2524 	.db #0x48	; 72	'H'
      006ACF 44                    2525 	.db #0x44	; 68	'D'
      006AD0 44                    2526 	.db #0x44	; 68	'D'
      006AD1 38                    2527 	.db #0x38	; 56	'8'
      006AD2 38                    2528 	.db #0x38	; 56	'8'
      006AD3 44                    2529 	.db #0x44	; 68	'D'
      006AD4 44                    2530 	.db #0x44	; 68	'D'
      006AD5 44                    2531 	.db #0x44	; 68	'D'
      006AD6 20                    2532 	.db #0x20	; 32
      006AD7 38                    2533 	.db #0x38	; 56	'8'
      006AD8 44                    2534 	.db #0x44	; 68	'D'
      006AD9 44                    2535 	.db #0x44	; 68	'D'
      006ADA 48                    2536 	.db #0x48	; 72	'H'
      006ADB 7F                    2537 	.db #0x7f	; 127
      006ADC 38                    2538 	.db #0x38	; 56	'8'
      006ADD 54                    2539 	.db #0x54	; 84	'T'
      006ADE 54                    2540 	.db #0x54	; 84	'T'
      006ADF 54                    2541 	.db #0x54	; 84	'T'
      006AE0 18                    2542 	.db #0x18	; 24
      006AE1 08                    2543 	.db #0x08	; 8
      006AE2 7E                    2544 	.db #0x7e	; 126
      006AE3 09                    2545 	.db #0x09	; 9
      006AE4 01                    2546 	.db #0x01	; 1
      006AE5 02                    2547 	.db #0x02	; 2
      006AE6 0C                    2548 	.db #0x0c	; 12
      006AE7 52                    2549 	.db #0x52	; 82	'R'
      006AE8 52                    2550 	.db #0x52	; 82	'R'
      006AE9 52                    2551 	.db #0x52	; 82	'R'
      006AEA 3E                    2552 	.db #0x3e	; 62
      006AEB 7F                    2553 	.db #0x7f	; 127
      006AEC 08                    2554 	.db #0x08	; 8
      006AED 04                    2555 	.db #0x04	; 4
      006AEE 04                    2556 	.db #0x04	; 4
      006AEF 78                    2557 	.db #0x78	; 120	'x'
      006AF0 00                    2558 	.db #0x00	; 0
      006AF1 44                    2559 	.db #0x44	; 68	'D'
      006AF2 7D                    2560 	.db #0x7d	; 125
      006AF3 40                    2561 	.db #0x40	; 64
      006AF4 00                    2562 	.db #0x00	; 0
      006AF5 20                    2563 	.db #0x20	; 32
      006AF6 40                    2564 	.db #0x40	; 64
      006AF7 44                    2565 	.db #0x44	; 68	'D'
      006AF8 3D                    2566 	.db #0x3d	; 61
      006AF9 00                    2567 	.db #0x00	; 0
      006AFA 7F                    2568 	.db #0x7f	; 127
      006AFB 10                    2569 	.db #0x10	; 16
      006AFC 28                    2570 	.db #0x28	; 40
      006AFD 44                    2571 	.db #0x44	; 68	'D'
      006AFE 00                    2572 	.db #0x00	; 0
      006AFF 00                    2573 	.db #0x00	; 0
      006B00 41                    2574 	.db #0x41	; 65	'A'
      006B01 7F                    2575 	.db #0x7f	; 127
      006B02 40                    2576 	.db #0x40	; 64
      006B03 00                    2577 	.db #0x00	; 0
      006B04 7C                    2578 	.db #0x7c	; 124
      006B05 04                    2579 	.db #0x04	; 4
      006B06 18                    2580 	.db #0x18	; 24
      006B07 04                    2581 	.db #0x04	; 4
      006B08 78                    2582 	.db #0x78	; 120	'x'
      006B09 7C                    2583 	.db #0x7c	; 124
      006B0A 08                    2584 	.db #0x08	; 8
      006B0B 04                    2585 	.db #0x04	; 4
      006B0C 04                    2586 	.db #0x04	; 4
      006B0D 78                    2587 	.db #0x78	; 120	'x'
      006B0E 38                    2588 	.db #0x38	; 56	'8'
      006B0F 44                    2589 	.db #0x44	; 68	'D'
      006B10 44                    2590 	.db #0x44	; 68	'D'
      006B11 44                    2591 	.db #0x44	; 68	'D'
      006B12 38                    2592 	.db #0x38	; 56	'8'
      006B13 7C                    2593 	.db #0x7c	; 124
      006B14 14                    2594 	.db #0x14	; 20
      006B15 14                    2595 	.db #0x14	; 20
      006B16 14                    2596 	.db #0x14	; 20
      006B17 08                    2597 	.db #0x08	; 8
      006B18 08                    2598 	.db #0x08	; 8
      006B19 14                    2599 	.db #0x14	; 20
      006B1A 14                    2600 	.db #0x14	; 20
      006B1B 14                    2601 	.db #0x14	; 20
      006B1C 7C                    2602 	.db #0x7c	; 124
      006B1D 7C                    2603 	.db #0x7c	; 124
      006B1E 08                    2604 	.db #0x08	; 8
      006B1F 04                    2605 	.db #0x04	; 4
      006B20 04                    2606 	.db #0x04	; 4
      006B21 08                    2607 	.db #0x08	; 8
      006B22 48                    2608 	.db #0x48	; 72	'H'
      006B23 54                    2609 	.db #0x54	; 84	'T'
      006B24 54                    2610 	.db #0x54	; 84	'T'
      006B25 54                    2611 	.db #0x54	; 84	'T'
      006B26 20                    2612 	.db #0x20	; 32
      006B27 04                    2613 	.db #0x04	; 4
      006B28 3F                    2614 	.db #0x3f	; 63
      006B29 44                    2615 	.db #0x44	; 68	'D'
      006B2A 40                    2616 	.db #0x40	; 64
      006B2B 20                    2617 	.db #0x20	; 32
      006B2C 3C                    2618 	.db #0x3c	; 60
      006B2D 40                    2619 	.db #0x40	; 64
      006B2E 40                    2620 	.db #0x40	; 64
      006B2F 20                    2621 	.db #0x20	; 32
      006B30 7C                    2622 	.db #0x7c	; 124
      006B31 1C                    2623 	.db #0x1c	; 28
      006B32 20                    2624 	.db #0x20	; 32
      006B33 40                    2625 	.db #0x40	; 64
      006B34 20                    2626 	.db #0x20	; 32
      006B35 1C                    2627 	.db #0x1c	; 28
      006B36 3C                    2628 	.db #0x3c	; 60
      006B37 40                    2629 	.db #0x40	; 64
      006B38 30                    2630 	.db #0x30	; 48	'0'
      006B39 40                    2631 	.db #0x40	; 64
      006B3A 3C                    2632 	.db #0x3c	; 60
      006B3B 44                    2633 	.db #0x44	; 68	'D'
      006B3C 28                    2634 	.db #0x28	; 40
      006B3D 10                    2635 	.db #0x10	; 16
      006B3E 28                    2636 	.db #0x28	; 40
      006B3F 44                    2637 	.db #0x44	; 68	'D'
      006B40 0C                    2638 	.db #0x0c	; 12
      006B41 50                    2639 	.db #0x50	; 80	'P'
      006B42 50                    2640 	.db #0x50	; 80	'P'
      006B43 50                    2641 	.db #0x50	; 80	'P'
      006B44 3C                    2642 	.db #0x3c	; 60
      006B45 44                    2643 	.db #0x44	; 68	'D'
      006B46 64                    2644 	.db #0x64	; 100	'd'
      006B47 54                    2645 	.db #0x54	; 84	'T'
      006B48 4C                    2646 	.db #0x4c	; 76	'L'
      006B49 44                    2647 	.db #0x44	; 68	'D'
      006B4A 00                    2648 	.db #0x00	; 0
      006B4B 08                    2649 	.db #0x08	; 8
      006B4C 36                    2650 	.db #0x36	; 54	'6'
      006B4D 41                    2651 	.db #0x41	; 65	'A'
      006B4E 00                    2652 	.db #0x00	; 0
      006B4F 00                    2653 	.db #0x00	; 0
      006B50 00                    2654 	.db #0x00	; 0
      006B51 7F                    2655 	.db #0x7f	; 127
      006B52 00                    2656 	.db #0x00	; 0
      006B53 00                    2657 	.db #0x00	; 0
      006B54 00                    2658 	.db #0x00	; 0
      006B55 41                    2659 	.db #0x41	; 65	'A'
      006B56 36                    2660 	.db #0x36	; 54	'6'
      006B57 08                    2661 	.db #0x08	; 8
      006B58 00                    2662 	.db #0x00	; 0
      006B59 10                    2663 	.db #0x10	; 16
      006B5A 08                    2664 	.db #0x08	; 8
      006B5B 08                    2665 	.db #0x08	; 8
      006B5C 10                    2666 	.db #0x10	; 16
      006B5D 08                    2667 	.db #0x08	; 8
      006B5E 00                    2668 	.db #0x00	; 0
      006B5F 00                    2669 	.db #0x00	; 0
      006B60 00                    2670 	.db #0x00	; 0
      006B61 00                    2671 	.db #0x00	; 0
      006B62 00                    2672 	.db #0x00	; 0
      006B63                       2673 _INIT_SSD1306:
      006B63 11                    2674 	.db #0x11	; 17
      006B64 AE                    2675 	.db #0xae	; 174
      006B65 00                    2676 	.db #0x00	; 0
      006B66 A8                    2677 	.db #0xa8	; 168
      006B67 01                    2678 	.db #0x01	; 1
      006B68 3F                    2679 	.db #0x3f	; 63
      006B69 20                    2680 	.db #0x20	; 32
      006B6A 01                    2681 	.db #0x01	; 1
      006B6B 00                    2682 	.db #0x00	; 0
      006B6C 40                    2683 	.db #0x40	; 64
      006B6D 00                    2684 	.db #0x00	; 0
      006B6E D3                    2685 	.db #0xd3	; 211
      006B6F 01                    2686 	.db #0x01	; 1
      006B70 00                    2687 	.db #0x00	; 0
      006B71 A1                    2688 	.db #0xa1	; 161
      006B72 00                    2689 	.db #0x00	; 0
      006B73 C8                    2690 	.db #0xc8	; 200
      006B74 00                    2691 	.db #0x00	; 0
      006B75 DA                    2692 	.db #0xda	; 218
      006B76 01                    2693 	.db #0x01	; 1
      006B77 12                    2694 	.db #0x12	; 18
      006B78 81                    2695 	.db #0x81	; 129
      006B79 01                    2696 	.db #0x01	; 1
      006B7A 7F                    2697 	.db #0x7f	; 127
      006B7B A4                    2698 	.db #0xa4	; 164
      006B7C 00                    2699 	.db #0x00	; 0
      006B7D A6                    2700 	.db #0xa6	; 166
      006B7E 00                    2701 	.db #0x00	; 0
      006B7F D5                    2702 	.db #0xd5	; 213
      006B80 01                    2703 	.db #0x01	; 1
      006B81 80                    2704 	.db #0x80	; 128
      006B82 D9                    2705 	.db #0xd9	; 217
      006B83 01                    2706 	.db #0x01	; 1
      006B84 C2                    2707 	.db #0xc2	; 194
      006B85 DB                    2708 	.db #0xdb	; 219
      006B86 01                    2709 	.db #0x01	; 1
      006B87 20                    2710 	.db #0x20	; 32
      006B88 8D                    2711 	.db #0x8d	; 141
      006B89 01                    2712 	.db #0x01	; 1
      006B8A 14                    2713 	.db #0x14	; 20
      006B8B 2E                    2714 	.db #0x2e	; 46
      006B8C 00                    2715 	.db #0x00	; 0
      006B8D AF                    2716 	.db #0xaf	; 175
      006B8E 00                    2717 	.db #0x00	; 0
                                   2718 	.area XINIT   (CODE)
                                   2719 	.area CABS    (ABS,CODE)
