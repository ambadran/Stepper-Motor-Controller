                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module display
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _SSD1306_DrawString
                                     12 	.globl _SSD1306_SetPosition
                                     13 	.globl _SSD1306_UpdateScreen
                                     14 	.globl _SSD1306_ClearScreen
                                     15 	.globl _get_stepper_state
                                     16 	.globl _sprintf
                                     17 	.globl _printf
                                     18 	.globl _S1SM0_FE
                                     19 	.globl _T1IE
                                     20 	.globl _T0IE
                                     21 	.globl _T1RUN
                                     22 	.globl _T0RUN
                                     23 	.globl _CY
                                     24 	.globl _AC
                                     25 	.globl _F0
                                     26 	.globl _RS1
                                     27 	.globl _RS0
                                     28 	.globl _OV
                                     29 	.globl _F1
                                     30 	.globl _P
                                     31 	.globl _EA
                                     32 	.globl _INT1IE
                                     33 	.globl _INT0IE
                                     34 	.globl _INT1TR
                                     35 	.globl _INT0TR
                                     36 	.globl _P5_5
                                     37 	.globl _P5_4
                                     38 	.globl _P5_3
                                     39 	.globl _P5_2
                                     40 	.globl _P5_1
                                     41 	.globl _P5_0
                                     42 	.globl _P3_7
                                     43 	.globl _P3_6
                                     44 	.globl _P3_5
                                     45 	.globl _P3_4
                                     46 	.globl _P3_3
                                     47 	.globl _P3_2
                                     48 	.globl _P3_1
                                     49 	.globl _P3_0
                                     50 	.globl _P2_7
                                     51 	.globl _P2_6
                                     52 	.globl _P2_5
                                     53 	.globl _P2_4
                                     54 	.globl _P2_3
                                     55 	.globl _P2_2
                                     56 	.globl _P2_1
                                     57 	.globl _P2_0
                                     58 	.globl _P1_7
                                     59 	.globl _P1_6
                                     60 	.globl _P1_5
                                     61 	.globl _P1_4
                                     62 	.globl _P1_3
                                     63 	.globl _P1_2
                                     64 	.globl _P1_1
                                     65 	.globl _P1_0
                                     66 	.globl _USBADR
                                     67 	.globl _USBCON
                                     68 	.globl _USBDAT
                                     69 	.globl _USBCLK
                                     70 	.globl _S4BUF
                                     71 	.globl _S4CON
                                     72 	.globl _S3BUF
                                     73 	.globl _S3CON
                                     74 	.globl _S2BUF
                                     75 	.globl _S2CON
                                     76 	.globl _S1BUF
                                     77 	.globl _S1CON
                                     78 	.globl _SADEN
                                     79 	.globl _SADDR
                                     80 	.globl _AUXINTIF
                                     81 	.globl _T3
                                     82 	.globl _T3L
                                     83 	.globl _T3H
                                     84 	.globl _T4
                                     85 	.globl _T4L
                                     86 	.globl _T4H
                                     87 	.globl _T4T3M
                                     88 	.globl _WDT_CONTR
                                     89 	.globl _AUXR
                                     90 	.globl _T2
                                     91 	.globl _T2H
                                     92 	.globl _T2L
                                     93 	.globl _T1
                                     94 	.globl _T1H
                                     95 	.globl _T1L
                                     96 	.globl _T0
                                     97 	.globl _T0H
                                     98 	.globl _T0L
                                     99 	.globl _TMOD
                                    100 	.globl _TCON
                                    101 	.globl _IRTRIM
                                    102 	.globl _LIRTRIM
                                    103 	.globl _IRCBAND
                                    104 	.globl _SPDAT
                                    105 	.globl _SPCTL
                                    106 	.globl _SPSTAT
                                    107 	.globl _WKTC
                                    108 	.globl _WKTCH
                                    109 	.globl _WKTCL
                                    110 	.globl _BUS_SPEED
                                    111 	.globl _P_SW2
                                    112 	.globl _P_SW1
                                    113 	.globl _RSTCFG
                                    114 	.globl _PCON
                                    115 	.globl _B
                                    116 	.globl _ACC
                                    117 	.globl _PSW
                                    118 	.globl _SP
                                    119 	.globl _IP3H
                                    120 	.globl _IP3L
                                    121 	.globl _IP2H
                                    122 	.globl _IP2L
                                    123 	.globl _IE2
                                    124 	.globl _IP1H
                                    125 	.globl _IP1L
                                    126 	.globl _IE1
                                    127 	.globl _INT_CLKO
                                    128 	.globl _IAP_TPS
                                    129 	.globl _IAP_CONTR
                                    130 	.globl _IAP_TRIG
                                    131 	.globl _IAP_CMD
                                    132 	.globl _IAP_ADDR
                                    133 	.globl _IAP_ADDRL
                                    134 	.globl _IAP_ADDRH
                                    135 	.globl _IAP_DATA
                                    136 	.globl _P5M0
                                    137 	.globl _P5M1
                                    138 	.globl _P5
                                    139 	.globl _P3M0
                                    140 	.globl _P3M1
                                    141 	.globl _P3
                                    142 	.globl _P2M0
                                    143 	.globl _P2M1
                                    144 	.globl _P2
                                    145 	.globl _P1M0
                                    146 	.globl _P1M1
                                    147 	.globl _P1
                                    148 	.globl _TA
                                    149 	.globl _DPH1
                                    150 	.globl _DPL1
                                    151 	.globl _DPS
                                    152 	.globl _DP
                                    153 	.globl _DPH
                                    154 	.globl _DPL
                                    155 	.globl _CMPCR2
                                    156 	.globl _CMPCR1
                                    157 	.globl _DMA_ADC_AMT
                                    158 	.globl _ADCCFG
                                    159 	.globl _ADC_RES
                                    160 	.globl _ADC_RESL
                                    161 	.globl _ADC_RESH
                                    162 	.globl _ADC_CONTR
                                    163 	.globl _step_control_page_options_last
                                    164 	.globl _menu_page_selected_page
                                    165 	.globl _display_step_control_set_steps_option_PARM_2
                                    166 	.globl _DMA_UR4R_TXAL
                                    167 	.globl _DMA_UR4R_TXAH
                                    168 	.globl _DMA_UR4R_DONE
                                    169 	.globl _DMA_UR4R_AMT
                                    170 	.globl _DMA_UR4R_STA
                                    171 	.globl _DMA_UR4R_CR
                                    172 	.globl _DMA_UR4R_CFG
                                    173 	.globl _DMA_UR4T_TXAL
                                    174 	.globl _DMA_UR4T_TXAH
                                    175 	.globl _DMA_UR4T_DONE
                                    176 	.globl _DMA_UR4T_AMT
                                    177 	.globl _DMA_UR4T_STA
                                    178 	.globl _DMA_UR4T_CR
                                    179 	.globl _DMA_UR4T_CFG
                                    180 	.globl _DMA_UR3R_TXAL
                                    181 	.globl _DMA_UR3R_TXAH
                                    182 	.globl _DMA_UR3R_DONE
                                    183 	.globl _DMA_UR3R_AMT
                                    184 	.globl _DMA_UR3R_STA
                                    185 	.globl _DMA_UR3R_CR
                                    186 	.globl _DMA_UR3R_CFG
                                    187 	.globl _DMA_UR3T_TXAL
                                    188 	.globl _DMA_UR3T_TXAH
                                    189 	.globl _DMA_UR3T_DONE
                                    190 	.globl _DMA_UR3T_AMT
                                    191 	.globl _DMA_UR3T_STA
                                    192 	.globl _DMA_UR3T_CR
                                    193 	.globl _DMA_UR3T_CFG
                                    194 	.globl _DMA_UR2R_TXAL
                                    195 	.globl _DMA_UR2R_TXAH
                                    196 	.globl _DMA_UR2R_DONE
                                    197 	.globl _DMA_UR2R_AMT
                                    198 	.globl _DMA_UR2R_STA
                                    199 	.globl _DMA_UR2R_CR
                                    200 	.globl _DMA_UR2R_CFG
                                    201 	.globl _DMA_UR2T_TXAL
                                    202 	.globl _DMA_UR2T_TXAH
                                    203 	.globl _DMA_UR2T_DONE
                                    204 	.globl _DMA_UR2T_AMT
                                    205 	.globl _DMA_UR2T_STA
                                    206 	.globl _DMA_UR2T_CR
                                    207 	.globl _DMA_UR2T_CFG
                                    208 	.globl _DMA_UR1R_TXAL
                                    209 	.globl _DMA_UR1R_TXAH
                                    210 	.globl _DMA_UR1R_DONE
                                    211 	.globl _DMA_UR1R_AMT
                                    212 	.globl _DMA_UR1R_STA
                                    213 	.globl _DMA_UR1R_CR
                                    214 	.globl _DMA_UR1R_CFG
                                    215 	.globl _DMA_UR1T_TXAL
                                    216 	.globl _DMA_UR1T_TXAH
                                    217 	.globl _DMA_UR1T_DONE
                                    218 	.globl _DMA_URTX_AMT
                                    219 	.globl _DMA_UR1T_STA
                                    220 	.globl _DMA_UR1T_CR
                                    221 	.globl _DMA_UR1T_CFG
                                    222 	.globl _TM4PS
                                    223 	.globl _TM3PS
                                    224 	.globl _TM2PS
                                    225 	.globl _IRC48MCR
                                    226 	.globl _IRCDB
                                    227 	.globl _MCLKOCR
                                    228 	.globl _CKSEL
                                    229 	.globl _IRC32KCR
                                    230 	.globl _XOSCCR
                                    231 	.globl _HIRCCR
                                    232 	.globl _CLKDIV
                                    233 	.globl _DMA_SPI_CFG2
                                    234 	.globl _DMA_SPI_RXAL
                                    235 	.globl _DMA_SPI_RXAH
                                    236 	.globl _DMA_SPI_TXAL
                                    237 	.globl _DMA_SPI_TXAH
                                    238 	.globl _DMA_SPI_DONE
                                    239 	.globl _DMA_SPI_AMT
                                    240 	.globl _DMA_SPI_STA
                                    241 	.globl _DMA_SPI_CR
                                    242 	.globl _DMA_SPI_CFG
                                    243 	.globl _SSEC
                                    244 	.globl _SEC
                                    245 	.globl _MIN
                                    246 	.globl _HOUR
                                    247 	.globl _DAY
                                    248 	.globl _MONTH
                                    249 	.globl _YEAR
                                    250 	.globl _INISSEC
                                    251 	.globl _INISEC
                                    252 	.globl _INIMIN
                                    253 	.globl _INIHOUR
                                    254 	.globl _INIDAY
                                    255 	.globl _INIMONTH
                                    256 	.globl _INIYEAR
                                    257 	.globl _ALASSEC
                                    258 	.globl _ALASEC
                                    259 	.globl _ALAMIN
                                    260 	.globl _ALAHOUR
                                    261 	.globl _RTCIF
                                    262 	.globl _RTCIEN
                                    263 	.globl _RTCCFG
                                    264 	.globl _RTCCR
                                    265 	.globl _PWMB_OISR
                                    266 	.globl _PWMB_DTR
                                    267 	.globl _PWMB_BKR
                                    268 	.globl _PWMB_CCR4L
                                    269 	.globl _PWMB_CCR4H
                                    270 	.globl _PWMB_CCR3L
                                    271 	.globl _PWMB_CCR3H
                                    272 	.globl _PWMB_CCR2L
                                    273 	.globl _PWMB_CCR2H
                                    274 	.globl _PWMB_CCR1L
                                    275 	.globl _PWMB_CCR1H
                                    276 	.globl _PWMB_RCR
                                    277 	.globl _PWMB_ARRL
                                    278 	.globl _PWMB_ARRH
                                    279 	.globl _PWMB_PSCRL
                                    280 	.globl _PWMB_PSCRH
                                    281 	.globl _PWMB_CNTRL
                                    282 	.globl _PWMB_CNTRH
                                    283 	.globl _PWMB_CCER2
                                    284 	.globl _PWMB_CCER1
                                    285 	.globl _PWMB_CCMR4
                                    286 	.globl _PWMB_CCMR3
                                    287 	.globl _PWMB_CCMR2
                                    288 	.globl _PWMB_CCMR1
                                    289 	.globl _PWMB_EGR
                                    290 	.globl _PWMB_SR2
                                    291 	.globl _PWMB_SR1
                                    292 	.globl _PWMB_IER
                                    293 	.globl _PWMB_ETR
                                    294 	.globl _PWMB_SMCR
                                    295 	.globl _PWMB_CR2
                                    296 	.globl _PWMB_CR1
                                    297 	.globl _PWMA_OISR
                                    298 	.globl _PWMA_DTR
                                    299 	.globl _PWMA_BKR
                                    300 	.globl _PWMA_CCR4L
                                    301 	.globl _PWMA_CCR4H
                                    302 	.globl _PWMA_CCR3L
                                    303 	.globl _PWMA_CCR3H
                                    304 	.globl _PWMA_CCR2L
                                    305 	.globl _PWMA_CCR2H
                                    306 	.globl _PWMA_CCR1L
                                    307 	.globl _PWMA_CCR1H
                                    308 	.globl _PWMA_RCR
                                    309 	.globl _PWMA_ARRL
                                    310 	.globl _PWMA_ARRH
                                    311 	.globl _PWMA_PSCRL
                                    312 	.globl _PWMA_PSCRH
                                    313 	.globl _PWMA_CNTRL
                                    314 	.globl _PWMA_CNTRH
                                    315 	.globl _PWMA_CCER2
                                    316 	.globl _PWMA_CCER1
                                    317 	.globl _PWMA_CCMR4
                                    318 	.globl _PWMA_CCMR3
                                    319 	.globl _PWMA_CCMR2
                                    320 	.globl _PWMA_CCMR1
                                    321 	.globl _PWMA_EGR
                                    322 	.globl _PWMA_SR2
                                    323 	.globl _PWMA_SR1
                                    324 	.globl _PWMA_IER
                                    325 	.globl _PWMA_ETR
                                    326 	.globl _PWMA_SMCR
                                    327 	.globl _PWMA_CR2
                                    328 	.globl _PWMA_CR1
                                    329 	.globl _PWMB_IOAUX
                                    330 	.globl _PWMB_PS
                                    331 	.globl _PWMB_ENO
                                    332 	.globl _PWMB_ETRPS
                                    333 	.globl _PWMA_IOAUX
                                    334 	.globl _PWMA_PS
                                    335 	.globl _PWMA_ENO
                                    336 	.globl _PWMA_ETRPS
                                    337 	.globl _RSTFLAG
                                    338 	.globl _SPFUNC
                                    339 	.globl _OPCON
                                    340 	.globl _ARCON
                                    341 	.globl _MD4
                                    342 	.globl _MD5
                                    343 	.globl _MD0
                                    344 	.globl _MD1
                                    345 	.globl _MD2
                                    346 	.globl _MD3
                                    347 	.globl _DMA_LCM_RXAL
                                    348 	.globl _DMA_LCM_RXAH
                                    349 	.globl _DMA_LCM_TXAL
                                    350 	.globl _DMA_LCM_TXAH
                                    351 	.globl _DMA_LCM_DONE
                                    352 	.globl _DMA_LCM_AMT
                                    353 	.globl _DMA_LCM_STA
                                    354 	.globl _DMA_LCM_CR
                                    355 	.globl _DMA_LCM_CFG
                                    356 	.globl _LCMIDDAT
                                    357 	.globl _LCMIDDATH
                                    358 	.globl _LCMIDDATL
                                    359 	.globl _LCMSTA
                                    360 	.globl _LCMCR
                                    361 	.globl _LCMCFG2
                                    362 	.globl _LCMCFG
                                    363 	.globl _I2CMSAUX
                                    364 	.globl _I2CRXD
                                    365 	.globl _I2CTXD
                                    366 	.globl _I2CSLADR
                                    367 	.globl _I2CSLST
                                    368 	.globl _I2CSLCR
                                    369 	.globl _I2CMSST
                                    370 	.globl _I2CMSCR
                                    371 	.globl _I2CCFG
                                    372 	.globl _PINIPH
                                    373 	.globl _PINIPL
                                    374 	.globl _P5IE
                                    375 	.globl _P5DR
                                    376 	.globl _P5SR
                                    377 	.globl _P5NCS
                                    378 	.globl _P5PU
                                    379 	.globl _P5WKUE
                                    380 	.globl _P5IM1
                                    381 	.globl _P5IM0
                                    382 	.globl _P5INTF
                                    383 	.globl _P5INTE
                                    384 	.globl _P3IE
                                    385 	.globl _P3DR
                                    386 	.globl _P3SR
                                    387 	.globl _P3NCS
                                    388 	.globl _P3PU
                                    389 	.globl _P3WKUE
                                    390 	.globl _P3IM1
                                    391 	.globl _P3IM0
                                    392 	.globl _P3INTF
                                    393 	.globl _P3INTE
                                    394 	.globl _P2IE
                                    395 	.globl _P2DR
                                    396 	.globl _P2SR
                                    397 	.globl _P2NCS
                                    398 	.globl _P2PU
                                    399 	.globl _P2WKUE
                                    400 	.globl _P2IM1
                                    401 	.globl _P2IM0
                                    402 	.globl _P2INTF
                                    403 	.globl _P2INTE
                                    404 	.globl _P1IE
                                    405 	.globl _P1DR
                                    406 	.globl _P1SR
                                    407 	.globl _P1NCS
                                    408 	.globl _P1PU
                                    409 	.globl _P1WKUE
                                    410 	.globl _P1IM1
                                    411 	.globl _P1IM0
                                    412 	.globl _P1INTF
                                    413 	.globl _P1INTE
                                    414 	.globl _DMA_M2M_RXAL
                                    415 	.globl _DMA_M2M_RXAH
                                    416 	.globl _DMA_M2M_TXAL
                                    417 	.globl _DMA_M2M_TXAH
                                    418 	.globl _DMA_M2M_DONE
                                    419 	.globl _DMA_M2M_AMT
                                    420 	.globl _DMA_M2M_STA
                                    421 	.globl _DMA_M2M_CR
                                    422 	.globl _DMA_M2M_CFG
                                    423 	.globl _CMPEXCFG
                                    424 	.globl _DMA_ADC_CHSW1
                                    425 	.globl _DMA_ADC_CHSW0
                                    426 	.globl _DMA_ADC_CFG2
                                    427 	.globl _DMA_ADC_RXAL
                                    428 	.globl _DMA_ADC_RXAH
                                    429 	.globl _DMA_ADC_STA
                                    430 	.globl _DMA_ADC_CR
                                    431 	.globl _DMA_ADC_CFG
                                    432 	.globl _ADCEXCFG
                                    433 	.globl _ADCTIM
                                    434 	.globl _stepper_state_last
                                    435 	.globl _display_welcome_page
                                    436 	.globl _display_menu_page
                                    437 	.globl _display_step_control_page_first_time
                                    438 	.globl _display_step_control_page
                                    439 	.globl _display_distance_control_page_first_time
                                    440 	.globl _display_encoder_control_page_first_time
                                    441 	.globl _display_update_stepper_dir
                                    442 	.globl _display_update_stepper_enable
                                    443 	.globl _display_step_control_set_steps_option
                                    444 	.globl _display_step_control_set_microstepping_option
                                    445 	.globl _display_step_control_set_frequency_option
                                    446 ;--------------------------------------------------------
                                    447 ; special function registers
                                    448 ;--------------------------------------------------------
                                    449 	.area RSEG    (ABS,DATA)
      000000                        450 	.org 0x0000
                           0000BC   451 _ADC_CONTR	=	0x00bc
                           0000BD   452 _ADC_RESH	=	0x00bd
                           0000BE   453 _ADC_RESL	=	0x00be
                           00BDBE   454 _ADC_RES	=	0xbdbe
                           0000DE   455 _ADCCFG	=	0x00de
                           0000FA   456 _DMA_ADC_AMT	=	0x00fa
                           0000E6   457 _CMPCR1	=	0x00e6
                           0000E7   458 _CMPCR2	=	0x00e7
                           000082   459 _DPL	=	0x0082
                           000083   460 _DPH	=	0x0083
                           008382   461 _DP	=	0x8382
                           0000E3   462 _DPS	=	0x00e3
                           0000E4   463 _DPL1	=	0x00e4
                           0000E5   464 _DPH1	=	0x00e5
                           0000AE   465 _TA	=	0x00ae
                           000090   466 _P1	=	0x0090
                           000091   467 _P1M1	=	0x0091
                           000092   468 _P1M0	=	0x0092
                           0000A0   469 _P2	=	0x00a0
                           000095   470 _P2M1	=	0x0095
                           000096   471 _P2M0	=	0x0096
                           0000B0   472 _P3	=	0x00b0
                           0000B1   473 _P3M1	=	0x00b1
                           0000B2   474 _P3M0	=	0x00b2
                           0000C8   475 _P5	=	0x00c8
                           0000C9   476 _P5M1	=	0x00c9
                           0000CA   477 _P5M0	=	0x00ca
                           0000C2   478 _IAP_DATA	=	0x00c2
                           0000C3   479 _IAP_ADDRH	=	0x00c3
                           0000C4   480 _IAP_ADDRL	=	0x00c4
                           00C3C4   481 _IAP_ADDR	=	0xc3c4
                           0000C5   482 _IAP_CMD	=	0x00c5
                           0000C6   483 _IAP_TRIG	=	0x00c6
                           0000C7   484 _IAP_CONTR	=	0x00c7
                           0000F5   485 _IAP_TPS	=	0x00f5
                           00008F   486 _INT_CLKO	=	0x008f
                           0000A8   487 _IE1	=	0x00a8
                           0000B8   488 _IP1L	=	0x00b8
                           0000B7   489 _IP1H	=	0x00b7
                           0000AF   490 _IE2	=	0x00af
                           0000B5   491 _IP2L	=	0x00b5
                           0000B6   492 _IP2H	=	0x00b6
                           0000DF   493 _IP3L	=	0x00df
                           0000EE   494 _IP3H	=	0x00ee
                           000081   495 _SP	=	0x0081
                           0000D0   496 _PSW	=	0x00d0
                           0000E0   497 _ACC	=	0x00e0
                           0000F0   498 _B	=	0x00f0
                           000087   499 _PCON	=	0x0087
                           0000FF   500 _RSTCFG	=	0x00ff
                           0000A2   501 _P_SW1	=	0x00a2
                           0000BA   502 _P_SW2	=	0x00ba
                           0000A1   503 _BUS_SPEED	=	0x00a1
                           0000AA   504 _WKTCL	=	0x00aa
                           0000AB   505 _WKTCH	=	0x00ab
                           00ABAA   506 _WKTC	=	0xabaa
                           0000CD   507 _SPSTAT	=	0x00cd
                           0000CE   508 _SPCTL	=	0x00ce
                           0000CF   509 _SPDAT	=	0x00cf
                           00009D   510 _IRCBAND	=	0x009d
                           00009E   511 _LIRTRIM	=	0x009e
                           00009F   512 _IRTRIM	=	0x009f
                           000088   513 _TCON	=	0x0088
                           000089   514 _TMOD	=	0x0089
                           00008A   515 _T0L	=	0x008a
                           00008C   516 _T0H	=	0x008c
                           008C8A   517 _T0	=	0x8c8a
                           00008B   518 _T1L	=	0x008b
                           00008D   519 _T1H	=	0x008d
                           008D8B   520 _T1	=	0x8d8b
                           0000D7   521 _T2L	=	0x00d7
                           0000D6   522 _T2H	=	0x00d6
                           00D6D7   523 _T2	=	0xd6d7
                           00008E   524 _AUXR	=	0x008e
                           0000C1   525 _WDT_CONTR	=	0x00c1
                           0000D1   526 _T4T3M	=	0x00d1
                           0000D2   527 _T4H	=	0x00d2
                           0000D3   528 _T4L	=	0x00d3
                           00D2D3   529 _T4	=	0xd2d3
                           0000D4   530 _T3H	=	0x00d4
                           0000D5   531 _T3L	=	0x00d5
                           00D4D5   532 _T3	=	0xd4d5
                           0000EF   533 _AUXINTIF	=	0x00ef
                           0000A9   534 _SADDR	=	0x00a9
                           0000B9   535 _SADEN	=	0x00b9
                           000098   536 _S1CON	=	0x0098
                           000099   537 _S1BUF	=	0x0099
                           00009A   538 _S2CON	=	0x009a
                           00009B   539 _S2BUF	=	0x009b
                           0000AC   540 _S3CON	=	0x00ac
                           0000AD   541 _S3BUF	=	0x00ad
                           000084   542 _S4CON	=	0x0084
                           000085   543 _S4BUF	=	0x0085
                           0000DC   544 _USBCLK	=	0x00dc
                           0000EC   545 _USBDAT	=	0x00ec
                           0000F4   546 _USBCON	=	0x00f4
                           0000FC   547 _USBADR	=	0x00fc
                                    548 ;--------------------------------------------------------
                                    549 ; special function bits
                                    550 ;--------------------------------------------------------
                                    551 	.area RSEG    (ABS,DATA)
      000000                        552 	.org 0x0000
                           000090   553 _P1_0	=	0x0090
                           000091   554 _P1_1	=	0x0091
                           000092   555 _P1_2	=	0x0092
                           000093   556 _P1_3	=	0x0093
                           000094   557 _P1_4	=	0x0094
                           000095   558 _P1_5	=	0x0095
                           000096   559 _P1_6	=	0x0096
                           000097   560 _P1_7	=	0x0097
                           0000A0   561 _P2_0	=	0x00a0
                           0000A1   562 _P2_1	=	0x00a1
                           0000A2   563 _P2_2	=	0x00a2
                           0000A3   564 _P2_3	=	0x00a3
                           0000A4   565 _P2_4	=	0x00a4
                           0000A5   566 _P2_5	=	0x00a5
                           0000A6   567 _P2_6	=	0x00a6
                           0000A7   568 _P2_7	=	0x00a7
                           0000B0   569 _P3_0	=	0x00b0
                           0000B1   570 _P3_1	=	0x00b1
                           0000B2   571 _P3_2	=	0x00b2
                           0000B3   572 _P3_3	=	0x00b3
                           0000B4   573 _P3_4	=	0x00b4
                           0000B5   574 _P3_5	=	0x00b5
                           0000B6   575 _P3_6	=	0x00b6
                           0000B7   576 _P3_7	=	0x00b7
                           0000C8   577 _P5_0	=	0x00c8
                           0000C9   578 _P5_1	=	0x00c9
                           0000CA   579 _P5_2	=	0x00ca
                           0000CB   580 _P5_3	=	0x00cb
                           0000CC   581 _P5_4	=	0x00cc
                           0000CD   582 _P5_5	=	0x00cd
                           000088   583 _INT0TR	=	0x0088
                           00008A   584 _INT1TR	=	0x008a
                           0000A8   585 _INT0IE	=	0x00a8
                           0000AA   586 _INT1IE	=	0x00aa
                           0000AF   587 _EA	=	0x00af
                           0000D0   588 _P	=	0x00d0
                           0000D1   589 _F1	=	0x00d1
                           0000D2   590 _OV	=	0x00d2
                           0000D3   591 _RS0	=	0x00d3
                           0000D4   592 _RS1	=	0x00d4
                           0000D5   593 _F0	=	0x00d5
                           0000D6   594 _AC	=	0x00d6
                           0000D7   595 _CY	=	0x00d7
                           00008C   596 _T0RUN	=	0x008c
                           00008E   597 _T1RUN	=	0x008e
                           0000A9   598 _T0IE	=	0x00a9
                           0000AB   599 _T1IE	=	0x00ab
                           00009F   600 _S1SM0_FE	=	0x009f
                                    601 ;--------------------------------------------------------
                                    602 ; overlayable register banks
                                    603 ;--------------------------------------------------------
                                    604 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        605 	.ds 8
                                    606 ;--------------------------------------------------------
                                    607 ; internal ram data
                                    608 ;--------------------------------------------------------
                                    609 	.area DSEG    (DATA)
      000000                        610 _display_step_control_set_steps_option_sloc0_1_0:
      000000                        611 	.ds 2
      000002                        612 _display_step_control_set_steps_option_sloc1_1_0:
      000002                        613 	.ds 2
                                    614 ;--------------------------------------------------------
                                    615 ; overlayable items in internal ram 
                                    616 ;--------------------------------------------------------
                                    617 ;--------------------------------------------------------
                                    618 ; indirectly addressable internal ram data
                                    619 ;--------------------------------------------------------
                                    620 	.area ISEG    (DATA)
                                    621 ;--------------------------------------------------------
                                    622 ; absolute internal ram data
                                    623 ;--------------------------------------------------------
                                    624 	.area IABS    (ABS,DATA)
                                    625 	.area IABS    (ABS,DATA)
                                    626 ;--------------------------------------------------------
                                    627 ; bit data
                                    628 ;--------------------------------------------------------
                                    629 	.area BSEG    (BIT)
      000000                        630 _stepper_state_last::
      000000                        631 	.ds 1
                                    632 ;--------------------------------------------------------
                                    633 ; paged external ram data
                                    634 ;--------------------------------------------------------
                                    635 	.area PSEG    (PAG,XDATA)
                                    636 ;--------------------------------------------------------
                                    637 ; external ram data
                                    638 ;--------------------------------------------------------
                                    639 	.area XSEG    (XDATA)
                           00FEA8   640 _ADCTIM	=	0xfea8
                           00FEAD   641 _ADCEXCFG	=	0xfead
                           00FA10   642 _DMA_ADC_CFG	=	0xfa10
                           00FA11   643 _DMA_ADC_CR	=	0xfa11
                           00FA12   644 _DMA_ADC_STA	=	0xfa12
                           00FA17   645 _DMA_ADC_RXAH	=	0xfa17
                           00FA18   646 _DMA_ADC_RXAL	=	0xfa18
                           00FA19   647 _DMA_ADC_CFG2	=	0xfa19
                           00FA1A   648 _DMA_ADC_CHSW0	=	0xfa1a
                           00FA1B   649 _DMA_ADC_CHSW1	=	0xfa1b
                           00FEAE   650 _CMPEXCFG	=	0xfeae
                           00FA00   651 _DMA_M2M_CFG	=	0xfa00
                           00FA01   652 _DMA_M2M_CR	=	0xfa01
                           00FA02   653 _DMA_M2M_STA	=	0xfa02
                           00FA03   654 _DMA_M2M_AMT	=	0xfa03
                           00FA04   655 _DMA_M2M_DONE	=	0xfa04
                           00FA05   656 _DMA_M2M_TXAH	=	0xfa05
                           00FA06   657 _DMA_M2M_TXAL	=	0xfa06
                           00FA07   658 _DMA_M2M_RXAH	=	0xfa07
                           00FA08   659 _DMA_M2M_RXAL	=	0xfa08
                           00FD01   660 _P1INTE	=	0xfd01
                           00FD11   661 _P1INTF	=	0xfd11
                           00FD21   662 _P1IM0	=	0xfd21
                           00FD31   663 _P1IM1	=	0xfd31
                           00FD41   664 _P1WKUE	=	0xfd41
                           00FE11   665 _P1PU	=	0xfe11
                           00FE19   666 _P1NCS	=	0xfe19
                           00FE21   667 _P1SR	=	0xfe21
                           00FE29   668 _P1DR	=	0xfe29
                           00FE31   669 _P1IE	=	0xfe31
                           00FD02   670 _P2INTE	=	0xfd02
                           00FD12   671 _P2INTF	=	0xfd12
                           00FD22   672 _P2IM0	=	0xfd22
                           00FD32   673 _P2IM1	=	0xfd32
                           00FD42   674 _P2WKUE	=	0xfd42
                           00FE12   675 _P2PU	=	0xfe12
                           00FE1A   676 _P2NCS	=	0xfe1a
                           00FE22   677 _P2SR	=	0xfe22
                           00FE2A   678 _P2DR	=	0xfe2a
                           00FE32   679 _P2IE	=	0xfe32
                           00FD03   680 _P3INTE	=	0xfd03
                           00FD13   681 _P3INTF	=	0xfd13
                           00FD23   682 _P3IM0	=	0xfd23
                           00FD33   683 _P3IM1	=	0xfd33
                           00FD43   684 _P3WKUE	=	0xfd43
                           00FE13   685 _P3PU	=	0xfe13
                           00FE1B   686 _P3NCS	=	0xfe1b
                           00FE23   687 _P3SR	=	0xfe23
                           00FE2B   688 _P3DR	=	0xfe2b
                           00FE33   689 _P3IE	=	0xfe33
                           00FD05   690 _P5INTE	=	0xfd05
                           00FD15   691 _P5INTF	=	0xfd15
                           00FD25   692 _P5IM0	=	0xfd25
                           00FD35   693 _P5IM1	=	0xfd35
                           00FD45   694 _P5WKUE	=	0xfd45
                           00FE15   695 _P5PU	=	0xfe15
                           00FE1D   696 _P5NCS	=	0xfe1d
                           00FE25   697 _P5SR	=	0xfe25
                           00FE2D   698 _P5DR	=	0xfe2d
                           00FE35   699 _P5IE	=	0xfe35
                           00FD60   700 _PINIPL	=	0xfd60
                           00FD61   701 _PINIPH	=	0xfd61
                           00FE80   702 _I2CCFG	=	0xfe80
                           00FE81   703 _I2CMSCR	=	0xfe81
                           00FE82   704 _I2CMSST	=	0xfe82
                           00FE83   705 _I2CSLCR	=	0xfe83
                           00FE84   706 _I2CSLST	=	0xfe84
                           00FE85   707 _I2CSLADR	=	0xfe85
                           00FE86   708 _I2CTXD	=	0xfe86
                           00FE87   709 _I2CRXD	=	0xfe87
                           00FE88   710 _I2CMSAUX	=	0xfe88
                           00FE50   711 _LCMCFG	=	0xfe50
                           00FE51   712 _LCMCFG2	=	0xfe51
                           00FE52   713 _LCMCR	=	0xfe52
                           00FE53   714 _LCMSTA	=	0xfe53
                           00FE54   715 _LCMIDDATL	=	0xfe54
                           00FE55   716 _LCMIDDATH	=	0xfe55
                           00FE54   717 _LCMIDDAT	=	0xfe54
                           00FA70   718 _DMA_LCM_CFG	=	0xfa70
                           00FA71   719 _DMA_LCM_CR	=	0xfa71
                           00FA72   720 _DMA_LCM_STA	=	0xfa72
                           00FA73   721 _DMA_LCM_AMT	=	0xfa73
                           00FA74   722 _DMA_LCM_DONE	=	0xfa74
                           00FA75   723 _DMA_LCM_TXAH	=	0xfa75
                           00FA76   724 _DMA_LCM_TXAL	=	0xfa76
                           00FA77   725 _DMA_LCM_RXAH	=	0xfa77
                           00FA78   726 _DMA_LCM_RXAL	=	0xfa78
                           00FCF0   727 _MD3	=	0xfcf0
                           00FCF1   728 _MD2	=	0xfcf1
                           00FCF2   729 _MD1	=	0xfcf2
                           00FCF3   730 _MD0	=	0xfcf3
                           00FCF4   731 _MD5	=	0xfcf4
                           00FCF5   732 _MD4	=	0xfcf5
                           00FCF6   733 _ARCON	=	0xfcf6
                           00FCF7   734 _OPCON	=	0xfcf7
                           00FE08   735 _SPFUNC	=	0xfe08
                           00FE09   736 _RSTFLAG	=	0xfe09
                           00FEB0   737 _PWMA_ETRPS	=	0xfeb0
                           00FEB1   738 _PWMA_ENO	=	0xfeb1
                           00FEB2   739 _PWMA_PS	=	0xfeb2
                           00FEB3   740 _PWMA_IOAUX	=	0xfeb3
                           00FEB4   741 _PWMB_ETRPS	=	0xfeb4
                           00FEB5   742 _PWMB_ENO	=	0xfeb5
                           00FEB6   743 _PWMB_PS	=	0xfeb6
                           00FEB7   744 _PWMB_IOAUX	=	0xfeb7
                           00FEC0   745 _PWMA_CR1	=	0xfec0
                           00FEC1   746 _PWMA_CR2	=	0xfec1
                           00FEC2   747 _PWMA_SMCR	=	0xfec2
                           00FEC3   748 _PWMA_ETR	=	0xfec3
                           00FEC4   749 _PWMA_IER	=	0xfec4
                           00FEC5   750 _PWMA_SR1	=	0xfec5
                           00FEC6   751 _PWMA_SR2	=	0xfec6
                           00FEC7   752 _PWMA_EGR	=	0xfec7
                           00FEC8   753 _PWMA_CCMR1	=	0xfec8
                           00FEC9   754 _PWMA_CCMR2	=	0xfec9
                           00FECA   755 _PWMA_CCMR3	=	0xfeca
                           00FECB   756 _PWMA_CCMR4	=	0xfecb
                           00FECC   757 _PWMA_CCER1	=	0xfecc
                           00FECD   758 _PWMA_CCER2	=	0xfecd
                           00FECE   759 _PWMA_CNTRH	=	0xfece
                           00FECF   760 _PWMA_CNTRL	=	0xfecf
                           00FED0   761 _PWMA_PSCRH	=	0xfed0
                           00FED1   762 _PWMA_PSCRL	=	0xfed1
                           00FED2   763 _PWMA_ARRH	=	0xfed2
                           00FED3   764 _PWMA_ARRL	=	0xfed3
                           00FED4   765 _PWMA_RCR	=	0xfed4
                           00FED5   766 _PWMA_CCR1H	=	0xfed5
                           00FED6   767 _PWMA_CCR1L	=	0xfed6
                           00FED7   768 _PWMA_CCR2H	=	0xfed7
                           00FED8   769 _PWMA_CCR2L	=	0xfed8
                           00FED9   770 _PWMA_CCR3H	=	0xfed9
                           00FEDA   771 _PWMA_CCR3L	=	0xfeda
                           00FEDB   772 _PWMA_CCR4H	=	0xfedb
                           00FEDC   773 _PWMA_CCR4L	=	0xfedc
                           00FEDD   774 _PWMA_BKR	=	0xfedd
                           00FEDE   775 _PWMA_DTR	=	0xfede
                           00FEDF   776 _PWMA_OISR	=	0xfedf
                           00FEE0   777 _PWMB_CR1	=	0xfee0
                           00FEE1   778 _PWMB_CR2	=	0xfee1
                           00FEE2   779 _PWMB_SMCR	=	0xfee2
                           00FEE3   780 _PWMB_ETR	=	0xfee3
                           00FEE4   781 _PWMB_IER	=	0xfee4
                           00FEE5   782 _PWMB_SR1	=	0xfee5
                           00FEE6   783 _PWMB_SR2	=	0xfee6
                           00FEE7   784 _PWMB_EGR	=	0xfee7
                           00FEE8   785 _PWMB_CCMR1	=	0xfee8
                           00FEE9   786 _PWMB_CCMR2	=	0xfee9
                           00FEEA   787 _PWMB_CCMR3	=	0xfeea
                           00FEEB   788 _PWMB_CCMR4	=	0xfeeb
                           00FEEC   789 _PWMB_CCER1	=	0xfeec
                           00FEED   790 _PWMB_CCER2	=	0xfeed
                           00FEEE   791 _PWMB_CNTRH	=	0xfeee
                           00FEEF   792 _PWMB_CNTRL	=	0xfeef
                           00FEF0   793 _PWMB_PSCRH	=	0xfef0
                           00FEF1   794 _PWMB_PSCRL	=	0xfef1
                           00FEF2   795 _PWMB_ARRH	=	0xfef2
                           00FEF3   796 _PWMB_ARRL	=	0xfef3
                           00FEF4   797 _PWMB_RCR	=	0xfef4
                           00FEF5   798 _PWMB_CCR1H	=	0xfef5
                           00FEF6   799 _PWMB_CCR1L	=	0xfef6
                           00FEF7   800 _PWMB_CCR2H	=	0xfef7
                           00FEF8   801 _PWMB_CCR2L	=	0xfef8
                           00FEF9   802 _PWMB_CCR3H	=	0xfef9
                           00FEFA   803 _PWMB_CCR3L	=	0xfefa
                           00FEFB   804 _PWMB_CCR4H	=	0xfefb
                           00FEFC   805 _PWMB_CCR4L	=	0xfefc
                           00FEFD   806 _PWMB_BKR	=	0xfefd
                           00FEFE   807 _PWMB_DTR	=	0xfefe
                           00FEFF   808 _PWMB_OISR	=	0xfeff
                           00FE60   809 _RTCCR	=	0xfe60
                           00FE61   810 _RTCCFG	=	0xfe61
                           00FE62   811 _RTCIEN	=	0xfe62
                           00FE63   812 _RTCIF	=	0xfe63
                           00FE64   813 _ALAHOUR	=	0xfe64
                           00FE65   814 _ALAMIN	=	0xfe65
                           00FE66   815 _ALASEC	=	0xfe66
                           00FE67   816 _ALASSEC	=	0xfe67
                           00FE68   817 _INIYEAR	=	0xfe68
                           00FE69   818 _INIMONTH	=	0xfe69
                           00FE6A   819 _INIDAY	=	0xfe6a
                           00FE6B   820 _INIHOUR	=	0xfe6b
                           00FE6C   821 _INIMIN	=	0xfe6c
                           00FE6D   822 _INISEC	=	0xfe6d
                           00FE6E   823 _INISSEC	=	0xfe6e
                           00FE70   824 _YEAR	=	0xfe70
                           00FE71   825 _MONTH	=	0xfe71
                           00FE72   826 _DAY	=	0xfe72
                           00FE73   827 _HOUR	=	0xfe73
                           00FE74   828 _MIN	=	0xfe74
                           00FE75   829 _SEC	=	0xfe75
                           00FE76   830 _SSEC	=	0xfe76
                           00FA20   831 _DMA_SPI_CFG	=	0xfa20
                           00FA21   832 _DMA_SPI_CR	=	0xfa21
                           00FA22   833 _DMA_SPI_STA	=	0xfa22
                           00FA23   834 _DMA_SPI_AMT	=	0xfa23
                           00FA24   835 _DMA_SPI_DONE	=	0xfa24
                           00FA25   836 _DMA_SPI_TXAH	=	0xfa25
                           00FA26   837 _DMA_SPI_TXAL	=	0xfa26
                           00FA27   838 _DMA_SPI_RXAH	=	0xfa27
                           00FA28   839 _DMA_SPI_RXAL	=	0xfa28
                           00FA29   840 _DMA_SPI_CFG2	=	0xfa29
                           00FE01   841 _CLKDIV	=	0xfe01
                           00FE02   842 _HIRCCR	=	0xfe02
                           00FE03   843 _XOSCCR	=	0xfe03
                           00FE04   844 _IRC32KCR	=	0xfe04
                           00FE00   845 _CKSEL	=	0xfe00
                           00FE05   846 _MCLKOCR	=	0xfe05
                           00FE06   847 _IRCDB	=	0xfe06
                           00FE07   848 _IRC48MCR	=	0xfe07
                           00FEA2   849 _TM2PS	=	0xfea2
                           00FEA3   850 _TM3PS	=	0xfea3
                           00FEA4   851 _TM4PS	=	0xfea4
                           00FA30   852 _DMA_UR1T_CFG	=	0xfa30
                           00FA31   853 _DMA_UR1T_CR	=	0xfa31
                           00FA32   854 _DMA_UR1T_STA	=	0xfa32
                           00FA33   855 _DMA_URTX_AMT	=	0xfa33
                           00FA34   856 _DMA_UR1T_DONE	=	0xfa34
                           00FA35   857 _DMA_UR1T_TXAH	=	0xfa35
                           00FA36   858 _DMA_UR1T_TXAL	=	0xfa36
                           00FA38   859 _DMA_UR1R_CFG	=	0xfa38
                           00FA39   860 _DMA_UR1R_CR	=	0xfa39
                           00FA3A   861 _DMA_UR1R_STA	=	0xfa3a
                           00FA3B   862 _DMA_UR1R_AMT	=	0xfa3b
                           00FA3C   863 _DMA_UR1R_DONE	=	0xfa3c
                           00FA3D   864 _DMA_UR1R_TXAH	=	0xfa3d
                           00FA3E   865 _DMA_UR1R_TXAL	=	0xfa3e
                           00FA30   866 _DMA_UR2T_CFG	=	0xfa30
                           00FA31   867 _DMA_UR2T_CR	=	0xfa31
                           00FA32   868 _DMA_UR2T_STA	=	0xfa32
                           00FA33   869 _DMA_UR2T_AMT	=	0xfa33
                           00FA34   870 _DMA_UR2T_DONE	=	0xfa34
                           00FA35   871 _DMA_UR2T_TXAH	=	0xfa35
                           00FA36   872 _DMA_UR2T_TXAL	=	0xfa36
                           00FA38   873 _DMA_UR2R_CFG	=	0xfa38
                           00FA39   874 _DMA_UR2R_CR	=	0xfa39
                           00FA3A   875 _DMA_UR2R_STA	=	0xfa3a
                           00FA3B   876 _DMA_UR2R_AMT	=	0xfa3b
                           00FA3C   877 _DMA_UR2R_DONE	=	0xfa3c
                           00FA3D   878 _DMA_UR2R_TXAH	=	0xfa3d
                           00FA3E   879 _DMA_UR2R_TXAL	=	0xfa3e
                           00FA30   880 _DMA_UR3T_CFG	=	0xfa30
                           00FA31   881 _DMA_UR3T_CR	=	0xfa31
                           00FA32   882 _DMA_UR3T_STA	=	0xfa32
                           00FA33   883 _DMA_UR3T_AMT	=	0xfa33
                           00FA34   884 _DMA_UR3T_DONE	=	0xfa34
                           00FA35   885 _DMA_UR3T_TXAH	=	0xfa35
                           00FA36   886 _DMA_UR3T_TXAL	=	0xfa36
                           00FA38   887 _DMA_UR3R_CFG	=	0xfa38
                           00FA39   888 _DMA_UR3R_CR	=	0xfa39
                           00FA3A   889 _DMA_UR3R_STA	=	0xfa3a
                           00FA3B   890 _DMA_UR3R_AMT	=	0xfa3b
                           00FA3C   891 _DMA_UR3R_DONE	=	0xfa3c
                           00FA3D   892 _DMA_UR3R_TXAH	=	0xfa3d
                           00FA3E   893 _DMA_UR3R_TXAL	=	0xfa3e
                           00FA30   894 _DMA_UR4T_CFG	=	0xfa30
                           00FA31   895 _DMA_UR4T_CR	=	0xfa31
                           00FA32   896 _DMA_UR4T_STA	=	0xfa32
                           00FA33   897 _DMA_UR4T_AMT	=	0xfa33
                           00FA34   898 _DMA_UR4T_DONE	=	0xfa34
                           00FA35   899 _DMA_UR4T_TXAH	=	0xfa35
                           00FA36   900 _DMA_UR4T_TXAL	=	0xfa36
                           00FA38   901 _DMA_UR4R_CFG	=	0xfa38
                           00FA39   902 _DMA_UR4R_CR	=	0xfa39
                           00FA3A   903 _DMA_UR4R_STA	=	0xfa3a
                           00FA3B   904 _DMA_UR4R_AMT	=	0xfa3b
                           00FA3C   905 _DMA_UR4R_DONE	=	0xfa3c
                           00FA3D   906 _DMA_UR4R_TXAH	=	0xfa3d
                           00FA3E   907 _DMA_UR4R_TXAL	=	0xfa3e
      000000                        908 _uartGetCharacter_result_65536_69:
      000000                        909 	.ds 1
      000001                        910 _display_menu_page_selected_page_65536_150:
      000001                        911 	.ds 1
      000002                        912 _display_step_control_page_step_control_page_options_65536_156:
      000002                        913 	.ds 1
      000003                        914 _display_update_stepper_dir_stepper_direction_65536_169:
      000003                        915 	.ds 1
      000004                        916 _display_update_stepper_enable_stepper_enable_status_65536_173:
      000004                        917 	.ds 1
      000005                        918 _display_step_control_set_steps_option_PARM_2:
      000005                        919 	.ds 1
      000006                        920 _display_step_control_set_steps_option_float_digits_65536_177:
      000006                        921 	.ds 3
      000009                        922 _display_step_control_set_steps_option_buffer_65537_179:
      000009                        923 	.ds 20
      00001D                        924 _display_step_control_set_microstepping_option_encoder_value_65536_181:
      00001D                        925 	.ds 2
      00001F                        926 _display_step_control_set_microstepping_option_buffer_65537_183:
      00001F                        927 	.ds 5
      000024                        928 _display_step_control_set_frequency_option_encoder_value_65536_184:
      000024                        929 	.ds 2
      000026                        930 _display_step_control_set_frequency_option_buffer_65537_186:
      000026                        931 	.ds 5
                                    932 ;--------------------------------------------------------
                                    933 ; absolute external ram data
                                    934 ;--------------------------------------------------------
                                    935 	.area XABS    (ABS,XDATA)
                                    936 ;--------------------------------------------------------
                                    937 ; external initialized ram data
                                    938 ;--------------------------------------------------------
                                    939 	.area XISEG   (XDATA)
      000000                        940 _menu_page_selected_page::
      000000                        941 	.ds 1
      000001                        942 _step_control_page_options_last::
      000001                        943 	.ds 1
                                    944 	.area HOME    (CODE)
                                    945 	.area GSINIT0 (CODE)
                                    946 	.area GSINIT1 (CODE)
                                    947 	.area GSINIT2 (CODE)
                                    948 	.area GSINIT3 (CODE)
                                    949 	.area GSINIT4 (CODE)
                                    950 	.area GSINIT5 (CODE)
                                    951 	.area GSINIT  (CODE)
                                    952 	.area GSFINAL (CODE)
                                    953 	.area CSEG    (CODE)
                                    954 ;--------------------------------------------------------
                                    955 ; global & static initialisations
                                    956 ;--------------------------------------------------------
                                    957 	.area HOME    (CODE)
                                    958 	.area GSINIT  (CODE)
                                    959 	.area GSFINAL (CODE)
                                    960 	.area GSINIT  (CODE)
                                    961 ;	display.c:99: __bit stepper_state_last = 0;
                                    962 ;	assignBit
      000000 C2*00            [12]  963 	clr	_stepper_state_last
                                    964 ;--------------------------------------------------------
                                    965 ; Home
                                    966 ;--------------------------------------------------------
                                    967 	.area HOME    (CODE)
                                    968 	.area HOME    (CODE)
                                    969 ;--------------------------------------------------------
                                    970 ; code
                                    971 ;--------------------------------------------------------
                                    972 	.area CSEG    (CODE)
                                    973 ;------------------------------------------------------------
                                    974 ;Allocation info for local variables in function 'display_welcome_page'
                                    975 ;------------------------------------------------------------
                                    976 ;	display.c:4: void display_welcome_page(void) {
                                    977 ;	-----------------------------------------
                                    978 ;	 function display_welcome_page
                                    979 ;	-----------------------------------------
      000000                        980 _display_welcome_page:
                           000007   981 	ar7 = 0x07
                           000006   982 	ar6 = 0x06
                           000005   983 	ar5 = 0x05
                           000004   984 	ar4 = 0x04
                           000003   985 	ar3 = 0x03
                           000002   986 	ar2 = 0x02
                           000001   987 	ar1 = 0x01
                           000000   988 	ar0 = 0x00
                                    989 ;	display.c:5: SSD1306_ClearScreen();
      000000 12r00r00         [24]  990 	lcall	_SSD1306_ClearScreen
                                    991 ;	display.c:6: SSD1306_SetPosition(1, 1);
      000003 90r00r00         [24]  992 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000006 74 01            [12]  993 	mov	a,#0x01
      000008 F0               [24]  994 	movx	@dptr,a
      000009 75 82 01         [24]  995 	mov	dpl,#0x01
      00000C 12r00r00         [24]  996 	lcall	_SSD1306_SetPosition
                                    997 ;	display.c:7: SSD1306_DrawString("      Bipolar");
      00000F 90r01rE0         [24]  998 	mov	dptr,#___str_0
      000012 75 F0 80         [24]  999 	mov	b,#0x80
      000015 12r00r00         [24] 1000 	lcall	_SSD1306_DrawString
                                   1001 ;	display.c:8: SSD1306_SetPosition(1, 2);
      000018 90r00r00         [24] 1002 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00001B 74 02            [12] 1003 	mov	a,#0x02
      00001D F0               [24] 1004 	movx	@dptr,a
      00001E 75 82 01         [24] 1005 	mov	dpl,#0x01
      000021 12r00r00         [24] 1006 	lcall	_SSD1306_SetPosition
                                   1007 ;	display.c:9: SSD1306_DrawString("   Stepper Motor");
      000024 90r01rEE         [24] 1008 	mov	dptr,#___str_1
      000027 75 F0 80         [24] 1009 	mov	b,#0x80
      00002A 12r00r00         [24] 1010 	lcall	_SSD1306_DrawString
                                   1011 ;	display.c:10: SSD1306_SetPosition(1, 3);
      00002D 90r00r00         [24] 1012 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000030 74 03            [12] 1013 	mov	a,#0x03
      000032 F0               [24] 1014 	movx	@dptr,a
      000033 75 82 01         [24] 1015 	mov	dpl,#0x01
      000036 12r00r00         [24] 1016 	lcall	_SSD1306_SetPosition
                                   1017 ;	display.c:11: SSD1306_DrawString("     Controller");
      000039 90r01rFF         [24] 1018 	mov	dptr,#___str_2
      00003C 75 F0 80         [24] 1019 	mov	b,#0x80
      00003F 12r00r00         [24] 1020 	lcall	_SSD1306_DrawString
                                   1021 ;	display.c:12: SSD1306_SetPosition(1, 4);
      000042 90r00r00         [24] 1022 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000045 74 04            [12] 1023 	mov	a,#0x04
      000047 F0               [24] 1024 	movx	@dptr,a
      000048 75 82 01         [24] 1025 	mov	dpl,#0x01
      00004B 12r00r00         [24] 1026 	lcall	_SSD1306_SetPosition
                                   1027 ;	display.c:13: SSD1306_DrawString("        V1.0");
      00004E 90r02r0F         [24] 1028 	mov	dptr,#___str_3
      000051 75 F0 80         [24] 1029 	mov	b,#0x80
      000054 12r00r00         [24] 1030 	lcall	_SSD1306_DrawString
                                   1031 ;	display.c:15: SSD1306_SetPosition(1, 6);
      000057 90r00r00         [24] 1032 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00005A 74 06            [12] 1033 	mov	a,#0x06
      00005C F0               [24] 1034 	movx	@dptr,a
      00005D 75 82 01         [24] 1035 	mov	dpl,#0x01
      000060 12r00r00         [24] 1036 	lcall	_SSD1306_SetPosition
                                   1037 ;	display.c:16: SSD1306_DrawString("       Press..");
      000063 90r02r1C         [24] 1038 	mov	dptr,#___str_4
      000066 75 F0 80         [24] 1039 	mov	b,#0x80
      000069 12r00r00         [24] 1040 	lcall	_SSD1306_DrawString
                                   1041 ;	display.c:18: SSD1306_UpdateScreen();
                                   1042 ;	display.c:19: }
      00006C 02r00r00         [24] 1043 	ljmp	_SSD1306_UpdateScreen
                                   1044 ;------------------------------------------------------------
                                   1045 ;Allocation info for local variables in function 'display_menu_page'
                                   1046 ;------------------------------------------------------------
                                   1047 ;selected_page             Allocated with name '_display_menu_page_selected_page_65536_150'
                                   1048 ;------------------------------------------------------------
                                   1049 ;	display.c:23: void display_menu_page(menu_page_selected_page_t selected_page) {
                                   1050 ;	-----------------------------------------
                                   1051 ;	 function display_menu_page
                                   1052 ;	-----------------------------------------
      00006F                       1053 _display_menu_page:
      00006F E5 82            [12] 1054 	mov	a,dpl
      000071 90r00r01         [24] 1055 	mov	dptr,#_display_menu_page_selected_page_65536_150
      000074 F0               [24] 1056 	movx	@dptr,a
                                   1057 ;	display.c:24: if(menu_page_selected_page != selected_page) {
      000075 90r00r00         [24] 1058 	mov	dptr,#_menu_page_selected_page
      000078 E0               [24] 1059 	movx	a,@dptr
      000079 FF               [12] 1060 	mov	r7,a
      00007A 90r00r01         [24] 1061 	mov	dptr,#_display_menu_page_selected_page_65536_150
      00007D E0               [24] 1062 	movx	a,@dptr
      00007E FE               [12] 1063 	mov	r6,a
      00007F EF               [12] 1064 	mov	a,r7
      000080 B5 06 01         [24] 1065 	cjne	a,ar6,00126$
      000083 22               [24] 1066 	ret
      000084                       1067 00126$:
                                   1068 ;	display.c:25: menu_page_selected_page = selected_page;
      000084 90r00r00         [24] 1069 	mov	dptr,#_menu_page_selected_page
      000087 EE               [12] 1070 	mov	a,r6
      000088 F0               [24] 1071 	movx	@dptr,a
                                   1072 ;	display.c:27: SSD1306_ClearScreen();
      000089 C0 06            [24] 1073 	push	ar6
      00008B 12r00r00         [24] 1074 	lcall	_SSD1306_ClearScreen
                                   1075 ;	display.c:28: SSD1306_SetPosition(1, 0);
      00008E 90r00r00         [24] 1076 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000091 E4               [12] 1077 	clr	a
      000092 F0               [24] 1078 	movx	@dptr,a
      000093 75 82 01         [24] 1079 	mov	dpl,#0x01
      000096 12r00r00         [24] 1080 	lcall	_SSD1306_SetPosition
                                   1081 ;	display.c:29: SSD1306_DrawString("      Main Menu");
      000099 90r02r2B         [24] 1082 	mov	dptr,#___str_5
      00009C 75 F0 80         [24] 1083 	mov	b,#0x80
      00009F 12r00r00         [24] 1084 	lcall	_SSD1306_DrawString
      0000A2 D0 06            [24] 1085 	pop	ar6
                                   1086 ;	display.c:31: switch(selected_page) {
      0000A4 BE 00 02         [24] 1087 	cjne	r6,#0x00,00127$
      0000A7 80 0E            [24] 1088 	sjmp	00101$
      0000A9                       1089 00127$:
      0000A9 BE 01 02         [24] 1090 	cjne	r6,#0x01,00128$
      0000AC 80 4B            [24] 1091 	sjmp	00102$
      0000AE                       1092 00128$:
      0000AE BE 02 03         [24] 1093 	cjne	r6,#0x02,00129$
      0000B1 02r01r3B         [24] 1094 	ljmp	00103$
      0000B4                       1095 00129$:
      0000B4 02r01r7C         [24] 1096 	ljmp	00104$
                                   1097 ;	display.c:33: case STEP_CONTROL_PAGE_SELECTED:
      0000B7                       1098 00101$:
                                   1099 ;	display.c:34: SSD1306_SetPosition(1, 2);
      0000B7 90r00r00         [24] 1100 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0000BA 74 02            [12] 1101 	mov	a,#0x02
      0000BC F0               [24] 1102 	movx	@dptr,a
      0000BD 75 82 01         [24] 1103 	mov	dpl,#0x01
      0000C0 12r00r00         [24] 1104 	lcall	_SSD1306_SetPosition
                                   1105 ;	display.c:35: SSD1306_DrawString("> Step Control");
      0000C3 90r02r3B         [24] 1106 	mov	dptr,#___str_6
      0000C6 75 F0 80         [24] 1107 	mov	b,#0x80
      0000C9 12r00r00         [24] 1108 	lcall	_SSD1306_DrawString
                                   1109 ;	display.c:36: SSD1306_SetPosition(1, 3);
      0000CC 90r00r00         [24] 1110 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0000CF 74 03            [12] 1111 	mov	a,#0x03
      0000D1 F0               [24] 1112 	movx	@dptr,a
      0000D2 75 82 01         [24] 1113 	mov	dpl,#0x01
      0000D5 12r00r00         [24] 1114 	lcall	_SSD1306_SetPosition
                                   1115 ;	display.c:37: SSD1306_DrawString("  Distance Control");
      0000D8 90r02r4A         [24] 1116 	mov	dptr,#___str_7
      0000DB 75 F0 80         [24] 1117 	mov	b,#0x80
      0000DE 12r00r00         [24] 1118 	lcall	_SSD1306_DrawString
                                   1119 ;	display.c:38: SSD1306_SetPosition(1, 4);
      0000E1 90r00r00         [24] 1120 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0000E4 74 04            [12] 1121 	mov	a,#0x04
      0000E6 F0               [24] 1122 	movx	@dptr,a
      0000E7 75 82 01         [24] 1123 	mov	dpl,#0x01
      0000EA 12r00r00         [24] 1124 	lcall	_SSD1306_SetPosition
                                   1125 ;	display.c:39: SSD1306_DrawString("  Encoder Control");
      0000ED 90r02r5D         [24] 1126 	mov	dptr,#___str_8
      0000F0 75 F0 80         [24] 1127 	mov	b,#0x80
      0000F3 12r00r00         [24] 1128 	lcall	_SSD1306_DrawString
                                   1129 ;	display.c:40: break;
      0000F6 02r00r00         [24] 1130 	ljmp	_SSD1306_UpdateScreen
                                   1131 ;	display.c:42: case DISTANCE_CONTROL_PAGE_SELECTED:
      0000F9                       1132 00102$:
                                   1133 ;	display.c:43: SSD1306_SetPosition(1, 2);
      0000F9 90r00r00         [24] 1134 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0000FC 74 02            [12] 1135 	mov	a,#0x02
      0000FE F0               [24] 1136 	movx	@dptr,a
      0000FF 75 82 01         [24] 1137 	mov	dpl,#0x01
      000102 12r00r00         [24] 1138 	lcall	_SSD1306_SetPosition
                                   1139 ;	display.c:44: SSD1306_DrawString("  Step Control");
      000105 90r02r6F         [24] 1140 	mov	dptr,#___str_9
      000108 75 F0 80         [24] 1141 	mov	b,#0x80
      00010B 12r00r00         [24] 1142 	lcall	_SSD1306_DrawString
                                   1143 ;	display.c:45: SSD1306_SetPosition(1, 3);
      00010E 90r00r00         [24] 1144 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000111 74 03            [12] 1145 	mov	a,#0x03
      000113 F0               [24] 1146 	movx	@dptr,a
      000114 75 82 01         [24] 1147 	mov	dpl,#0x01
      000117 12r00r00         [24] 1148 	lcall	_SSD1306_SetPosition
                                   1149 ;	display.c:46: SSD1306_DrawString("> Distance Control");
      00011A 90r02r7E         [24] 1150 	mov	dptr,#___str_10
      00011D 75 F0 80         [24] 1151 	mov	b,#0x80
      000120 12r00r00         [24] 1152 	lcall	_SSD1306_DrawString
                                   1153 ;	display.c:47: SSD1306_SetPosition(1, 4);
      000123 90r00r00         [24] 1154 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000126 74 04            [12] 1155 	mov	a,#0x04
      000128 F0               [24] 1156 	movx	@dptr,a
      000129 75 82 01         [24] 1157 	mov	dpl,#0x01
      00012C 12r00r00         [24] 1158 	lcall	_SSD1306_SetPosition
                                   1159 ;	display.c:48: SSD1306_DrawString("  Encoder Control");
      00012F 90r02r5D         [24] 1160 	mov	dptr,#___str_8
      000132 75 F0 80         [24] 1161 	mov	b,#0x80
      000135 12r00r00         [24] 1162 	lcall	_SSD1306_DrawString
                                   1163 ;	display.c:49: break;
      000138 02r00r00         [24] 1164 	ljmp	_SSD1306_UpdateScreen
                                   1165 ;	display.c:51: case ENCODER_CONTROL_PAGE_SELECTED:
      00013B                       1166 00103$:
                                   1167 ;	display.c:52: SSD1306_SetPosition(1, 2);
      00013B 90r00r00         [24] 1168 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00013E 74 02            [12] 1169 	mov	a,#0x02
      000140 F0               [24] 1170 	movx	@dptr,a
      000141 75 82 01         [24] 1171 	mov	dpl,#0x01
      000144 12r00r00         [24] 1172 	lcall	_SSD1306_SetPosition
                                   1173 ;	display.c:53: SSD1306_DrawString("  Step Control");
      000147 90r02r6F         [24] 1174 	mov	dptr,#___str_9
      00014A 75 F0 80         [24] 1175 	mov	b,#0x80
      00014D 12r00r00         [24] 1176 	lcall	_SSD1306_DrawString
                                   1177 ;	display.c:54: SSD1306_SetPosition(1, 3);
      000150 90r00r00         [24] 1178 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000153 74 03            [12] 1179 	mov	a,#0x03
      000155 F0               [24] 1180 	movx	@dptr,a
      000156 75 82 01         [24] 1181 	mov	dpl,#0x01
      000159 12r00r00         [24] 1182 	lcall	_SSD1306_SetPosition
                                   1183 ;	display.c:55: SSD1306_DrawString("  Distance Control");
      00015C 90r02r4A         [24] 1184 	mov	dptr,#___str_7
      00015F 75 F0 80         [24] 1185 	mov	b,#0x80
      000162 12r00r00         [24] 1186 	lcall	_SSD1306_DrawString
                                   1187 ;	display.c:56: SSD1306_SetPosition(1, 4);
      000165 90r00r00         [24] 1188 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000168 74 04            [12] 1189 	mov	a,#0x04
      00016A F0               [24] 1190 	movx	@dptr,a
      00016B 75 82 01         [24] 1191 	mov	dpl,#0x01
      00016E 12r00r00         [24] 1192 	lcall	_SSD1306_SetPosition
                                   1193 ;	display.c:57: SSD1306_DrawString("> Encoder Control");
      000171 90r02r91         [24] 1194 	mov	dptr,#___str_11
      000174 75 F0 80         [24] 1195 	mov	b,#0x80
      000177 12r00r00         [24] 1196 	lcall	_SSD1306_DrawString
                                   1197 ;	display.c:58: break;
                                   1198 ;	display.c:60: default:
      00017A 80 3F            [24] 1199 	sjmp	00105$
      00017C                       1200 00104$:
                                   1201 ;	display.c:61: SSD1306_SetPosition(1, 2);
      00017C 90r00r00         [24] 1202 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00017F 74 02            [12] 1203 	mov	a,#0x02
      000181 F0               [24] 1204 	movx	@dptr,a
      000182 75 82 01         [24] 1205 	mov	dpl,#0x01
      000185 12r00r00         [24] 1206 	lcall	_SSD1306_SetPosition
                                   1207 ;	display.c:62: SSD1306_DrawString("  Step Control");
      000188 90r02r6F         [24] 1208 	mov	dptr,#___str_9
      00018B 75 F0 80         [24] 1209 	mov	b,#0x80
      00018E 12r00r00         [24] 1210 	lcall	_SSD1306_DrawString
                                   1211 ;	display.c:63: SSD1306_SetPosition(1, 3);
      000191 90r00r00         [24] 1212 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000194 74 03            [12] 1213 	mov	a,#0x03
      000196 F0               [24] 1214 	movx	@dptr,a
      000197 75 82 01         [24] 1215 	mov	dpl,#0x01
      00019A 12r00r00         [24] 1216 	lcall	_SSD1306_SetPosition
                                   1217 ;	display.c:64: SSD1306_DrawString("  Distance Control");
      00019D 90r02r4A         [24] 1218 	mov	dptr,#___str_7
      0001A0 75 F0 80         [24] 1219 	mov	b,#0x80
      0001A3 12r00r00         [24] 1220 	lcall	_SSD1306_DrawString
                                   1221 ;	display.c:65: SSD1306_SetPosition(1, 4);
      0001A6 90r00r00         [24] 1222 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0001A9 74 04            [12] 1223 	mov	a,#0x04
      0001AB F0               [24] 1224 	movx	@dptr,a
      0001AC 75 82 01         [24] 1225 	mov	dpl,#0x01
      0001AF 12r00r00         [24] 1226 	lcall	_SSD1306_SetPosition
                                   1227 ;	display.c:66: SSD1306_DrawString("  Encoder Control");
      0001B2 90r02r5D         [24] 1228 	mov	dptr,#___str_8
      0001B5 75 F0 80         [24] 1229 	mov	b,#0x80
      0001B8 12r00r00         [24] 1230 	lcall	_SSD1306_DrawString
                                   1231 ;	display.c:71: } 
      0001BB                       1232 00105$:
                                   1233 ;	display.c:72: SSD1306_UpdateScreen();
                                   1234 ;	display.c:74: }
      0001BB 02r00r00         [24] 1235 	ljmp	_SSD1306_UpdateScreen
                                   1236 ;------------------------------------------------------------
                                   1237 ;Allocation info for local variables in function 'display_step_control_page_first_time'
                                   1238 ;------------------------------------------------------------
                                   1239 ;	display.c:76: void display_step_control_page_first_time(void) {
                                   1240 ;	-----------------------------------------
                                   1241 ;	 function display_step_control_page_first_time
                                   1242 ;	-----------------------------------------
      0001BE                       1243 _display_step_control_page_first_time:
                                   1244 ;	display.c:78: SSD1306_ClearScreen();
      0001BE 12r00r00         [24] 1245 	lcall	_SSD1306_ClearScreen
                                   1246 ;	display.c:79: SSD1306_SetPosition(1, 0);
      0001C1 90r00r00         [24] 1247 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0001C4 E4               [12] 1248 	clr	a
      0001C5 F0               [24] 1249 	movx	@dptr,a
      0001C6 75 82 01         [24] 1250 	mov	dpl,#0x01
      0001C9 12r00r00         [24] 1251 	lcall	_SSD1306_SetPosition
                                   1252 ;	display.c:80: SSD1306_DrawString("     Step Control");
      0001CC 90r02rA3         [24] 1253 	mov	dptr,#___str_12
      0001CF 75 F0 80         [24] 1254 	mov	b,#0x80
      0001D2 12r00r00         [24] 1255 	lcall	_SSD1306_DrawString
                                   1256 ;	display.c:81: SSD1306_SetPosition(1, 1);
      0001D5 90r00r00         [24] 1257 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0001D8 74 01            [12] 1258 	mov	a,#0x01
      0001DA F0               [24] 1259 	movx	@dptr,a
      0001DB 75 82 01         [24] 1260 	mov	dpl,#0x01
      0001DE 12r00r00         [24] 1261 	lcall	_SSD1306_SetPosition
                                   1262 ;	display.c:82: SSD1306_DrawString("Dir: CCW         FREE");
      0001E1 90r02rB5         [24] 1263 	mov	dptr,#___str_13
      0001E4 75 F0 80         [24] 1264 	mov	b,#0x80
      0001E7 12r00r00         [24] 1265 	lcall	_SSD1306_DrawString
                                   1266 ;	display.c:83: SSD1306_SetPosition(1, 2);
      0001EA 90r00r00         [24] 1267 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0001ED 74 02            [12] 1268 	mov	a,#0x02
      0001EF F0               [24] 1269 	movx	@dptr,a
      0001F0 75 82 01         [24] 1270 	mov	dpl,#0x01
      0001F3 12r00r00         [24] 1271 	lcall	_SSD1306_SetPosition
                                   1272 ;	display.c:84: SSD1306_DrawString("> Frequency");
      0001F6 90r02rCB         [24] 1273 	mov	dptr,#___str_14
      0001F9 75 F0 80         [24] 1274 	mov	b,#0x80
      0001FC 12r00r00         [24] 1275 	lcall	_SSD1306_DrawString
                                   1276 ;	display.c:85: SSD1306_SetPosition(1, 3);
      0001FF 90r00r00         [24] 1277 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000202 74 03            [12] 1278 	mov	a,#0x03
      000204 F0               [24] 1279 	movx	@dptr,a
      000205 75 82 01         [24] 1280 	mov	dpl,#0x01
      000208 12r00r00         [24] 1281 	lcall	_SSD1306_SetPosition
                                   1282 ;	display.c:86: SSD1306_DrawString("  Microstepping");
      00020B 90r02rD7         [24] 1283 	mov	dptr,#___str_15
      00020E 75 F0 80         [24] 1284 	mov	b,#0x80
      000211 12r00r00         [24] 1285 	lcall	_SSD1306_DrawString
                                   1286 ;	display.c:87: SSD1306_SetPosition(1, 4);
      000214 90r00r00         [24] 1287 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000217 74 04            [12] 1288 	mov	a,#0x04
      000219 F0               [24] 1289 	movx	@dptr,a
      00021A 75 82 01         [24] 1290 	mov	dpl,#0x01
      00021D 12r00r00         [24] 1291 	lcall	_SSD1306_SetPosition
                                   1292 ;	display.c:88: SSD1306_DrawString("  Steps");
      000220 90r02rE7         [24] 1293 	mov	dptr,#___str_16
      000223 75 F0 80         [24] 1294 	mov	b,#0x80
      000226 12r00r00         [24] 1295 	lcall	_SSD1306_DrawString
                                   1296 ;	display.c:89: SSD1306_SetPosition(1, 5);
      000229 90r00r00         [24] 1297 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00022C 74 05            [12] 1298 	mov	a,#0x05
      00022E F0               [24] 1299 	movx	@dptr,a
      00022F 75 82 01         [24] 1300 	mov	dpl,#0x01
      000232 12r00r00         [24] 1301 	lcall	_SSD1306_SetPosition
                                   1302 ;	display.c:90: SSD1306_DrawString("  Go Back");
      000235 90r02rEF         [24] 1303 	mov	dptr,#___str_17
      000238 75 F0 80         [24] 1304 	mov	b,#0x80
      00023B 12r00r00         [24] 1305 	lcall	_SSD1306_DrawString
                                   1306 ;	display.c:93: SSD1306_SetPosition(1, 7);
      00023E 90r00r00         [24] 1307 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000241 74 07            [12] 1308 	mov	a,#0x07
      000243 F0               [24] 1309 	movx	@dptr,a
      000244 75 82 01         [24] 1310 	mov	dpl,#0x01
      000247 12r00r00         [24] 1311 	lcall	_SSD1306_SetPosition
                                   1312 ;	display.c:94: SSD1306_DrawString("         Run         ");
      00024A 90r02rF9         [24] 1313 	mov	dptr,#___str_18
      00024D 75 F0 80         [24] 1314 	mov	b,#0x80
      000250 12r00r00         [24] 1315 	lcall	_SSD1306_DrawString
                                   1316 ;	display.c:96: SSD1306_UpdateScreen();
                                   1317 ;	display.c:97: }
      000253 02r00r00         [24] 1318 	ljmp	_SSD1306_UpdateScreen
                                   1319 ;------------------------------------------------------------
                                   1320 ;Allocation info for local variables in function 'display_step_control_page'
                                   1321 ;------------------------------------------------------------
                                   1322 ;step_control_page_options Allocated with name '_display_step_control_page_step_control_page_options_65536_156'
                                   1323 ;------------------------------------------------------------
                                   1324 ;	display.c:101: void display_step_control_page(step_control_page_options_t step_control_page_options) {
                                   1325 ;	-----------------------------------------
                                   1326 ;	 function display_step_control_page
                                   1327 ;	-----------------------------------------
      000256                       1328 _display_step_control_page:
      000256 E5 82            [12] 1329 	mov	a,dpl
      000258 90r00r02         [24] 1330 	mov	dptr,#_display_step_control_page_step_control_page_options_65536_156
      00025B F0               [24] 1331 	movx	@dptr,a
                                   1332 ;	display.c:102: if(step_control_page_options_last != step_control_page_options) {
      00025C 90r00r01         [24] 1333 	mov	dptr,#_step_control_page_options_last
      00025F E0               [24] 1334 	movx	a,@dptr
      000260 FF               [12] 1335 	mov	r7,a
      000261 90r00r02         [24] 1336 	mov	dptr,#_display_step_control_page_step_control_page_options_65536_156
      000264 E0               [24] 1337 	movx	a,@dptr
      000265 FE               [12] 1338 	mov	r6,a
      000266 EF               [12] 1339 	mov	a,r7
      000267 B5 06 03         [24] 1340 	cjne	a,ar6,00140$
      00026A 02r05r18         [24] 1341 	ljmp	00109$
      00026D                       1342 00140$:
                                   1343 ;	display.c:103: step_control_page_options_last = step_control_page_options;
      00026D 90r00r01         [24] 1344 	mov	dptr,#_step_control_page_options_last
      000270 EE               [12] 1345 	mov	a,r6
      000271 F0               [24] 1346 	movx	@dptr,a
                                   1347 ;	display.c:104: switch(step_control_page_options) {
      000272 EE               [12] 1348 	mov	a,r6
      000273 FF               [12] 1349 	mov	r7,a
      000274 24 FB            [12] 1350 	add	a,#0xff - 0x04
      000276 50 03            [24] 1351 	jnc	00141$
      000278 02r04rAC         [24] 1352 	ljmp	00106$
      00027B                       1353 00141$:
      00027B EF               [12] 1354 	mov	a,r7
      00027C 2F               [12] 1355 	add	a,r7
      00027D 2F               [12] 1356 	add	a,r7
      00027E 90r02r82         [24] 1357 	mov	dptr,#00142$
      000281 73               [24] 1358 	jmp	@a+dptr
      000282                       1359 00142$:
      000282 02r02r91         [24] 1360 	ljmp	00101$
      000285 02r02rFD         [24] 1361 	ljmp	00102$
      000288 02r03r69         [24] 1362 	ljmp	00103$
      00028B 02r03rD5         [24] 1363 	ljmp	00104$
      00028E 02r04r41         [24] 1364 	ljmp	00105$
                                   1365 ;	display.c:106: case SET_FREQUENCY_OPTION:
      000291                       1366 00101$:
                                   1367 ;	display.c:107: SSD1306_SetPosition(1, 2);
      000291 90r00r00         [24] 1368 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000294 74 02            [12] 1369 	mov	a,#0x02
      000296 F0               [24] 1370 	movx	@dptr,a
      000297 75 82 01         [24] 1371 	mov	dpl,#0x01
      00029A 12r00r00         [24] 1372 	lcall	_SSD1306_SetPosition
                                   1373 ;	display.c:108: SSD1306_DrawString("> Frequency");
      00029D 90r02rCB         [24] 1374 	mov	dptr,#___str_14
      0002A0 75 F0 80         [24] 1375 	mov	b,#0x80
      0002A3 12r00r00         [24] 1376 	lcall	_SSD1306_DrawString
                                   1377 ;	display.c:109: SSD1306_SetPosition(1, 3);
      0002A6 90r00r00         [24] 1378 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0002A9 74 03            [12] 1379 	mov	a,#0x03
      0002AB F0               [24] 1380 	movx	@dptr,a
      0002AC 75 82 01         [24] 1381 	mov	dpl,#0x01
      0002AF 12r00r00         [24] 1382 	lcall	_SSD1306_SetPosition
                                   1383 ;	display.c:110: SSD1306_DrawString("  Microstepping");
      0002B2 90r02rD7         [24] 1384 	mov	dptr,#___str_15
      0002B5 75 F0 80         [24] 1385 	mov	b,#0x80
      0002B8 12r00r00         [24] 1386 	lcall	_SSD1306_DrawString
                                   1387 ;	display.c:111: SSD1306_SetPosition(1, 4);
      0002BB 90r00r00         [24] 1388 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0002BE 74 04            [12] 1389 	mov	a,#0x04
      0002C0 F0               [24] 1390 	movx	@dptr,a
      0002C1 75 82 01         [24] 1391 	mov	dpl,#0x01
      0002C4 12r00r00         [24] 1392 	lcall	_SSD1306_SetPosition
                                   1393 ;	display.c:112: SSD1306_DrawString("  Steps");
      0002C7 90r02rE7         [24] 1394 	mov	dptr,#___str_16
      0002CA 75 F0 80         [24] 1395 	mov	b,#0x80
      0002CD 12r00r00         [24] 1396 	lcall	_SSD1306_DrawString
                                   1397 ;	display.c:113: SSD1306_SetPosition(1, 5);
      0002D0 90r00r00         [24] 1398 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0002D3 74 05            [12] 1399 	mov	a,#0x05
      0002D5 F0               [24] 1400 	movx	@dptr,a
      0002D6 75 82 01         [24] 1401 	mov	dpl,#0x01
      0002D9 12r00r00         [24] 1402 	lcall	_SSD1306_SetPosition
                                   1403 ;	display.c:114: SSD1306_DrawString("  Go Back");
      0002DC 90r02rEF         [24] 1404 	mov	dptr,#___str_17
      0002DF 75 F0 80         [24] 1405 	mov	b,#0x80
      0002E2 12r00r00         [24] 1406 	lcall	_SSD1306_DrawString
                                   1407 ;	display.c:115: SSD1306_SetPosition(1, 7);
      0002E5 90r00r00         [24] 1408 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0002E8 74 07            [12] 1409 	mov	a,#0x07
      0002EA F0               [24] 1410 	movx	@dptr,a
      0002EB 75 82 01         [24] 1411 	mov	dpl,#0x01
      0002EE 12r00r00         [24] 1412 	lcall	_SSD1306_SetPosition
                                   1413 ;	display.c:116: SSD1306_DrawString("         Run         ");
      0002F1 90r02rF9         [24] 1414 	mov	dptr,#___str_18
      0002F4 75 F0 80         [24] 1415 	mov	b,#0x80
      0002F7 12r00r00         [24] 1416 	lcall	_SSD1306_DrawString
                                   1417 ;	display.c:117: break;
      0002FA 02r05r15         [24] 1418 	ljmp	00107$
                                   1419 ;	display.c:119: case SET_MICROSTEPPING_OPTION:
      0002FD                       1420 00102$:
                                   1421 ;	display.c:120: SSD1306_SetPosition(1, 2);
      0002FD 90r00r00         [24] 1422 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000300 74 02            [12] 1423 	mov	a,#0x02
      000302 F0               [24] 1424 	movx	@dptr,a
      000303 75 82 01         [24] 1425 	mov	dpl,#0x01
      000306 12r00r00         [24] 1426 	lcall	_SSD1306_SetPosition
                                   1427 ;	display.c:121: SSD1306_DrawString("  Frequency");
      000309 90r03r0F         [24] 1428 	mov	dptr,#___str_19
      00030C 75 F0 80         [24] 1429 	mov	b,#0x80
      00030F 12r00r00         [24] 1430 	lcall	_SSD1306_DrawString
                                   1431 ;	display.c:122: SSD1306_SetPosition(1, 3);
      000312 90r00r00         [24] 1432 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000315 74 03            [12] 1433 	mov	a,#0x03
      000317 F0               [24] 1434 	movx	@dptr,a
      000318 75 82 01         [24] 1435 	mov	dpl,#0x01
      00031B 12r00r00         [24] 1436 	lcall	_SSD1306_SetPosition
                                   1437 ;	display.c:123: SSD1306_DrawString("> Microstepping");
      00031E 90r03r1B         [24] 1438 	mov	dptr,#___str_20
      000321 75 F0 80         [24] 1439 	mov	b,#0x80
      000324 12r00r00         [24] 1440 	lcall	_SSD1306_DrawString
                                   1441 ;	display.c:124: SSD1306_SetPosition(1, 4);
      000327 90r00r00         [24] 1442 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00032A 74 04            [12] 1443 	mov	a,#0x04
      00032C F0               [24] 1444 	movx	@dptr,a
      00032D 75 82 01         [24] 1445 	mov	dpl,#0x01
      000330 12r00r00         [24] 1446 	lcall	_SSD1306_SetPosition
                                   1447 ;	display.c:125: SSD1306_DrawString("  Steps");
      000333 90r02rE7         [24] 1448 	mov	dptr,#___str_16
      000336 75 F0 80         [24] 1449 	mov	b,#0x80
      000339 12r00r00         [24] 1450 	lcall	_SSD1306_DrawString
                                   1451 ;	display.c:126: SSD1306_SetPosition(1, 5);
      00033C 90r00r00         [24] 1452 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00033F 74 05            [12] 1453 	mov	a,#0x05
      000341 F0               [24] 1454 	movx	@dptr,a
      000342 75 82 01         [24] 1455 	mov	dpl,#0x01
      000345 12r00r00         [24] 1456 	lcall	_SSD1306_SetPosition
                                   1457 ;	display.c:127: SSD1306_DrawString("  Go Back");
      000348 90r02rEF         [24] 1458 	mov	dptr,#___str_17
      00034B 75 F0 80         [24] 1459 	mov	b,#0x80
      00034E 12r00r00         [24] 1460 	lcall	_SSD1306_DrawString
                                   1461 ;	display.c:128: SSD1306_SetPosition(1, 7);
      000351 90r00r00         [24] 1462 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000354 74 07            [12] 1463 	mov	a,#0x07
      000356 F0               [24] 1464 	movx	@dptr,a
      000357 75 82 01         [24] 1465 	mov	dpl,#0x01
      00035A 12r00r00         [24] 1466 	lcall	_SSD1306_SetPosition
                                   1467 ;	display.c:129: SSD1306_DrawString("         Run         ");
      00035D 90r02rF9         [24] 1468 	mov	dptr,#___str_18
      000360 75 F0 80         [24] 1469 	mov	b,#0x80
      000363 12r00r00         [24] 1470 	lcall	_SSD1306_DrawString
                                   1471 ;	display.c:130: break;
      000366 02r05r15         [24] 1472 	ljmp	00107$
                                   1473 ;	display.c:132: case SET_STEPS:
      000369                       1474 00103$:
                                   1475 ;	display.c:133: SSD1306_SetPosition(1, 2);
      000369 90r00r00         [24] 1476 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00036C 74 02            [12] 1477 	mov	a,#0x02
      00036E F0               [24] 1478 	movx	@dptr,a
      00036F 75 82 01         [24] 1479 	mov	dpl,#0x01
      000372 12r00r00         [24] 1480 	lcall	_SSD1306_SetPosition
                                   1481 ;	display.c:134: SSD1306_DrawString("  Frequency");
      000375 90r03r0F         [24] 1482 	mov	dptr,#___str_19
      000378 75 F0 80         [24] 1483 	mov	b,#0x80
      00037B 12r00r00         [24] 1484 	lcall	_SSD1306_DrawString
                                   1485 ;	display.c:135: SSD1306_SetPosition(1, 3);
      00037E 90r00r00         [24] 1486 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000381 74 03            [12] 1487 	mov	a,#0x03
      000383 F0               [24] 1488 	movx	@dptr,a
      000384 75 82 01         [24] 1489 	mov	dpl,#0x01
      000387 12r00r00         [24] 1490 	lcall	_SSD1306_SetPosition
                                   1491 ;	display.c:136: SSD1306_DrawString("  Microstepping");
      00038A 90r02rD7         [24] 1492 	mov	dptr,#___str_15
      00038D 75 F0 80         [24] 1493 	mov	b,#0x80
      000390 12r00r00         [24] 1494 	lcall	_SSD1306_DrawString
                                   1495 ;	display.c:137: SSD1306_SetPosition(1, 4);
      000393 90r00r00         [24] 1496 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000396 74 04            [12] 1497 	mov	a,#0x04
      000398 F0               [24] 1498 	movx	@dptr,a
      000399 75 82 01         [24] 1499 	mov	dpl,#0x01
      00039C 12r00r00         [24] 1500 	lcall	_SSD1306_SetPosition
                                   1501 ;	display.c:138: SSD1306_DrawString("> Steps");
      00039F 90r03r2B         [24] 1502 	mov	dptr,#___str_21
      0003A2 75 F0 80         [24] 1503 	mov	b,#0x80
      0003A5 12r00r00         [24] 1504 	lcall	_SSD1306_DrawString
                                   1505 ;	display.c:139: SSD1306_SetPosition(1, 5);
      0003A8 90r00r00         [24] 1506 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0003AB 74 05            [12] 1507 	mov	a,#0x05
      0003AD F0               [24] 1508 	movx	@dptr,a
      0003AE 75 82 01         [24] 1509 	mov	dpl,#0x01
      0003B1 12r00r00         [24] 1510 	lcall	_SSD1306_SetPosition
                                   1511 ;	display.c:140: SSD1306_DrawString("  Go Back");
      0003B4 90r02rEF         [24] 1512 	mov	dptr,#___str_17
      0003B7 75 F0 80         [24] 1513 	mov	b,#0x80
      0003BA 12r00r00         [24] 1514 	lcall	_SSD1306_DrawString
                                   1515 ;	display.c:141: SSD1306_SetPosition(1, 7);
      0003BD 90r00r00         [24] 1516 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0003C0 74 07            [12] 1517 	mov	a,#0x07
      0003C2 F0               [24] 1518 	movx	@dptr,a
      0003C3 75 82 01         [24] 1519 	mov	dpl,#0x01
      0003C6 12r00r00         [24] 1520 	lcall	_SSD1306_SetPosition
                                   1521 ;	display.c:142: SSD1306_DrawString("         Run         ");
      0003C9 90r02rF9         [24] 1522 	mov	dptr,#___str_18
      0003CC 75 F0 80         [24] 1523 	mov	b,#0x80
      0003CF 12r00r00         [24] 1524 	lcall	_SSD1306_DrawString
                                   1525 ;	display.c:144: break;
      0003D2 02r05r15         [24] 1526 	ljmp	00107$
                                   1527 ;	display.c:146: case GO_BACK:
      0003D5                       1528 00104$:
                                   1529 ;	display.c:147: SSD1306_SetPosition(1, 2);
      0003D5 90r00r00         [24] 1530 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0003D8 74 02            [12] 1531 	mov	a,#0x02
      0003DA F0               [24] 1532 	movx	@dptr,a
      0003DB 75 82 01         [24] 1533 	mov	dpl,#0x01
      0003DE 12r00r00         [24] 1534 	lcall	_SSD1306_SetPosition
                                   1535 ;	display.c:148: SSD1306_DrawString("  Frequency");
      0003E1 90r03r0F         [24] 1536 	mov	dptr,#___str_19
      0003E4 75 F0 80         [24] 1537 	mov	b,#0x80
      0003E7 12r00r00         [24] 1538 	lcall	_SSD1306_DrawString
                                   1539 ;	display.c:149: SSD1306_SetPosition(1, 3);
      0003EA 90r00r00         [24] 1540 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0003ED 74 03            [12] 1541 	mov	a,#0x03
      0003EF F0               [24] 1542 	movx	@dptr,a
      0003F0 75 82 01         [24] 1543 	mov	dpl,#0x01
      0003F3 12r00r00         [24] 1544 	lcall	_SSD1306_SetPosition
                                   1545 ;	display.c:150: SSD1306_DrawString("  Microstepping");
      0003F6 90r02rD7         [24] 1546 	mov	dptr,#___str_15
      0003F9 75 F0 80         [24] 1547 	mov	b,#0x80
      0003FC 12r00r00         [24] 1548 	lcall	_SSD1306_DrawString
                                   1549 ;	display.c:151: SSD1306_SetPosition(1, 4);
      0003FF 90r00r00         [24] 1550 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000402 74 04            [12] 1551 	mov	a,#0x04
      000404 F0               [24] 1552 	movx	@dptr,a
      000405 75 82 01         [24] 1553 	mov	dpl,#0x01
      000408 12r00r00         [24] 1554 	lcall	_SSD1306_SetPosition
                                   1555 ;	display.c:152: SSD1306_DrawString("  Steps");
      00040B 90r02rE7         [24] 1556 	mov	dptr,#___str_16
      00040E 75 F0 80         [24] 1557 	mov	b,#0x80
      000411 12r00r00         [24] 1558 	lcall	_SSD1306_DrawString
                                   1559 ;	display.c:153: SSD1306_SetPosition(1, 5);
      000414 90r00r00         [24] 1560 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000417 74 05            [12] 1561 	mov	a,#0x05
      000419 F0               [24] 1562 	movx	@dptr,a
      00041A 75 82 01         [24] 1563 	mov	dpl,#0x01
      00041D 12r00r00         [24] 1564 	lcall	_SSD1306_SetPosition
                                   1565 ;	display.c:154: SSD1306_DrawString("> Go Back");
      000420 90r03r33         [24] 1566 	mov	dptr,#___str_22
      000423 75 F0 80         [24] 1567 	mov	b,#0x80
      000426 12r00r00         [24] 1568 	lcall	_SSD1306_DrawString
                                   1569 ;	display.c:155: SSD1306_SetPosition(1, 7);
      000429 90r00r00         [24] 1570 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00042C 74 07            [12] 1571 	mov	a,#0x07
      00042E F0               [24] 1572 	movx	@dptr,a
      00042F 75 82 01         [24] 1573 	mov	dpl,#0x01
      000432 12r00r00         [24] 1574 	lcall	_SSD1306_SetPosition
                                   1575 ;	display.c:156: SSD1306_DrawString("         Run         ");
      000435 90r02rF9         [24] 1576 	mov	dptr,#___str_18
      000438 75 F0 80         [24] 1577 	mov	b,#0x80
      00043B 12r00r00         [24] 1578 	lcall	_SSD1306_DrawString
                                   1579 ;	display.c:157: break;
      00043E 02r05r15         [24] 1580 	ljmp	00107$
                                   1581 ;	display.c:159: case RUN:
      000441                       1582 00105$:
                                   1583 ;	display.c:160: SSD1306_SetPosition(1, 2);
      000441 90r00r00         [24] 1584 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000444 74 02            [12] 1585 	mov	a,#0x02
      000446 F0               [24] 1586 	movx	@dptr,a
      000447 75 82 01         [24] 1587 	mov	dpl,#0x01
      00044A 12r00r00         [24] 1588 	lcall	_SSD1306_SetPosition
                                   1589 ;	display.c:161: SSD1306_DrawString("  Frequency");
      00044D 90r03r0F         [24] 1590 	mov	dptr,#___str_19
      000450 75 F0 80         [24] 1591 	mov	b,#0x80
      000453 12r00r00         [24] 1592 	lcall	_SSD1306_DrawString
                                   1593 ;	display.c:162: SSD1306_SetPosition(1, 3);
      000456 90r00r00         [24] 1594 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000459 74 03            [12] 1595 	mov	a,#0x03
      00045B F0               [24] 1596 	movx	@dptr,a
      00045C 75 82 01         [24] 1597 	mov	dpl,#0x01
      00045F 12r00r00         [24] 1598 	lcall	_SSD1306_SetPosition
                                   1599 ;	display.c:163: SSD1306_DrawString("  Microstepping");
      000462 90r02rD7         [24] 1600 	mov	dptr,#___str_15
      000465 75 F0 80         [24] 1601 	mov	b,#0x80
      000468 12r00r00         [24] 1602 	lcall	_SSD1306_DrawString
                                   1603 ;	display.c:164: SSD1306_SetPosition(1, 4);
      00046B 90r00r00         [24] 1604 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00046E 74 04            [12] 1605 	mov	a,#0x04
      000470 F0               [24] 1606 	movx	@dptr,a
      000471 75 82 01         [24] 1607 	mov	dpl,#0x01
      000474 12r00r00         [24] 1608 	lcall	_SSD1306_SetPosition
                                   1609 ;	display.c:165: SSD1306_DrawString("  Steps");
      000477 90r02rE7         [24] 1610 	mov	dptr,#___str_16
      00047A 75 F0 80         [24] 1611 	mov	b,#0x80
      00047D 12r00r00         [24] 1612 	lcall	_SSD1306_DrawString
                                   1613 ;	display.c:166: SSD1306_SetPosition(1, 5);
      000480 90r00r00         [24] 1614 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000483 74 05            [12] 1615 	mov	a,#0x05
      000485 F0               [24] 1616 	movx	@dptr,a
      000486 75 82 01         [24] 1617 	mov	dpl,#0x01
      000489 12r00r00         [24] 1618 	lcall	_SSD1306_SetPosition
                                   1619 ;	display.c:167: SSD1306_DrawString("  Go Back");
      00048C 90r02rEF         [24] 1620 	mov	dptr,#___str_17
      00048F 75 F0 80         [24] 1621 	mov	b,#0x80
      000492 12r00r00         [24] 1622 	lcall	_SSD1306_DrawString
                                   1623 ;	display.c:168: SSD1306_SetPosition(1, 7);
      000495 90r00r00         [24] 1624 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000498 74 07            [12] 1625 	mov	a,#0x07
      00049A F0               [24] 1626 	movx	@dptr,a
      00049B 75 82 01         [24] 1627 	mov	dpl,#0x01
      00049E 12r00r00         [24] 1628 	lcall	_SSD1306_SetPosition
                                   1629 ;	display.c:169: SSD1306_DrawString(">        Run         ");
      0004A1 90r03r3D         [24] 1630 	mov	dptr,#___str_23
      0004A4 75 F0 80         [24] 1631 	mov	b,#0x80
      0004A7 12r00r00         [24] 1632 	lcall	_SSD1306_DrawString
                                   1633 ;	display.c:170: break;
                                   1634 ;	display.c:172: default:
      0004AA 80 69            [24] 1635 	sjmp	00107$
      0004AC                       1636 00106$:
                                   1637 ;	display.c:173: SSD1306_SetPosition(1, 2);
      0004AC 90r00r00         [24] 1638 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0004AF 74 02            [12] 1639 	mov	a,#0x02
      0004B1 F0               [24] 1640 	movx	@dptr,a
      0004B2 75 82 01         [24] 1641 	mov	dpl,#0x01
      0004B5 12r00r00         [24] 1642 	lcall	_SSD1306_SetPosition
                                   1643 ;	display.c:174: SSD1306_DrawString("  Frequency");
      0004B8 90r03r0F         [24] 1644 	mov	dptr,#___str_19
      0004BB 75 F0 80         [24] 1645 	mov	b,#0x80
      0004BE 12r00r00         [24] 1646 	lcall	_SSD1306_DrawString
                                   1647 ;	display.c:175: SSD1306_SetPosition(1, 3);
      0004C1 90r00r00         [24] 1648 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0004C4 74 03            [12] 1649 	mov	a,#0x03
      0004C6 F0               [24] 1650 	movx	@dptr,a
      0004C7 75 82 01         [24] 1651 	mov	dpl,#0x01
      0004CA 12r00r00         [24] 1652 	lcall	_SSD1306_SetPosition
                                   1653 ;	display.c:176: SSD1306_DrawString("  Microstepping");
      0004CD 90r02rD7         [24] 1654 	mov	dptr,#___str_15
      0004D0 75 F0 80         [24] 1655 	mov	b,#0x80
      0004D3 12r00r00         [24] 1656 	lcall	_SSD1306_DrawString
                                   1657 ;	display.c:177: SSD1306_SetPosition(1, 4);
      0004D6 90r00r00         [24] 1658 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0004D9 74 04            [12] 1659 	mov	a,#0x04
      0004DB F0               [24] 1660 	movx	@dptr,a
      0004DC 75 82 01         [24] 1661 	mov	dpl,#0x01
      0004DF 12r00r00         [24] 1662 	lcall	_SSD1306_SetPosition
                                   1663 ;	display.c:178: SSD1306_DrawString("  Steps");
      0004E2 90r02rE7         [24] 1664 	mov	dptr,#___str_16
      0004E5 75 F0 80         [24] 1665 	mov	b,#0x80
      0004E8 12r00r00         [24] 1666 	lcall	_SSD1306_DrawString
                                   1667 ;	display.c:179: SSD1306_SetPosition(1, 5);
      0004EB 90r00r00         [24] 1668 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0004EE 74 05            [12] 1669 	mov	a,#0x05
      0004F0 F0               [24] 1670 	movx	@dptr,a
      0004F1 75 82 01         [24] 1671 	mov	dpl,#0x01
      0004F4 12r00r00         [24] 1672 	lcall	_SSD1306_SetPosition
                                   1673 ;	display.c:180: SSD1306_DrawString("  Go Back");
      0004F7 90r02rEF         [24] 1674 	mov	dptr,#___str_17
      0004FA 75 F0 80         [24] 1675 	mov	b,#0x80
      0004FD 12r00r00         [24] 1676 	lcall	_SSD1306_DrawString
                                   1677 ;	display.c:181: SSD1306_SetPosition(1, 7);
      000500 90r00r00         [24] 1678 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000503 74 07            [12] 1679 	mov	a,#0x07
      000505 F0               [24] 1680 	movx	@dptr,a
      000506 75 82 01         [24] 1681 	mov	dpl,#0x01
      000509 12r00r00         [24] 1682 	lcall	_SSD1306_SetPosition
                                   1683 ;	display.c:182: SSD1306_DrawString("         Run         ");
      00050C 90r02rF9         [24] 1684 	mov	dptr,#___str_18
      00050F 75 F0 80         [24] 1685 	mov	b,#0x80
      000512 12r00r00         [24] 1686 	lcall	_SSD1306_DrawString
                                   1687 ;	display.c:187: }
      000515                       1688 00107$:
                                   1689 ;	display.c:188: SSD1306_UpdateScreen();
      000515 12r00r00         [24] 1690 	lcall	_SSD1306_UpdateScreen
      000518                       1691 00109$:
                                   1692 ;	display.c:192: __bit stepper_state_now = get_stepper_state();
      000518 12r00r00         [24] 1693 	lcall	_get_stepper_state
      00051B E4               [12] 1694 	clr	a
      00051C 33               [12] 1695 	rlc	a
      00051D FF               [12] 1696 	mov	r7,a
                                   1697 ;	display.c:193: if(stepper_state_last != stepper_state_now) {
      00051E A2*00            [12] 1698 	mov	c,_stepper_state_last
      000520 E4               [12] 1699 	clr	a
      000521 33               [12] 1700 	rlc	a
      000522 B5 07 01         [24] 1701 	cjne	a,ar7,00143$
      000525 22               [24] 1702 	ret
      000526                       1703 00143$:
                                   1704 ;	display.c:194: printf("hapnd\n");
      000526 C0 07            [24] 1705 	push	ar7
      000528 74r53            [12] 1706 	mov	a,#___str_24
      00052A C0 E0            [24] 1707 	push	acc
      00052C 74s03            [12] 1708 	mov	a,#(___str_24 >> 8)
      00052E C0 E0            [24] 1709 	push	acc
      000530 74 80            [12] 1710 	mov	a,#0x80
      000532 C0 E0            [24] 1711 	push	acc
      000534 12r00r00         [24] 1712 	lcall	_printf
      000537 15 81            [12] 1713 	dec	sp
      000539 15 81            [12] 1714 	dec	sp
      00053B 15 81            [12] 1715 	dec	sp
      00053D D0 07            [24] 1716 	pop	ar7
                                   1717 ;	display.c:195: stepper_state_last = stepper_state_now;
                                   1718 ;	assignBit
      00053F EF               [12] 1719 	mov	a,r7
      000540 24 FF            [12] 1720 	add	a,#0xff
      000542 92*00            [24] 1721 	mov	_stepper_state_last,c
                                   1722 ;	display.c:196: SSD1306_SetPosition(1, 7);
      000544 90r00r00         [24] 1723 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000547 74 07            [12] 1724 	mov	a,#0x07
      000549 F0               [24] 1725 	movx	@dptr,a
      00054A 75 82 01         [24] 1726 	mov	dpl,#0x01
      00054D C0 07            [24] 1727 	push	ar7
      00054F 12r00r00         [24] 1728 	lcall	_SSD1306_SetPosition
      000552 D0 07            [24] 1729 	pop	ar7
                                   1730 ;	display.c:198: if(stepper_state_now) {
      000554 EF               [12] 1731 	mov	a,r7
      000555 60 0B            [24] 1732 	jz	00114$
                                   1733 ;	display.c:199: SSD1306_DrawString("*********Run*********");
      000557 90r03r5A         [24] 1734 	mov	dptr,#___str_25
      00055A 75 F0 80         [24] 1735 	mov	b,#0x80
      00055D 12r00r00         [24] 1736 	lcall	_SSD1306_DrawString
      000560 80 1C            [24] 1737 	sjmp	00115$
      000562                       1738 00114$:
                                   1739 ;	display.c:201: } else if (step_control_page_options == RUN){
      000562 90r00r02         [24] 1740 	mov	dptr,#_display_step_control_page_step_control_page_options_65536_156
      000565 E0               [24] 1741 	movx	a,@dptr
      000566 FF               [12] 1742 	mov	r7,a
      000567 BF 04 0B         [24] 1743 	cjne	r7,#0x04,00111$
                                   1744 ;	display.c:202: SSD1306_DrawString(">        Run         ");
      00056A 90r03r3D         [24] 1745 	mov	dptr,#___str_23
      00056D 75 F0 80         [24] 1746 	mov	b,#0x80
      000570 12r00r00         [24] 1747 	lcall	_SSD1306_DrawString
      000573 80 09            [24] 1748 	sjmp	00115$
      000575                       1749 00111$:
                                   1750 ;	display.c:205: SSD1306_DrawString("         Run         ");
      000575 90r02rF9         [24] 1751 	mov	dptr,#___str_18
      000578 75 F0 80         [24] 1752 	mov	b,#0x80
      00057B 12r00r00         [24] 1753 	lcall	_SSD1306_DrawString
      00057E                       1754 00115$:
                                   1755 ;	display.c:207: SSD1306_UpdateScreen();
                                   1756 ;	display.c:209: }
      00057E 02r00r00         [24] 1757 	ljmp	_SSD1306_UpdateScreen
                                   1758 ;------------------------------------------------------------
                                   1759 ;Allocation info for local variables in function 'display_distance_control_page_first_time'
                                   1760 ;------------------------------------------------------------
                                   1761 ;	display.c:211: void display_distance_control_page_first_time(void) {
                                   1762 ;	-----------------------------------------
                                   1763 ;	 function display_distance_control_page_first_time
                                   1764 ;	-----------------------------------------
      000581                       1765 _display_distance_control_page_first_time:
                                   1766 ;	display.c:212: SSD1306_ClearScreen();
      000581 12r00r00         [24] 1767 	lcall	_SSD1306_ClearScreen
                                   1768 ;	display.c:213: SSD1306_SetPosition(1, 3);
      000584 90r00r00         [24] 1769 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000587 74 03            [12] 1770 	mov	a,#0x03
      000589 F0               [24] 1771 	movx	@dptr,a
      00058A 75 82 01         [24] 1772 	mov	dpl,#0x01
      00058D 12r00r00         [24] 1773 	lcall	_SSD1306_SetPosition
                                   1774 ;	display.c:214: SSD1306_DrawString("   Not Implemented");
      000590 90r03r70         [24] 1775 	mov	dptr,#___str_26
      000593 75 F0 80         [24] 1776 	mov	b,#0x80
      000596 12r00r00         [24] 1777 	lcall	_SSD1306_DrawString
                                   1778 ;	display.c:216: SSD1306_UpdateScreen();
                                   1779 ;	display.c:217: }
      000599 02r00r00         [24] 1780 	ljmp	_SSD1306_UpdateScreen
                                   1781 ;------------------------------------------------------------
                                   1782 ;Allocation info for local variables in function 'display_encoder_control_page_first_time'
                                   1783 ;------------------------------------------------------------
                                   1784 ;	display.c:219: void display_encoder_control_page_first_time(void) {
                                   1785 ;	-----------------------------------------
                                   1786 ;	 function display_encoder_control_page_first_time
                                   1787 ;	-----------------------------------------
      00059C                       1788 _display_encoder_control_page_first_time:
                                   1789 ;	display.c:220: SSD1306_ClearScreen();
      00059C 12r00r00         [24] 1790 	lcall	_SSD1306_ClearScreen
                                   1791 ;	display.c:221: SSD1306_SetPosition(1, 3);
      00059F 90r00r00         [24] 1792 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0005A2 74 03            [12] 1793 	mov	a,#0x03
      0005A4 F0               [24] 1794 	movx	@dptr,a
      0005A5 75 82 01         [24] 1795 	mov	dpl,#0x01
      0005A8 12r00r00         [24] 1796 	lcall	_SSD1306_SetPosition
                                   1797 ;	display.c:222: SSD1306_DrawString("   Not Implemented");
      0005AB 90r03r70         [24] 1798 	mov	dptr,#___str_26
      0005AE 75 F0 80         [24] 1799 	mov	b,#0x80
      0005B1 12r00r00         [24] 1800 	lcall	_SSD1306_DrawString
                                   1801 ;	display.c:224: SSD1306_UpdateScreen();
                                   1802 ;	display.c:225: }
      0005B4 02r00r00         [24] 1803 	ljmp	_SSD1306_UpdateScreen
                                   1804 ;------------------------------------------------------------
                                   1805 ;Allocation info for local variables in function 'display_update_stepper_dir'
                                   1806 ;------------------------------------------------------------
                                   1807 ;stepper_direction         Allocated with name '_display_update_stepper_dir_stepper_direction_65536_169'
                                   1808 ;------------------------------------------------------------
                                   1809 ;	display.c:227: void display_update_stepper_dir(stepper_direction_t stepper_direction) {
                                   1810 ;	-----------------------------------------
                                   1811 ;	 function display_update_stepper_dir
                                   1812 ;	-----------------------------------------
      0005B7                       1813 _display_update_stepper_dir:
      0005B7 E5 82            [12] 1814 	mov	a,dpl
      0005B9 90r00r03         [24] 1815 	mov	dptr,#_display_update_stepper_dir_stepper_direction_65536_169
      0005BC F0               [24] 1816 	movx	@dptr,a
                                   1817 ;	display.c:228: SSD1306_SetPosition(31, 1);
      0005BD 90r00r00         [24] 1818 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0005C0 74 01            [12] 1819 	mov	a,#0x01
      0005C2 F0               [24] 1820 	movx	@dptr,a
      0005C3 75 82 1F         [24] 1821 	mov	dpl,#0x1f
      0005C6 12r00r00         [24] 1822 	lcall	_SSD1306_SetPosition
                                   1823 ;	display.c:229: if (stepper_direction) {
      0005C9 90r00r03         [24] 1824 	mov	dptr,#_display_update_stepper_dir_stepper_direction_65536_169
      0005CC E0               [24] 1825 	movx	a,@dptr
      0005CD 60 0B            [24] 1826 	jz	00102$
                                   1827 ;	display.c:230: SSD1306_DrawString("CW ");
      0005CF 90r03r83         [24] 1828 	mov	dptr,#___str_27
      0005D2 75 F0 80         [24] 1829 	mov	b,#0x80
      0005D5 12r00r00         [24] 1830 	lcall	_SSD1306_DrawString
      0005D8 80 09            [24] 1831 	sjmp	00103$
      0005DA                       1832 00102$:
                                   1833 ;	display.c:232: SSD1306_DrawString("CCW");
      0005DA 90r03r87         [24] 1834 	mov	dptr,#___str_28
      0005DD 75 F0 80         [24] 1835 	mov	b,#0x80
      0005E0 12r00r00         [24] 1836 	lcall	_SSD1306_DrawString
      0005E3                       1837 00103$:
                                   1838 ;	display.c:234: SSD1306_UpdateScreen();
                                   1839 ;	display.c:235: }
      0005E3 02r00r00         [24] 1840 	ljmp	_SSD1306_UpdateScreen
                                   1841 ;------------------------------------------------------------
                                   1842 ;Allocation info for local variables in function 'display_update_stepper_enable'
                                   1843 ;------------------------------------------------------------
                                   1844 ;stepper_enable_status     Allocated with name '_display_update_stepper_enable_stepper_enable_status_65536_173'
                                   1845 ;------------------------------------------------------------
                                   1846 ;	display.c:237: void display_update_stepper_enable(stepper_enable_status_t stepper_enable_status) {
                                   1847 ;	-----------------------------------------
                                   1848 ;	 function display_update_stepper_enable
                                   1849 ;	-----------------------------------------
      0005E6                       1850 _display_update_stepper_enable:
      0005E6 E5 82            [12] 1851 	mov	a,dpl
      0005E8 90r00r04         [24] 1852 	mov	dptr,#_display_update_stepper_enable_stepper_enable_status_65536_173
      0005EB F0               [24] 1853 	movx	@dptr,a
                                   1854 ;	display.c:238: SSD1306_SetPosition(103, 1);
      0005EC 90r00r00         [24] 1855 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0005EF 74 01            [12] 1856 	mov	a,#0x01
      0005F1 F0               [24] 1857 	movx	@dptr,a
      0005F2 75 82 67         [24] 1858 	mov	dpl,#0x67
      0005F5 12r00r00         [24] 1859 	lcall	_SSD1306_SetPosition
                                   1860 ;	display.c:239: if (stepper_enable_status) {
      0005F8 90r00r04         [24] 1861 	mov	dptr,#_display_update_stepper_enable_stepper_enable_status_65536_173
      0005FB E0               [24] 1862 	movx	a,@dptr
      0005FC 60 0B            [24] 1863 	jz	00102$
                                   1864 ;	display.c:240: SSD1306_DrawString("FREE");
      0005FE 90r03r8B         [24] 1865 	mov	dptr,#___str_29
      000601 75 F0 80         [24] 1866 	mov	b,#0x80
      000604 12r00r00         [24] 1867 	lcall	_SSD1306_DrawString
      000607 80 09            [24] 1868 	sjmp	00103$
      000609                       1869 00102$:
                                   1870 ;	display.c:242: SSD1306_DrawString("HOLD");
      000609 90r03r90         [24] 1871 	mov	dptr,#___str_30
      00060C 75 F0 80         [24] 1872 	mov	b,#0x80
      00060F 12r00r00         [24] 1873 	lcall	_SSD1306_DrawString
      000612                       1874 00103$:
                                   1875 ;	display.c:244: SSD1306_UpdateScreen();
                                   1876 ;	display.c:246: }
      000612 02r00r00         [24] 1877 	ljmp	_SSD1306_UpdateScreen
                                   1878 ;------------------------------------------------------------
                                   1879 ;Allocation info for local variables in function 'display_step_control_set_steps_option'
                                   1880 ;------------------------------------------------------------
                                   1881 ;sloc0                     Allocated with name '_display_step_control_set_steps_option_sloc0_1_0'
                                   1882 ;sloc1                     Allocated with name '_display_step_control_set_steps_option_sloc1_1_0'
                                   1883 ;float_digit_pointer       Allocated with name '_display_step_control_set_steps_option_PARM_2'
                                   1884 ;float_digits              Allocated with name '_display_step_control_set_steps_option_float_digits_65536_177'
                                   1885 ;buffer                    Allocated with name '_display_step_control_set_steps_option_buffer_65537_179'
                                   1886 ;------------------------------------------------------------
                                   1887 ;	display.c:248: void display_step_control_set_steps_option(uint8_t* float_digits, float_digit_pointer_t float_digit_pointer) {
                                   1888 ;	-----------------------------------------
                                   1889 ;	 function display_step_control_set_steps_option
                                   1890 ;	-----------------------------------------
      000615                       1891 _display_step_control_set_steps_option:
      000615 AF F0            [24] 1892 	mov	r7,b
      000617 AE 83            [24] 1893 	mov	r6,dph
      000619 E5 82            [12] 1894 	mov	a,dpl
      00061B 90r00r06         [24] 1895 	mov	dptr,#_display_step_control_set_steps_option_float_digits_65536_177
      00061E F0               [24] 1896 	movx	@dptr,a
      00061F EE               [12] 1897 	mov	a,r6
      000620 A3               [24] 1898 	inc	dptr
      000621 F0               [24] 1899 	movx	@dptr,a
      000622 EF               [12] 1900 	mov	a,r7
      000623 A3               [24] 1901 	inc	dptr
      000624 F0               [24] 1902 	movx	@dptr,a
                                   1903 ;	display.c:249: SSD1306_ClearScreen();
      000625 12r00r00         [24] 1904 	lcall	_SSD1306_ClearScreen
                                   1905 ;	display.c:250: SSD1306_SetPosition(1, 2);
      000628 90r00r00         [24] 1906 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00062B 74 02            [12] 1907 	mov	a,#0x02
      00062D F0               [24] 1908 	movx	@dptr,a
      00062E 75 82 01         [24] 1909 	mov	dpl,#0x01
      000631 12r00r00         [24] 1910 	lcall	_SSD1306_SetPosition
                                   1911 ;	display.c:251: SSD1306_DrawString("Setting Steps:");
      000634 90r03r95         [24] 1912 	mov	dptr,#___str_31
      000637 75 F0 80         [24] 1913 	mov	b,#0x80
      00063A 12r00r00         [24] 1914 	lcall	_SSD1306_DrawString
                                   1915 ;	display.c:255: sprintf(buffer, "      %d%d%d.%d%d", float_digits[0], float_digits[1], float_digits[2], float_digits[3], float_digits[4]);
      00063D 90r00r06         [24] 1916 	mov	dptr,#_display_step_control_set_steps_option_float_digits_65536_177
      000640 E0               [24] 1917 	movx	a,@dptr
      000641 FD               [12] 1918 	mov	r5,a
      000642 A3               [24] 1919 	inc	dptr
      000643 E0               [24] 1920 	movx	a,@dptr
      000644 FE               [12] 1921 	mov	r6,a
      000645 A3               [24] 1922 	inc	dptr
      000646 E0               [24] 1923 	movx	a,@dptr
      000647 FF               [12] 1924 	mov	r7,a
      000648 74 04            [12] 1925 	mov	a,#0x04
      00064A 2D               [12] 1926 	add	a,r5
      00064B FA               [12] 1927 	mov	r2,a
      00064C E4               [12] 1928 	clr	a
      00064D 3E               [12] 1929 	addc	a,r6
      00064E FB               [12] 1930 	mov	r3,a
      00064F 8F 04            [24] 1931 	mov	ar4,r7
      000651 8A 82            [24] 1932 	mov	dpl,r2
      000653 8B 83            [24] 1933 	mov	dph,r3
      000655 8C F0            [24] 1934 	mov	b,r4
      000657 12r00r00         [24] 1935 	lcall	__gptrget
      00065A FA               [12] 1936 	mov	r2,a
      00065B 7C 00            [12] 1937 	mov	r4,#0x00
      00065D 74 03            [12] 1938 	mov	a,#0x03
      00065F 2D               [12] 1939 	add	a,r5
      000660 F8               [12] 1940 	mov	r0,a
      000661 E4               [12] 1941 	clr	a
      000662 3E               [12] 1942 	addc	a,r6
      000663 F9               [12] 1943 	mov	r1,a
      000664 8F 03            [24] 1944 	mov	ar3,r7
      000666 88 82            [24] 1945 	mov	dpl,r0
      000668 89 83            [24] 1946 	mov	dph,r1
      00066A 8B F0            [24] 1947 	mov	b,r3
      00066C 12r00r00         [24] 1948 	lcall	__gptrget
      00066F F8               [12] 1949 	mov	r0,a
      000670 88*00            [24] 1950 	mov	_display_step_control_set_steps_option_sloc0_1_0,r0
                                   1951 ;	1-genFromRTrack replaced	mov	(_display_step_control_set_steps_option_sloc0_1_0 + 1),#0x00
      000672 8C*01            [24] 1952 	mov	(_display_step_control_set_steps_option_sloc0_1_0 + 1),r4
      000674 74 02            [12] 1953 	mov	a,#0x02
      000676 2D               [12] 1954 	add	a,r5
      000677 F8               [12] 1955 	mov	r0,a
      000678 E4               [12] 1956 	clr	a
      000679 3E               [12] 1957 	addc	a,r6
      00067A F9               [12] 1958 	mov	r1,a
      00067B 8F 03            [24] 1959 	mov	ar3,r7
      00067D 88 82            [24] 1960 	mov	dpl,r0
      00067F 89 83            [24] 1961 	mov	dph,r1
      000681 8B F0            [24] 1962 	mov	b,r3
      000683 12r00r00         [24] 1963 	lcall	__gptrget
      000686 F8               [12] 1964 	mov	r0,a
      000687 88*02            [24] 1965 	mov	_display_step_control_set_steps_option_sloc1_1_0,r0
                                   1966 ;	1-genFromRTrack replaced	mov	(_display_step_control_set_steps_option_sloc1_1_0 + 1),#0x00
      000689 8C*03            [24] 1967 	mov	(_display_step_control_set_steps_option_sloc1_1_0 + 1),r4
      00068B 74 01            [12] 1968 	mov	a,#0x01
      00068D 2D               [12] 1969 	add	a,r5
      00068E F8               [12] 1970 	mov	r0,a
      00068F E4               [12] 1971 	clr	a
      000690 3E               [12] 1972 	addc	a,r6
      000691 F9               [12] 1973 	mov	r1,a
      000692 8F 03            [24] 1974 	mov	ar3,r7
      000694 88 82            [24] 1975 	mov	dpl,r0
      000696 89 83            [24] 1976 	mov	dph,r1
      000698 8B F0            [24] 1977 	mov	b,r3
      00069A 12r00r00         [24] 1978 	lcall	__gptrget
      00069D F8               [12] 1979 	mov	r0,a
      00069E 7B 00            [12] 1980 	mov	r3,#0x00
      0006A0 8D 82            [24] 1981 	mov	dpl,r5
      0006A2 8E 83            [24] 1982 	mov	dph,r6
      0006A4 8F F0            [24] 1983 	mov	b,r7
      0006A6 12r00r00         [24] 1984 	lcall	__gptrget
      0006A9 FD               [12] 1985 	mov	r5,a
      0006AA 7F 00            [12] 1986 	mov	r7,#0x00
      0006AC C0 02            [24] 1987 	push	ar2
      0006AE C0 04            [24] 1988 	push	ar4
      0006B0 C0*00            [24] 1989 	push	_display_step_control_set_steps_option_sloc0_1_0
      0006B2 C0*01            [24] 1990 	push	(_display_step_control_set_steps_option_sloc0_1_0 + 1)
      0006B4 C0*02            [24] 1991 	push	_display_step_control_set_steps_option_sloc1_1_0
      0006B6 C0*03            [24] 1992 	push	(_display_step_control_set_steps_option_sloc1_1_0 + 1)
      0006B8 C0 00            [24] 1993 	push	ar0
      0006BA C0 03            [24] 1994 	push	ar3
      0006BC C0 05            [24] 1995 	push	ar5
      0006BE C0 07            [24] 1996 	push	ar7
      0006C0 74rA4            [12] 1997 	mov	a,#___str_32
      0006C2 C0 E0            [24] 1998 	push	acc
      0006C4 74s03            [12] 1999 	mov	a,#(___str_32 >> 8)
      0006C6 C0 E0            [24] 2000 	push	acc
      0006C8 74 80            [12] 2001 	mov	a,#0x80
      0006CA C0 E0            [24] 2002 	push	acc
      0006CC 74r09            [12] 2003 	mov	a,#_display_step_control_set_steps_option_buffer_65537_179
      0006CE C0 E0            [24] 2004 	push	acc
      0006D0 74s00            [12] 2005 	mov	a,#(_display_step_control_set_steps_option_buffer_65537_179 >> 8)
      0006D2 C0 E0            [24] 2006 	push	acc
      0006D4 E4               [12] 2007 	clr	a
      0006D5 C0 E0            [24] 2008 	push	acc
      0006D7 12r00r00         [24] 2009 	lcall	_sprintf
      0006DA E5 81            [12] 2010 	mov	a,sp
      0006DC 24 F0            [12] 2011 	add	a,#0xf0
      0006DE F5 81            [12] 2012 	mov	sp,a
                                   2013 ;	display.c:256: SSD1306_SetPosition(1, 5);
      0006E0 90r00r00         [24] 2014 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0006E3 74 05            [12] 2015 	mov	a,#0x05
      0006E5 F0               [24] 2016 	movx	@dptr,a
      0006E6 75 82 01         [24] 2017 	mov	dpl,#0x01
      0006E9 12r00r00         [24] 2018 	lcall	_SSD1306_SetPosition
                                   2019 ;	display.c:257: SSD1306_DrawString(buffer);
      0006EC 90r00r09         [24] 2020 	mov	dptr,#_display_step_control_set_steps_option_buffer_65537_179
      0006EF 75 F0 00         [24] 2021 	mov	b,#0x00
      0006F2 12r00r00         [24] 2022 	lcall	_SSD1306_DrawString
                                   2023 ;	display.c:260: switch (float_digit_pointer) {
      0006F5 90r00r05         [24] 2024 	mov	dptr,#_display_step_control_set_steps_option_PARM_2
      0006F8 E0               [24] 2025 	movx	a,@dptr
      0006F9 FF               [12] 2026 	mov  r7,a
      0006FA 24 FB            [12] 2027 	add	a,#0xff - 0x04
      0006FC 50 03            [24] 2028 	jnc	00113$
      0006FE 02r07rC0         [24] 2029 	ljmp	00106$
      000701                       2030 00113$:
      000701 EF               [12] 2031 	mov	a,r7
      000702 2F               [12] 2032 	add	a,r7
      000703 2F               [12] 2033 	add	a,r7
      000704 90r07r08         [24] 2034 	mov	dptr,#00114$
      000707 73               [24] 2035 	jmp	@a+dptr
      000708                       2036 00114$:
      000708 02r07r17         [24] 2037 	ljmp	00101$
      00070B 02r07r3A         [24] 2038 	ljmp	00102$
      00070E 02r07r5C         [24] 2039 	ljmp	00103$
      000711 02r07r7E         [24] 2040 	ljmp	00104$
      000714 02r07rA0         [24] 2041 	ljmp	00105$
                                   2042 ;	display.c:261: case HUNDREDS:
      000717                       2043 00101$:
                                   2044 ;	display.c:262: sprintf(buffer, "      ^");
      000717 74rB6            [12] 2045 	mov	a,#___str_33
      000719 C0 E0            [24] 2046 	push	acc
      00071B 74s03            [12] 2047 	mov	a,#(___str_33 >> 8)
      00071D C0 E0            [24] 2048 	push	acc
      00071F 74 80            [12] 2049 	mov	a,#0x80
      000721 C0 E0            [24] 2050 	push	acc
      000723 74r09            [12] 2051 	mov	a,#_display_step_control_set_steps_option_buffer_65537_179
      000725 C0 E0            [24] 2052 	push	acc
      000727 74s00            [12] 2053 	mov	a,#(_display_step_control_set_steps_option_buffer_65537_179 >> 8)
      000729 C0 E0            [24] 2054 	push	acc
      00072B E4               [12] 2055 	clr	a
      00072C C0 E0            [24] 2056 	push	acc
      00072E 12r00r00         [24] 2057 	lcall	_sprintf
      000731 E5 81            [12] 2058 	mov	a,sp
      000733 24 FA            [12] 2059 	add	a,#0xfa
      000735 F5 81            [12] 2060 	mov	sp,a
                                   2061 ;	display.c:263: break;
      000737 02r07rC0         [24] 2062 	ljmp	00106$
                                   2063 ;	display.c:265: case TENS:
      00073A                       2064 00102$:
                                   2065 ;	display.c:266: sprintf(buffer, "       ^");
      00073A 74rBE            [12] 2066 	mov	a,#___str_34
      00073C C0 E0            [24] 2067 	push	acc
      00073E 74s03            [12] 2068 	mov	a,#(___str_34 >> 8)
      000740 C0 E0            [24] 2069 	push	acc
      000742 74 80            [12] 2070 	mov	a,#0x80
      000744 C0 E0            [24] 2071 	push	acc
      000746 74r09            [12] 2072 	mov	a,#_display_step_control_set_steps_option_buffer_65537_179
      000748 C0 E0            [24] 2073 	push	acc
      00074A 74s00            [12] 2074 	mov	a,#(_display_step_control_set_steps_option_buffer_65537_179 >> 8)
      00074C C0 E0            [24] 2075 	push	acc
      00074E E4               [12] 2076 	clr	a
      00074F C0 E0            [24] 2077 	push	acc
      000751 12r00r00         [24] 2078 	lcall	_sprintf
      000754 E5 81            [12] 2079 	mov	a,sp
      000756 24 FA            [12] 2080 	add	a,#0xfa
      000758 F5 81            [12] 2081 	mov	sp,a
                                   2082 ;	display.c:267: break;
                                   2083 ;	display.c:269: case ONES:
      00075A 80 64            [24] 2084 	sjmp	00106$
      00075C                       2085 00103$:
                                   2086 ;	display.c:270: sprintf(buffer, "        ^");
      00075C 74rC7            [12] 2087 	mov	a,#___str_35
      00075E C0 E0            [24] 2088 	push	acc
      000760 74s03            [12] 2089 	mov	a,#(___str_35 >> 8)
      000762 C0 E0            [24] 2090 	push	acc
      000764 74 80            [12] 2091 	mov	a,#0x80
      000766 C0 E0            [24] 2092 	push	acc
      000768 74r09            [12] 2093 	mov	a,#_display_step_control_set_steps_option_buffer_65537_179
      00076A C0 E0            [24] 2094 	push	acc
      00076C 74s00            [12] 2095 	mov	a,#(_display_step_control_set_steps_option_buffer_65537_179 >> 8)
      00076E C0 E0            [24] 2096 	push	acc
      000770 E4               [12] 2097 	clr	a
      000771 C0 E0            [24] 2098 	push	acc
      000773 12r00r00         [24] 2099 	lcall	_sprintf
      000776 E5 81            [12] 2100 	mov	a,sp
      000778 24 FA            [12] 2101 	add	a,#0xfa
      00077A F5 81            [12] 2102 	mov	sp,a
                                   2103 ;	display.c:271: break;
                                   2104 ;	display.c:273: case TENTH:
      00077C 80 42            [24] 2105 	sjmp	00106$
      00077E                       2106 00104$:
                                   2107 ;	display.c:274: sprintf(buffer, "          ^");
      00077E 74rD1            [12] 2108 	mov	a,#___str_36
      000780 C0 E0            [24] 2109 	push	acc
      000782 74s03            [12] 2110 	mov	a,#(___str_36 >> 8)
      000784 C0 E0            [24] 2111 	push	acc
      000786 74 80            [12] 2112 	mov	a,#0x80
      000788 C0 E0            [24] 2113 	push	acc
      00078A 74r09            [12] 2114 	mov	a,#_display_step_control_set_steps_option_buffer_65537_179
      00078C C0 E0            [24] 2115 	push	acc
      00078E 74s00            [12] 2116 	mov	a,#(_display_step_control_set_steps_option_buffer_65537_179 >> 8)
      000790 C0 E0            [24] 2117 	push	acc
      000792 E4               [12] 2118 	clr	a
      000793 C0 E0            [24] 2119 	push	acc
      000795 12r00r00         [24] 2120 	lcall	_sprintf
      000798 E5 81            [12] 2121 	mov	a,sp
      00079A 24 FA            [12] 2122 	add	a,#0xfa
      00079C F5 81            [12] 2123 	mov	sp,a
                                   2124 ;	display.c:275: break;
                                   2125 ;	display.c:277: case HUNDREDTH:
      00079E 80 20            [24] 2126 	sjmp	00106$
      0007A0                       2127 00105$:
                                   2128 ;	display.c:278: sprintf(buffer, "           ^");
      0007A0 74rDD            [12] 2129 	mov	a,#___str_37
      0007A2 C0 E0            [24] 2130 	push	acc
      0007A4 74s03            [12] 2131 	mov	a,#(___str_37 >> 8)
      0007A6 C0 E0            [24] 2132 	push	acc
      0007A8 74 80            [12] 2133 	mov	a,#0x80
      0007AA C0 E0            [24] 2134 	push	acc
      0007AC 74r09            [12] 2135 	mov	a,#_display_step_control_set_steps_option_buffer_65537_179
      0007AE C0 E0            [24] 2136 	push	acc
      0007B0 74s00            [12] 2137 	mov	a,#(_display_step_control_set_steps_option_buffer_65537_179 >> 8)
      0007B2 C0 E0            [24] 2138 	push	acc
      0007B4 E4               [12] 2139 	clr	a
      0007B5 C0 E0            [24] 2140 	push	acc
      0007B7 12r00r00         [24] 2141 	lcall	_sprintf
      0007BA E5 81            [12] 2142 	mov	a,sp
      0007BC 24 FA            [12] 2143 	add	a,#0xfa
      0007BE F5 81            [12] 2144 	mov	sp,a
                                   2145 ;	display.c:281: }
      0007C0                       2146 00106$:
                                   2147 ;	display.c:282: SSD1306_SetPosition(1, 6);
      0007C0 90r00r00         [24] 2148 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0007C3 74 06            [12] 2149 	mov	a,#0x06
      0007C5 F0               [24] 2150 	movx	@dptr,a
      0007C6 75 82 01         [24] 2151 	mov	dpl,#0x01
      0007C9 12r00r00         [24] 2152 	lcall	_SSD1306_SetPosition
                                   2153 ;	display.c:283: SSD1306_DrawString(buffer);
      0007CC 90r00r09         [24] 2154 	mov	dptr,#_display_step_control_set_steps_option_buffer_65537_179
      0007CF 75 F0 00         [24] 2155 	mov	b,#0x00
      0007D2 12r00r00         [24] 2156 	lcall	_SSD1306_DrawString
                                   2157 ;	display.c:285: SSD1306_UpdateScreen();
                                   2158 ;	display.c:286: }
      0007D5 02r00r00         [24] 2159 	ljmp	_SSD1306_UpdateScreen
                                   2160 ;------------------------------------------------------------
                                   2161 ;Allocation info for local variables in function 'display_step_control_set_microstepping_option'
                                   2162 ;------------------------------------------------------------
                                   2163 ;encoder_value             Allocated with name '_display_step_control_set_microstepping_option_encoder_value_65536_181'
                                   2164 ;buffer                    Allocated with name '_display_step_control_set_microstepping_option_buffer_65537_183'
                                   2165 ;------------------------------------------------------------
                                   2166 ;	display.c:288: void display_step_control_set_microstepping_option(int16_t encoder_value) {
                                   2167 ;	-----------------------------------------
                                   2168 ;	 function display_step_control_set_microstepping_option
                                   2169 ;	-----------------------------------------
      0007D8                       2170 _display_step_control_set_microstepping_option:
      0007D8 AF 83            [24] 2171 	mov	r7,dph
      0007DA E5 82            [12] 2172 	mov	a,dpl
      0007DC 90r00r1D         [24] 2173 	mov	dptr,#_display_step_control_set_microstepping_option_encoder_value_65536_181
      0007DF F0               [24] 2174 	movx	@dptr,a
      0007E0 EF               [12] 2175 	mov	a,r7
      0007E1 A3               [24] 2176 	inc	dptr
      0007E2 F0               [24] 2177 	movx	@dptr,a
                                   2178 ;	display.c:289: SSD1306_ClearScreen();
      0007E3 12r00r00         [24] 2179 	lcall	_SSD1306_ClearScreen
                                   2180 ;	display.c:290: SSD1306_SetPosition(1, 2);
      0007E6 90r00r00         [24] 2181 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      0007E9 74 02            [12] 2182 	mov	a,#0x02
      0007EB F0               [24] 2183 	movx	@dptr,a
      0007EC 75 82 01         [24] 2184 	mov	dpl,#0x01
      0007EF 12r00r00         [24] 2185 	lcall	_SSD1306_SetPosition
                                   2186 ;	display.c:291: SSD1306_DrawString("Setting Microstepping:");
      0007F2 90r03rEA         [24] 2187 	mov	dptr,#___str_38
      0007F5 75 F0 80         [24] 2188 	mov	b,#0x80
      0007F8 12r00r00         [24] 2189 	lcall	_SSD1306_DrawString
                                   2190 ;	display.c:294: sprintf(buffer,    "      %d", encoder_value);
      0007FB 90r00r1D         [24] 2191 	mov	dptr,#_display_step_control_set_microstepping_option_encoder_value_65536_181
      0007FE E0               [24] 2192 	movx	a,@dptr
      0007FF C0 E0            [24] 2193 	push	acc
      000801 A3               [24] 2194 	inc	dptr
      000802 E0               [24] 2195 	movx	a,@dptr
      000803 C0 E0            [24] 2196 	push	acc
      000805 74r01            [12] 2197 	mov	a,#___str_39
      000807 C0 E0            [24] 2198 	push	acc
      000809 74s04            [12] 2199 	mov	a,#(___str_39 >> 8)
      00080B C0 E0            [24] 2200 	push	acc
      00080D 74 80            [12] 2201 	mov	a,#0x80
      00080F C0 E0            [24] 2202 	push	acc
      000811 74r1F            [12] 2203 	mov	a,#_display_step_control_set_microstepping_option_buffer_65537_183
      000813 C0 E0            [24] 2204 	push	acc
      000815 74s00            [12] 2205 	mov	a,#(_display_step_control_set_microstepping_option_buffer_65537_183 >> 8)
      000817 C0 E0            [24] 2206 	push	acc
      000819 E4               [12] 2207 	clr	a
      00081A C0 E0            [24] 2208 	push	acc
      00081C 12r00r00         [24] 2209 	lcall	_sprintf
      00081F E5 81            [12] 2210 	mov	a,sp
      000821 24 F8            [12] 2211 	add	a,#0xf8
      000823 F5 81            [12] 2212 	mov	sp,a
                                   2213 ;	display.c:296: SSD1306_SetPosition(1, 5);
      000825 90r00r00         [24] 2214 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000828 74 05            [12] 2215 	mov	a,#0x05
      00082A F0               [24] 2216 	movx	@dptr,a
      00082B 75 82 01         [24] 2217 	mov	dpl,#0x01
      00082E 12r00r00         [24] 2218 	lcall	_SSD1306_SetPosition
                                   2219 ;	display.c:297: SSD1306_DrawString(buffer);
      000831 90r00r1F         [24] 2220 	mov	dptr,#_display_step_control_set_microstepping_option_buffer_65537_183
      000834 75 F0 00         [24] 2221 	mov	b,#0x00
      000837 12r00r00         [24] 2222 	lcall	_SSD1306_DrawString
                                   2223 ;	display.c:299: SSD1306_UpdateScreen();
                                   2224 ;	display.c:300: }
      00083A 02r00r00         [24] 2225 	ljmp	_SSD1306_UpdateScreen
                                   2226 ;------------------------------------------------------------
                                   2227 ;Allocation info for local variables in function 'display_step_control_set_frequency_option'
                                   2228 ;------------------------------------------------------------
                                   2229 ;encoder_value             Allocated with name '_display_step_control_set_frequency_option_encoder_value_65536_184'
                                   2230 ;buffer                    Allocated with name '_display_step_control_set_frequency_option_buffer_65537_186'
                                   2231 ;------------------------------------------------------------
                                   2232 ;	display.c:302: void display_step_control_set_frequency_option(int16_t encoder_value) {
                                   2233 ;	-----------------------------------------
                                   2234 ;	 function display_step_control_set_frequency_option
                                   2235 ;	-----------------------------------------
      00083D                       2236 _display_step_control_set_frequency_option:
      00083D AF 83            [24] 2237 	mov	r7,dph
      00083F E5 82            [12] 2238 	mov	a,dpl
      000841 90r00r24         [24] 2239 	mov	dptr,#_display_step_control_set_frequency_option_encoder_value_65536_184
      000844 F0               [24] 2240 	movx	@dptr,a
      000845 EF               [12] 2241 	mov	a,r7
      000846 A3               [24] 2242 	inc	dptr
      000847 F0               [24] 2243 	movx	@dptr,a
                                   2244 ;	display.c:303: SSD1306_ClearScreen();
      000848 12r00r00         [24] 2245 	lcall	_SSD1306_ClearScreen
                                   2246 ;	display.c:304: SSD1306_SetPosition(1, 2);
      00084B 90r00r00         [24] 2247 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00084E 74 02            [12] 2248 	mov	a,#0x02
      000850 F0               [24] 2249 	movx	@dptr,a
      000851 75 82 01         [24] 2250 	mov	dpl,#0x01
      000854 12r00r00         [24] 2251 	lcall	_SSD1306_SetPosition
                                   2252 ;	display.c:305: SSD1306_DrawString("Setting frequency:");
      000857 90r04r0A         [24] 2253 	mov	dptr,#___str_40
      00085A 75 F0 80         [24] 2254 	mov	b,#0x80
      00085D 12r00r00         [24] 2255 	lcall	_SSD1306_DrawString
                                   2256 ;	display.c:308: sprintf(buffer,    "      %d", encoder_value);
      000860 90r00r24         [24] 2257 	mov	dptr,#_display_step_control_set_frequency_option_encoder_value_65536_184
      000863 E0               [24] 2258 	movx	a,@dptr
      000864 C0 E0            [24] 2259 	push	acc
      000866 A3               [24] 2260 	inc	dptr
      000867 E0               [24] 2261 	movx	a,@dptr
      000868 C0 E0            [24] 2262 	push	acc
      00086A 74r01            [12] 2263 	mov	a,#___str_39
      00086C C0 E0            [24] 2264 	push	acc
      00086E 74s04            [12] 2265 	mov	a,#(___str_39 >> 8)
      000870 C0 E0            [24] 2266 	push	acc
      000872 74 80            [12] 2267 	mov	a,#0x80
      000874 C0 E0            [24] 2268 	push	acc
      000876 74r26            [12] 2269 	mov	a,#_display_step_control_set_frequency_option_buffer_65537_186
      000878 C0 E0            [24] 2270 	push	acc
      00087A 74s00            [12] 2271 	mov	a,#(_display_step_control_set_frequency_option_buffer_65537_186 >> 8)
      00087C C0 E0            [24] 2272 	push	acc
      00087E E4               [12] 2273 	clr	a
      00087F C0 E0            [24] 2274 	push	acc
      000881 12r00r00         [24] 2275 	lcall	_sprintf
      000884 E5 81            [12] 2276 	mov	a,sp
      000886 24 F8            [12] 2277 	add	a,#0xf8
      000888 F5 81            [12] 2278 	mov	sp,a
                                   2279 ;	display.c:310: SSD1306_SetPosition(1, 5);
      00088A 90r00r00         [24] 2280 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      00088D 74 05            [12] 2281 	mov	a,#0x05
      00088F F0               [24] 2282 	movx	@dptr,a
      000890 75 82 01         [24] 2283 	mov	dpl,#0x01
      000893 12r00r00         [24] 2284 	lcall	_SSD1306_SetPosition
                                   2285 ;	display.c:311: SSD1306_DrawString(buffer);
      000896 90r00r26         [24] 2286 	mov	dptr,#_display_step_control_set_frequency_option_buffer_65537_186
      000899 75 F0 00         [24] 2287 	mov	b,#0x00
      00089C 12r00r00         [24] 2288 	lcall	_SSD1306_DrawString
                                   2289 ;	display.c:313: SSD1306_UpdateScreen();
                                   2290 ;	display.c:314: }
      00089F 02r00r00         [24] 2291 	ljmp	_SSD1306_UpdateScreen
                                   2292 	.area CSEG    (CODE)
                                   2293 	.area CONST   (CODE)
      000000                       2294 _FONTS:
      000000 00                    2295 	.db #0x00	; 0
      000001 00                    2296 	.db #0x00	; 0
      000002 00                    2297 	.db #0x00	; 0
      000003 00                    2298 	.db #0x00	; 0
      000004 00                    2299 	.db #0x00	; 0
      000005 81                    2300 	.db #0x81	; 129
      000006 81                    2301 	.db #0x81	; 129
      000007 18                    2302 	.db #0x18	; 24
      000008 81                    2303 	.db #0x81	; 129
      000009 81                    2304 	.db #0x81	; 129
      00000A 00                    2305 	.db #0x00	; 0
      00000B 07                    2306 	.db #0x07	; 7
      00000C 00                    2307 	.db #0x00	; 0
      00000D 07                    2308 	.db #0x07	; 7
      00000E 00                    2309 	.db #0x00	; 0
      00000F 14                    2310 	.db #0x14	; 20
      000010 7F                    2311 	.db #0x7f	; 127
      000011 14                    2312 	.db #0x14	; 20
      000012 7F                    2313 	.db #0x7f	; 127
      000013 14                    2314 	.db #0x14	; 20
      000014 24                    2315 	.db #0x24	; 36
      000015 2A                    2316 	.db #0x2a	; 42
      000016 7F                    2317 	.db #0x7f	; 127
      000017 2A                    2318 	.db #0x2a	; 42
      000018 12                    2319 	.db #0x12	; 18
      000019 23                    2320 	.db #0x23	; 35
      00001A 13                    2321 	.db #0x13	; 19
      00001B 08                    2322 	.db #0x08	; 8
      00001C 64                    2323 	.db #0x64	; 100	'd'
      00001D 62                    2324 	.db #0x62	; 98	'b'
      00001E 36                    2325 	.db #0x36	; 54	'6'
      00001F 49                    2326 	.db #0x49	; 73	'I'
      000020 55                    2327 	.db #0x55	; 85	'U'
      000021 22                    2328 	.db #0x22	; 34
      000022 50                    2329 	.db #0x50	; 80	'P'
      000023 00                    2330 	.db #0x00	; 0
      000024 05                    2331 	.db #0x05	; 5
      000025 03                    2332 	.db #0x03	; 3
      000026 00                    2333 	.db #0x00	; 0
      000027 00                    2334 	.db #0x00	; 0
      000028 00                    2335 	.db #0x00	; 0
      000029 1C                    2336 	.db #0x1c	; 28
      00002A 22                    2337 	.db #0x22	; 34
      00002B 41                    2338 	.db #0x41	; 65	'A'
      00002C 00                    2339 	.db #0x00	; 0
      00002D 00                    2340 	.db #0x00	; 0
      00002E 41                    2341 	.db #0x41	; 65	'A'
      00002F 22                    2342 	.db #0x22	; 34
      000030 1C                    2343 	.db #0x1c	; 28
      000031 00                    2344 	.db #0x00	; 0
      000032 14                    2345 	.db #0x14	; 20
      000033 08                    2346 	.db #0x08	; 8
      000034 3E                    2347 	.db #0x3e	; 62
      000035 08                    2348 	.db #0x08	; 8
      000036 14                    2349 	.db #0x14	; 20
      000037 08                    2350 	.db #0x08	; 8
      000038 08                    2351 	.db #0x08	; 8
      000039 3E                    2352 	.db #0x3e	; 62
      00003A 08                    2353 	.db #0x08	; 8
      00003B 08                    2354 	.db #0x08	; 8
      00003C 00                    2355 	.db #0x00	; 0
      00003D 50                    2356 	.db #0x50	; 80	'P'
      00003E 30                    2357 	.db #0x30	; 48	'0'
      00003F 00                    2358 	.db #0x00	; 0
      000040 00                    2359 	.db #0x00	; 0
      000041 08                    2360 	.db #0x08	; 8
      000042 08                    2361 	.db #0x08	; 8
      000043 08                    2362 	.db #0x08	; 8
      000044 08                    2363 	.db #0x08	; 8
      000045 08                    2364 	.db #0x08	; 8
      000046 00                    2365 	.db #0x00	; 0
      000047 60                    2366 	.db #0x60	; 96
      000048 60                    2367 	.db #0x60	; 96
      000049 00                    2368 	.db #0x00	; 0
      00004A 00                    2369 	.db #0x00	; 0
      00004B 20                    2370 	.db #0x20	; 32
      00004C 10                    2371 	.db #0x10	; 16
      00004D 08                    2372 	.db #0x08	; 8
      00004E 04                    2373 	.db #0x04	; 4
      00004F 02                    2374 	.db #0x02	; 2
      000050 3E                    2375 	.db #0x3e	; 62
      000051 51                    2376 	.db #0x51	; 81	'Q'
      000052 49                    2377 	.db #0x49	; 73	'I'
      000053 45                    2378 	.db #0x45	; 69	'E'
      000054 3E                    2379 	.db #0x3e	; 62
      000055 00                    2380 	.db #0x00	; 0
      000056 42                    2381 	.db #0x42	; 66	'B'
      000057 7F                    2382 	.db #0x7f	; 127
      000058 40                    2383 	.db #0x40	; 64
      000059 00                    2384 	.db #0x00	; 0
      00005A 42                    2385 	.db #0x42	; 66	'B'
      00005B 61                    2386 	.db #0x61	; 97	'a'
      00005C 51                    2387 	.db #0x51	; 81	'Q'
      00005D 49                    2388 	.db #0x49	; 73	'I'
      00005E 46                    2389 	.db #0x46	; 70	'F'
      00005F 21                    2390 	.db #0x21	; 33
      000060 41                    2391 	.db #0x41	; 65	'A'
      000061 45                    2392 	.db #0x45	; 69	'E'
      000062 4B                    2393 	.db #0x4b	; 75	'K'
      000063 31                    2394 	.db #0x31	; 49	'1'
      000064 18                    2395 	.db #0x18	; 24
      000065 14                    2396 	.db #0x14	; 20
      000066 12                    2397 	.db #0x12	; 18
      000067 7F                    2398 	.db #0x7f	; 127
      000068 10                    2399 	.db #0x10	; 16
      000069 27                    2400 	.db #0x27	; 39
      00006A 45                    2401 	.db #0x45	; 69	'E'
      00006B 45                    2402 	.db #0x45	; 69	'E'
      00006C 45                    2403 	.db #0x45	; 69	'E'
      00006D 39                    2404 	.db #0x39	; 57	'9'
      00006E 3C                    2405 	.db #0x3c	; 60
      00006F 4A                    2406 	.db #0x4a	; 74	'J'
      000070 49                    2407 	.db #0x49	; 73	'I'
      000071 49                    2408 	.db #0x49	; 73	'I'
      000072 30                    2409 	.db #0x30	; 48	'0'
      000073 01                    2410 	.db #0x01	; 1
      000074 71                    2411 	.db #0x71	; 113	'q'
      000075 09                    2412 	.db #0x09	; 9
      000076 05                    2413 	.db #0x05	; 5
      000077 03                    2414 	.db #0x03	; 3
      000078 36                    2415 	.db #0x36	; 54	'6'
      000079 49                    2416 	.db #0x49	; 73	'I'
      00007A 49                    2417 	.db #0x49	; 73	'I'
      00007B 49                    2418 	.db #0x49	; 73	'I'
      00007C 36                    2419 	.db #0x36	; 54	'6'
      00007D 06                    2420 	.db #0x06	; 6
      00007E 49                    2421 	.db #0x49	; 73	'I'
      00007F 49                    2422 	.db #0x49	; 73	'I'
      000080 29                    2423 	.db #0x29	; 41
      000081 1E                    2424 	.db #0x1e	; 30
      000082 00                    2425 	.db #0x00	; 0
      000083 36                    2426 	.db #0x36	; 54	'6'
      000084 36                    2427 	.db #0x36	; 54	'6'
      000085 00                    2428 	.db #0x00	; 0
      000086 00                    2429 	.db #0x00	; 0
      000087 00                    2430 	.db #0x00	; 0
      000088 56                    2431 	.db #0x56	; 86	'V'
      000089 36                    2432 	.db #0x36	; 54	'6'
      00008A 00                    2433 	.db #0x00	; 0
      00008B 00                    2434 	.db #0x00	; 0
      00008C 08                    2435 	.db #0x08	; 8
      00008D 14                    2436 	.db #0x14	; 20
      00008E 22                    2437 	.db #0x22	; 34
      00008F 41                    2438 	.db #0x41	; 65	'A'
      000090 00                    2439 	.db #0x00	; 0
      000091 14                    2440 	.db #0x14	; 20
      000092 14                    2441 	.db #0x14	; 20
      000093 14                    2442 	.db #0x14	; 20
      000094 14                    2443 	.db #0x14	; 20
      000095 14                    2444 	.db #0x14	; 20
      000096 00                    2445 	.db #0x00	; 0
      000097 41                    2446 	.db #0x41	; 65	'A'
      000098 22                    2447 	.db #0x22	; 34
      000099 14                    2448 	.db #0x14	; 20
      00009A 08                    2449 	.db #0x08	; 8
      00009B 02                    2450 	.db #0x02	; 2
      00009C 01                    2451 	.db #0x01	; 1
      00009D 51                    2452 	.db #0x51	; 81	'Q'
      00009E 09                    2453 	.db #0x09	; 9
      00009F 06                    2454 	.db #0x06	; 6
      0000A0 32                    2455 	.db #0x32	; 50	'2'
      0000A1 49                    2456 	.db #0x49	; 73	'I'
      0000A2 79                    2457 	.db #0x79	; 121	'y'
      0000A3 41                    2458 	.db #0x41	; 65	'A'
      0000A4 3E                    2459 	.db #0x3e	; 62
      0000A5 7E                    2460 	.db #0x7e	; 126
      0000A6 11                    2461 	.db #0x11	; 17
      0000A7 11                    2462 	.db #0x11	; 17
      0000A8 11                    2463 	.db #0x11	; 17
      0000A9 7E                    2464 	.db #0x7e	; 126
      0000AA 7F                    2465 	.db #0x7f	; 127
      0000AB 49                    2466 	.db #0x49	; 73	'I'
      0000AC 49                    2467 	.db #0x49	; 73	'I'
      0000AD 49                    2468 	.db #0x49	; 73	'I'
      0000AE 36                    2469 	.db #0x36	; 54	'6'
      0000AF 3E                    2470 	.db #0x3e	; 62
      0000B0 41                    2471 	.db #0x41	; 65	'A'
      0000B1 41                    2472 	.db #0x41	; 65	'A'
      0000B2 41                    2473 	.db #0x41	; 65	'A'
      0000B3 22                    2474 	.db #0x22	; 34
      0000B4 7F                    2475 	.db #0x7f	; 127
      0000B5 41                    2476 	.db #0x41	; 65	'A'
      0000B6 41                    2477 	.db #0x41	; 65	'A'
      0000B7 22                    2478 	.db #0x22	; 34
      0000B8 1C                    2479 	.db #0x1c	; 28
      0000B9 7F                    2480 	.db #0x7f	; 127
      0000BA 49                    2481 	.db #0x49	; 73	'I'
      0000BB 49                    2482 	.db #0x49	; 73	'I'
      0000BC 49                    2483 	.db #0x49	; 73	'I'
      0000BD 41                    2484 	.db #0x41	; 65	'A'
      0000BE 7F                    2485 	.db #0x7f	; 127
      0000BF 09                    2486 	.db #0x09	; 9
      0000C0 09                    2487 	.db #0x09	; 9
      0000C1 09                    2488 	.db #0x09	; 9
      0000C2 01                    2489 	.db #0x01	; 1
      0000C3 3E                    2490 	.db #0x3e	; 62
      0000C4 41                    2491 	.db #0x41	; 65	'A'
      0000C5 49                    2492 	.db #0x49	; 73	'I'
      0000C6 49                    2493 	.db #0x49	; 73	'I'
      0000C7 7A                    2494 	.db #0x7a	; 122	'z'
      0000C8 7F                    2495 	.db #0x7f	; 127
      0000C9 08                    2496 	.db #0x08	; 8
      0000CA 08                    2497 	.db #0x08	; 8
      0000CB 08                    2498 	.db #0x08	; 8
      0000CC 7F                    2499 	.db #0x7f	; 127
      0000CD 00                    2500 	.db #0x00	; 0
      0000CE 41                    2501 	.db #0x41	; 65	'A'
      0000CF 7F                    2502 	.db #0x7f	; 127
      0000D0 41                    2503 	.db #0x41	; 65	'A'
      0000D1 00                    2504 	.db #0x00	; 0
      0000D2 20                    2505 	.db #0x20	; 32
      0000D3 40                    2506 	.db #0x40	; 64
      0000D4 41                    2507 	.db #0x41	; 65	'A'
      0000D5 3F                    2508 	.db #0x3f	; 63
      0000D6 01                    2509 	.db #0x01	; 1
      0000D7 7F                    2510 	.db #0x7f	; 127
      0000D8 08                    2511 	.db #0x08	; 8
      0000D9 14                    2512 	.db #0x14	; 20
      0000DA 22                    2513 	.db #0x22	; 34
      0000DB 41                    2514 	.db #0x41	; 65	'A'
      0000DC 7F                    2515 	.db #0x7f	; 127
      0000DD 40                    2516 	.db #0x40	; 64
      0000DE 40                    2517 	.db #0x40	; 64
      0000DF 40                    2518 	.db #0x40	; 64
      0000E0 40                    2519 	.db #0x40	; 64
      0000E1 7F                    2520 	.db #0x7f	; 127
      0000E2 02                    2521 	.db #0x02	; 2
      0000E3 0C                    2522 	.db #0x0c	; 12
      0000E4 02                    2523 	.db #0x02	; 2
      0000E5 7F                    2524 	.db #0x7f	; 127
      0000E6 7F                    2525 	.db #0x7f	; 127
      0000E7 04                    2526 	.db #0x04	; 4
      0000E8 08                    2527 	.db #0x08	; 8
      0000E9 10                    2528 	.db #0x10	; 16
      0000EA 7F                    2529 	.db #0x7f	; 127
      0000EB 3E                    2530 	.db #0x3e	; 62
      0000EC 41                    2531 	.db #0x41	; 65	'A'
      0000ED 41                    2532 	.db #0x41	; 65	'A'
      0000EE 41                    2533 	.db #0x41	; 65	'A'
      0000EF 3E                    2534 	.db #0x3e	; 62
      0000F0 7F                    2535 	.db #0x7f	; 127
      0000F1 09                    2536 	.db #0x09	; 9
      0000F2 09                    2537 	.db #0x09	; 9
      0000F3 09                    2538 	.db #0x09	; 9
      0000F4 06                    2539 	.db #0x06	; 6
      0000F5 3E                    2540 	.db #0x3e	; 62
      0000F6 41                    2541 	.db #0x41	; 65	'A'
      0000F7 51                    2542 	.db #0x51	; 81	'Q'
      0000F8 21                    2543 	.db #0x21	; 33
      0000F9 5E                    2544 	.db #0x5e	; 94
      0000FA 7F                    2545 	.db #0x7f	; 127
      0000FB 09                    2546 	.db #0x09	; 9
      0000FC 19                    2547 	.db #0x19	; 25
      0000FD 29                    2548 	.db #0x29	; 41
      0000FE 46                    2549 	.db #0x46	; 70	'F'
      0000FF 46                    2550 	.db #0x46	; 70	'F'
      000100 49                    2551 	.db #0x49	; 73	'I'
      000101 49                    2552 	.db #0x49	; 73	'I'
      000102 49                    2553 	.db #0x49	; 73	'I'
      000103 31                    2554 	.db #0x31	; 49	'1'
      000104 01                    2555 	.db #0x01	; 1
      000105 01                    2556 	.db #0x01	; 1
      000106 7F                    2557 	.db #0x7f	; 127
      000107 01                    2558 	.db #0x01	; 1
      000108 01                    2559 	.db #0x01	; 1
      000109 3F                    2560 	.db #0x3f	; 63
      00010A 40                    2561 	.db #0x40	; 64
      00010B 40                    2562 	.db #0x40	; 64
      00010C 40                    2563 	.db #0x40	; 64
      00010D 3F                    2564 	.db #0x3f	; 63
      00010E 1F                    2565 	.db #0x1f	; 31
      00010F 20                    2566 	.db #0x20	; 32
      000110 40                    2567 	.db #0x40	; 64
      000111 20                    2568 	.db #0x20	; 32
      000112 1F                    2569 	.db #0x1f	; 31
      000113 3F                    2570 	.db #0x3f	; 63
      000114 40                    2571 	.db #0x40	; 64
      000115 38                    2572 	.db #0x38	; 56	'8'
      000116 40                    2573 	.db #0x40	; 64
      000117 3F                    2574 	.db #0x3f	; 63
      000118 63                    2575 	.db #0x63	; 99	'c'
      000119 14                    2576 	.db #0x14	; 20
      00011A 08                    2577 	.db #0x08	; 8
      00011B 14                    2578 	.db #0x14	; 20
      00011C 63                    2579 	.db #0x63	; 99	'c'
      00011D 07                    2580 	.db #0x07	; 7
      00011E 08                    2581 	.db #0x08	; 8
      00011F 70                    2582 	.db #0x70	; 112	'p'
      000120 08                    2583 	.db #0x08	; 8
      000121 07                    2584 	.db #0x07	; 7
      000122 61                    2585 	.db #0x61	; 97	'a'
      000123 51                    2586 	.db #0x51	; 81	'Q'
      000124 49                    2587 	.db #0x49	; 73	'I'
      000125 45                    2588 	.db #0x45	; 69	'E'
      000126 43                    2589 	.db #0x43	; 67	'C'
      000127 00                    2590 	.db #0x00	; 0
      000128 7F                    2591 	.db #0x7f	; 127
      000129 41                    2592 	.db #0x41	; 65	'A'
      00012A 41                    2593 	.db #0x41	; 65	'A'
      00012B 00                    2594 	.db #0x00	; 0
      00012C 02                    2595 	.db #0x02	; 2
      00012D 04                    2596 	.db #0x04	; 4
      00012E 08                    2597 	.db #0x08	; 8
      00012F 10                    2598 	.db #0x10	; 16
      000130 20                    2599 	.db #0x20	; 32
      000131 00                    2600 	.db #0x00	; 0
      000132 41                    2601 	.db #0x41	; 65	'A'
      000133 41                    2602 	.db #0x41	; 65	'A'
      000134 7F                    2603 	.db #0x7f	; 127
      000135 00                    2604 	.db #0x00	; 0
      000136 04                    2605 	.db #0x04	; 4
      000137 02                    2606 	.db #0x02	; 2
      000138 01                    2607 	.db #0x01	; 1
      000139 02                    2608 	.db #0x02	; 2
      00013A 04                    2609 	.db #0x04	; 4
      00013B 40                    2610 	.db #0x40	; 64
      00013C 40                    2611 	.db #0x40	; 64
      00013D 40                    2612 	.db #0x40	; 64
      00013E 40                    2613 	.db #0x40	; 64
      00013F 40                    2614 	.db #0x40	; 64
      000140 00                    2615 	.db #0x00	; 0
      000141 01                    2616 	.db #0x01	; 1
      000142 02                    2617 	.db #0x02	; 2
      000143 04                    2618 	.db #0x04	; 4
      000144 00                    2619 	.db #0x00	; 0
      000145 20                    2620 	.db #0x20	; 32
      000146 54                    2621 	.db #0x54	; 84	'T'
      000147 54                    2622 	.db #0x54	; 84	'T'
      000148 54                    2623 	.db #0x54	; 84	'T'
      000149 78                    2624 	.db #0x78	; 120	'x'
      00014A 7F                    2625 	.db #0x7f	; 127
      00014B 48                    2626 	.db #0x48	; 72	'H'
      00014C 44                    2627 	.db #0x44	; 68	'D'
      00014D 44                    2628 	.db #0x44	; 68	'D'
      00014E 38                    2629 	.db #0x38	; 56	'8'
      00014F 38                    2630 	.db #0x38	; 56	'8'
      000150 44                    2631 	.db #0x44	; 68	'D'
      000151 44                    2632 	.db #0x44	; 68	'D'
      000152 44                    2633 	.db #0x44	; 68	'D'
      000153 20                    2634 	.db #0x20	; 32
      000154 38                    2635 	.db #0x38	; 56	'8'
      000155 44                    2636 	.db #0x44	; 68	'D'
      000156 44                    2637 	.db #0x44	; 68	'D'
      000157 48                    2638 	.db #0x48	; 72	'H'
      000158 7F                    2639 	.db #0x7f	; 127
      000159 38                    2640 	.db #0x38	; 56	'8'
      00015A 54                    2641 	.db #0x54	; 84	'T'
      00015B 54                    2642 	.db #0x54	; 84	'T'
      00015C 54                    2643 	.db #0x54	; 84	'T'
      00015D 18                    2644 	.db #0x18	; 24
      00015E 08                    2645 	.db #0x08	; 8
      00015F 7E                    2646 	.db #0x7e	; 126
      000160 09                    2647 	.db #0x09	; 9
      000161 01                    2648 	.db #0x01	; 1
      000162 02                    2649 	.db #0x02	; 2
      000163 0C                    2650 	.db #0x0c	; 12
      000164 52                    2651 	.db #0x52	; 82	'R'
      000165 52                    2652 	.db #0x52	; 82	'R'
      000166 52                    2653 	.db #0x52	; 82	'R'
      000167 3E                    2654 	.db #0x3e	; 62
      000168 7F                    2655 	.db #0x7f	; 127
      000169 08                    2656 	.db #0x08	; 8
      00016A 04                    2657 	.db #0x04	; 4
      00016B 04                    2658 	.db #0x04	; 4
      00016C 78                    2659 	.db #0x78	; 120	'x'
      00016D 00                    2660 	.db #0x00	; 0
      00016E 44                    2661 	.db #0x44	; 68	'D'
      00016F 7D                    2662 	.db #0x7d	; 125
      000170 40                    2663 	.db #0x40	; 64
      000171 00                    2664 	.db #0x00	; 0
      000172 20                    2665 	.db #0x20	; 32
      000173 40                    2666 	.db #0x40	; 64
      000174 44                    2667 	.db #0x44	; 68	'D'
      000175 3D                    2668 	.db #0x3d	; 61
      000176 00                    2669 	.db #0x00	; 0
      000177 7F                    2670 	.db #0x7f	; 127
      000178 10                    2671 	.db #0x10	; 16
      000179 28                    2672 	.db #0x28	; 40
      00017A 44                    2673 	.db #0x44	; 68	'D'
      00017B 00                    2674 	.db #0x00	; 0
      00017C 00                    2675 	.db #0x00	; 0
      00017D 41                    2676 	.db #0x41	; 65	'A'
      00017E 7F                    2677 	.db #0x7f	; 127
      00017F 40                    2678 	.db #0x40	; 64
      000180 00                    2679 	.db #0x00	; 0
      000181 7C                    2680 	.db #0x7c	; 124
      000182 04                    2681 	.db #0x04	; 4
      000183 18                    2682 	.db #0x18	; 24
      000184 04                    2683 	.db #0x04	; 4
      000185 78                    2684 	.db #0x78	; 120	'x'
      000186 7C                    2685 	.db #0x7c	; 124
      000187 08                    2686 	.db #0x08	; 8
      000188 04                    2687 	.db #0x04	; 4
      000189 04                    2688 	.db #0x04	; 4
      00018A 78                    2689 	.db #0x78	; 120	'x'
      00018B 38                    2690 	.db #0x38	; 56	'8'
      00018C 44                    2691 	.db #0x44	; 68	'D'
      00018D 44                    2692 	.db #0x44	; 68	'D'
      00018E 44                    2693 	.db #0x44	; 68	'D'
      00018F 38                    2694 	.db #0x38	; 56	'8'
      000190 7C                    2695 	.db #0x7c	; 124
      000191 14                    2696 	.db #0x14	; 20
      000192 14                    2697 	.db #0x14	; 20
      000193 14                    2698 	.db #0x14	; 20
      000194 08                    2699 	.db #0x08	; 8
      000195 08                    2700 	.db #0x08	; 8
      000196 14                    2701 	.db #0x14	; 20
      000197 14                    2702 	.db #0x14	; 20
      000198 14                    2703 	.db #0x14	; 20
      000199 7C                    2704 	.db #0x7c	; 124
      00019A 7C                    2705 	.db #0x7c	; 124
      00019B 08                    2706 	.db #0x08	; 8
      00019C 04                    2707 	.db #0x04	; 4
      00019D 04                    2708 	.db #0x04	; 4
      00019E 08                    2709 	.db #0x08	; 8
      00019F 48                    2710 	.db #0x48	; 72	'H'
      0001A0 54                    2711 	.db #0x54	; 84	'T'
      0001A1 54                    2712 	.db #0x54	; 84	'T'
      0001A2 54                    2713 	.db #0x54	; 84	'T'
      0001A3 20                    2714 	.db #0x20	; 32
      0001A4 04                    2715 	.db #0x04	; 4
      0001A5 3F                    2716 	.db #0x3f	; 63
      0001A6 44                    2717 	.db #0x44	; 68	'D'
      0001A7 40                    2718 	.db #0x40	; 64
      0001A8 20                    2719 	.db #0x20	; 32
      0001A9 3C                    2720 	.db #0x3c	; 60
      0001AA 40                    2721 	.db #0x40	; 64
      0001AB 40                    2722 	.db #0x40	; 64
      0001AC 20                    2723 	.db #0x20	; 32
      0001AD 7C                    2724 	.db #0x7c	; 124
      0001AE 1C                    2725 	.db #0x1c	; 28
      0001AF 20                    2726 	.db #0x20	; 32
      0001B0 40                    2727 	.db #0x40	; 64
      0001B1 20                    2728 	.db #0x20	; 32
      0001B2 1C                    2729 	.db #0x1c	; 28
      0001B3 3C                    2730 	.db #0x3c	; 60
      0001B4 40                    2731 	.db #0x40	; 64
      0001B5 30                    2732 	.db #0x30	; 48	'0'
      0001B6 40                    2733 	.db #0x40	; 64
      0001B7 3C                    2734 	.db #0x3c	; 60
      0001B8 44                    2735 	.db #0x44	; 68	'D'
      0001B9 28                    2736 	.db #0x28	; 40
      0001BA 10                    2737 	.db #0x10	; 16
      0001BB 28                    2738 	.db #0x28	; 40
      0001BC 44                    2739 	.db #0x44	; 68	'D'
      0001BD 0C                    2740 	.db #0x0c	; 12
      0001BE 50                    2741 	.db #0x50	; 80	'P'
      0001BF 50                    2742 	.db #0x50	; 80	'P'
      0001C0 50                    2743 	.db #0x50	; 80	'P'
      0001C1 3C                    2744 	.db #0x3c	; 60
      0001C2 44                    2745 	.db #0x44	; 68	'D'
      0001C3 64                    2746 	.db #0x64	; 100	'd'
      0001C4 54                    2747 	.db #0x54	; 84	'T'
      0001C5 4C                    2748 	.db #0x4c	; 76	'L'
      0001C6 44                    2749 	.db #0x44	; 68	'D'
      0001C7 00                    2750 	.db #0x00	; 0
      0001C8 08                    2751 	.db #0x08	; 8
      0001C9 36                    2752 	.db #0x36	; 54	'6'
      0001CA 41                    2753 	.db #0x41	; 65	'A'
      0001CB 00                    2754 	.db #0x00	; 0
      0001CC 00                    2755 	.db #0x00	; 0
      0001CD 00                    2756 	.db #0x00	; 0
      0001CE 7F                    2757 	.db #0x7f	; 127
      0001CF 00                    2758 	.db #0x00	; 0
      0001D0 00                    2759 	.db #0x00	; 0
      0001D1 00                    2760 	.db #0x00	; 0
      0001D2 41                    2761 	.db #0x41	; 65	'A'
      0001D3 36                    2762 	.db #0x36	; 54	'6'
      0001D4 08                    2763 	.db #0x08	; 8
      0001D5 00                    2764 	.db #0x00	; 0
      0001D6 10                    2765 	.db #0x10	; 16
      0001D7 08                    2766 	.db #0x08	; 8
      0001D8 08                    2767 	.db #0x08	; 8
      0001D9 10                    2768 	.db #0x10	; 16
      0001DA 08                    2769 	.db #0x08	; 8
      0001DB 00                    2770 	.db #0x00	; 0
      0001DC 00                    2771 	.db #0x00	; 0
      0001DD 00                    2772 	.db #0x00	; 0
      0001DE 00                    2773 	.db #0x00	; 0
      0001DF 00                    2774 	.db #0x00	; 0
                                   2775 	.area CONST   (CODE)
      0001E0                       2776 ___str_0:
      0001E0 20 20 20 20 20 20 42  2777 	.ascii "      Bipolar"
             69 70 6F 6C 61 72
      0001ED 00                    2778 	.db 0x00
                                   2779 	.area CSEG    (CODE)
                                   2780 	.area CONST   (CODE)
      0001EE                       2781 ___str_1:
      0001EE 20 20 20 53 74 65 70  2782 	.ascii "   Stepper Motor"
             70 65 72 20 4D 6F 74
             6F 72
      0001FE 00                    2783 	.db 0x00
                                   2784 	.area CSEG    (CODE)
                                   2785 	.area CONST   (CODE)
      0001FF                       2786 ___str_2:
      0001FF 20 20 20 20 20 43 6F  2787 	.ascii "     Controller"
             6E 74 72 6F 6C 6C 65
             72
      00020E 00                    2788 	.db 0x00
                                   2789 	.area CSEG    (CODE)
                                   2790 	.area CONST   (CODE)
      00020F                       2791 ___str_3:
      00020F 20 20 20 20 20 20 20  2792 	.ascii "        V1.0"
             20 56 31 2E 30
      00021B 00                    2793 	.db 0x00
                                   2794 	.area CSEG    (CODE)
                                   2795 	.area CONST   (CODE)
      00021C                       2796 ___str_4:
      00021C 20 20 20 20 20 20 20  2797 	.ascii "       Press.."
             50 72 65 73 73 2E 2E
      00022A 00                    2798 	.db 0x00
                                   2799 	.area CSEG    (CODE)
                                   2800 	.area CONST   (CODE)
      00022B                       2801 ___str_5:
      00022B 20 20 20 20 20 20 4D  2802 	.ascii "      Main Menu"
             61 69 6E 20 4D 65 6E
             75
      00023A 00                    2803 	.db 0x00
                                   2804 	.area CSEG    (CODE)
                                   2805 	.area CONST   (CODE)
      00023B                       2806 ___str_6:
      00023B 3E 20 53 74 65 70 20  2807 	.ascii "> Step Control"
             43 6F 6E 74 72 6F 6C
      000249 00                    2808 	.db 0x00
                                   2809 	.area CSEG    (CODE)
                                   2810 	.area CONST   (CODE)
      00024A                       2811 ___str_7:
      00024A 20 20 44 69 73 74 61  2812 	.ascii "  Distance Control"
             6E 63 65 20 43 6F 6E
             74 72 6F 6C
      00025C 00                    2813 	.db 0x00
                                   2814 	.area CSEG    (CODE)
                                   2815 	.area CONST   (CODE)
      00025D                       2816 ___str_8:
      00025D 20 20 45 6E 63 6F 64  2817 	.ascii "  Encoder Control"
             65 72 20 43 6F 6E 74
             72 6F 6C
      00026E 00                    2818 	.db 0x00
                                   2819 	.area CSEG    (CODE)
                                   2820 	.area CONST   (CODE)
      00026F                       2821 ___str_9:
      00026F 20 20 53 74 65 70 20  2822 	.ascii "  Step Control"
             43 6F 6E 74 72 6F 6C
      00027D 00                    2823 	.db 0x00
                                   2824 	.area CSEG    (CODE)
                                   2825 	.area CONST   (CODE)
      00027E                       2826 ___str_10:
      00027E 3E 20 44 69 73 74 61  2827 	.ascii "> Distance Control"
             6E 63 65 20 43 6F 6E
             74 72 6F 6C
      000290 00                    2828 	.db 0x00
                                   2829 	.area CSEG    (CODE)
                                   2830 	.area CONST   (CODE)
      000291                       2831 ___str_11:
      000291 3E 20 45 6E 63 6F 64  2832 	.ascii "> Encoder Control"
             65 72 20 43 6F 6E 74
             72 6F 6C
      0002A2 00                    2833 	.db 0x00
                                   2834 	.area CSEG    (CODE)
                                   2835 	.area CONST   (CODE)
      0002A3                       2836 ___str_12:
      0002A3 20 20 20 20 20 53 74  2837 	.ascii "     Step Control"
             65 70 20 43 6F 6E 74
             72 6F 6C
      0002B4 00                    2838 	.db 0x00
                                   2839 	.area CSEG    (CODE)
                                   2840 	.area CONST   (CODE)
      0002B5                       2841 ___str_13:
      0002B5 44 69 72 3A 20 43 43  2842 	.ascii "Dir: CCW         FREE"
             57 20 20 20 20 20 20
             20 20 20 46 52 45 45
      0002CA 00                    2843 	.db 0x00
                                   2844 	.area CSEG    (CODE)
                                   2845 	.area CONST   (CODE)
      0002CB                       2846 ___str_14:
      0002CB 3E 20 46 72 65 71 75  2847 	.ascii "> Frequency"
             65 6E 63 79
      0002D6 00                    2848 	.db 0x00
                                   2849 	.area CSEG    (CODE)
                                   2850 	.area CONST   (CODE)
      0002D7                       2851 ___str_15:
      0002D7 20 20 4D 69 63 72 6F  2852 	.ascii "  Microstepping"
             73 74 65 70 70 69 6E
             67
      0002E6 00                    2853 	.db 0x00
                                   2854 	.area CSEG    (CODE)
                                   2855 	.area CONST   (CODE)
      0002E7                       2856 ___str_16:
      0002E7 20 20 53 74 65 70 73  2857 	.ascii "  Steps"
      0002EE 00                    2858 	.db 0x00
                                   2859 	.area CSEG    (CODE)
                                   2860 	.area CONST   (CODE)
      0002EF                       2861 ___str_17:
      0002EF 20 20 47 6F 20 42 61  2862 	.ascii "  Go Back"
             63 6B
      0002F8 00                    2863 	.db 0x00
                                   2864 	.area CSEG    (CODE)
                                   2865 	.area CONST   (CODE)
      0002F9                       2866 ___str_18:
      0002F9 20 20 20 20 20 20 20  2867 	.ascii "         Run         "
             20 20 52 75 6E 20 20
             20 20 20 20 20 20 20
      00030E 00                    2868 	.db 0x00
                                   2869 	.area CSEG    (CODE)
                                   2870 	.area CONST   (CODE)
      00030F                       2871 ___str_19:
      00030F 20 20 46 72 65 71 75  2872 	.ascii "  Frequency"
             65 6E 63 79
      00031A 00                    2873 	.db 0x00
                                   2874 	.area CSEG    (CODE)
                                   2875 	.area CONST   (CODE)
      00031B                       2876 ___str_20:
      00031B 3E 20 4D 69 63 72 6F  2877 	.ascii "> Microstepping"
             73 74 65 70 70 69 6E
             67
      00032A 00                    2878 	.db 0x00
                                   2879 	.area CSEG    (CODE)
                                   2880 	.area CONST   (CODE)
      00032B                       2881 ___str_21:
      00032B 3E 20 53 74 65 70 73  2882 	.ascii "> Steps"
      000332 00                    2883 	.db 0x00
                                   2884 	.area CSEG    (CODE)
                                   2885 	.area CONST   (CODE)
      000333                       2886 ___str_22:
      000333 3E 20 47 6F 20 42 61  2887 	.ascii "> Go Back"
             63 6B
      00033C 00                    2888 	.db 0x00
                                   2889 	.area CSEG    (CODE)
                                   2890 	.area CONST   (CODE)
      00033D                       2891 ___str_23:
      00033D 3E 20 20 20 20 20 20  2892 	.ascii ">        Run         "
             20 20 52 75 6E 20 20
             20 20 20 20 20 20 20
      000352 00                    2893 	.db 0x00
                                   2894 	.area CSEG    (CODE)
                                   2895 	.area CONST   (CODE)
      000353                       2896 ___str_24:
      000353 68 61 70 6E 64        2897 	.ascii "hapnd"
      000358 0A                    2898 	.db 0x0a
      000359 00                    2899 	.db 0x00
                                   2900 	.area CSEG    (CODE)
                                   2901 	.area CONST   (CODE)
      00035A                       2902 ___str_25:
      00035A 2A 2A 2A 2A 2A 2A 2A  2903 	.ascii "*********Run*********"
             2A 2A 52 75 6E 2A 2A
             2A 2A 2A 2A 2A 2A 2A
      00036F 00                    2904 	.db 0x00
                                   2905 	.area CSEG    (CODE)
                                   2906 	.area CONST   (CODE)
      000370                       2907 ___str_26:
      000370 20 20 20 4E 6F 74 20  2908 	.ascii "   Not Implemented"
             49 6D 70 6C 65 6D 65
             6E 74 65 64
      000382 00                    2909 	.db 0x00
                                   2910 	.area CSEG    (CODE)
                                   2911 	.area CONST   (CODE)
      000383                       2912 ___str_27:
      000383 43 57 20              2913 	.ascii "CW "
      000386 00                    2914 	.db 0x00
                                   2915 	.area CSEG    (CODE)
                                   2916 	.area CONST   (CODE)
      000387                       2917 ___str_28:
      000387 43 43 57              2918 	.ascii "CCW"
      00038A 00                    2919 	.db 0x00
                                   2920 	.area CSEG    (CODE)
                                   2921 	.area CONST   (CODE)
      00038B                       2922 ___str_29:
      00038B 46 52 45 45           2923 	.ascii "FREE"
      00038F 00                    2924 	.db 0x00
                                   2925 	.area CSEG    (CODE)
                                   2926 	.area CONST   (CODE)
      000390                       2927 ___str_30:
      000390 48 4F 4C 44           2928 	.ascii "HOLD"
      000394 00                    2929 	.db 0x00
                                   2930 	.area CSEG    (CODE)
                                   2931 	.area CONST   (CODE)
      000395                       2932 ___str_31:
      000395 53 65 74 74 69 6E 67  2933 	.ascii "Setting Steps:"
             20 53 74 65 70 73 3A
      0003A3 00                    2934 	.db 0x00
                                   2935 	.area CSEG    (CODE)
                                   2936 	.area CONST   (CODE)
      0003A4                       2937 ___str_32:
      0003A4 20 20 20 20 20 20 25  2938 	.ascii "      %d%d%d.%d%d"
             64 25 64 25 64 2E 25
             64 25 64
      0003B5 00                    2939 	.db 0x00
                                   2940 	.area CSEG    (CODE)
                                   2941 	.area CONST   (CODE)
      0003B6                       2942 ___str_33:
      0003B6 20 20 20 20 20 20 5E  2943 	.ascii "      ^"
      0003BD 00                    2944 	.db 0x00
                                   2945 	.area CSEG    (CODE)
                                   2946 	.area CONST   (CODE)
      0003BE                       2947 ___str_34:
      0003BE 20 20 20 20 20 20 20  2948 	.ascii "       ^"
             5E
      0003C6 00                    2949 	.db 0x00
                                   2950 	.area CSEG    (CODE)
                                   2951 	.area CONST   (CODE)
      0003C7                       2952 ___str_35:
      0003C7 20 20 20 20 20 20 20  2953 	.ascii "        ^"
             20 5E
      0003D0 00                    2954 	.db 0x00
                                   2955 	.area CSEG    (CODE)
                                   2956 	.area CONST   (CODE)
      0003D1                       2957 ___str_36:
      0003D1 20 20 20 20 20 20 20  2958 	.ascii "          ^"
             20 20 20 5E
      0003DC 00                    2959 	.db 0x00
                                   2960 	.area CSEG    (CODE)
                                   2961 	.area CONST   (CODE)
      0003DD                       2962 ___str_37:
      0003DD 20 20 20 20 20 20 20  2963 	.ascii "           ^"
             20 20 20 20 5E
      0003E9 00                    2964 	.db 0x00
                                   2965 	.area CSEG    (CODE)
                                   2966 	.area CONST   (CODE)
      0003EA                       2967 ___str_38:
      0003EA 53 65 74 74 69 6E 67  2968 	.ascii "Setting Microstepping:"
             20 4D 69 63 72 6F 73
             74 65 70 70 69 6E 67
             3A
      000400 00                    2969 	.db 0x00
                                   2970 	.area CSEG    (CODE)
                                   2971 	.area CONST   (CODE)
      000401                       2972 ___str_39:
      000401 20 20 20 20 20 20 25  2973 	.ascii "      %d"
             64
      000409 00                    2974 	.db 0x00
                                   2975 	.area CSEG    (CODE)
                                   2976 	.area CONST   (CODE)
      00040A                       2977 ___str_40:
      00040A 53 65 74 74 69 6E 67  2978 	.ascii "Setting frequency:"
             20 66 72 65 71 75 65
             6E 63 79 3A
      00041C 00                    2979 	.db 0x00
                                   2980 	.area CSEG    (CODE)
                                   2981 	.area XINIT   (CODE)
      000000                       2982 __xinit__menu_page_selected_page:
      000000 03                    2983 	.db #0x03	; 3
      000001                       2984 __xinit__step_control_page_options_last:
      000001 05                    2985 	.db #0x05	; 5
                                   2986 	.area CABS    (ABS,CODE)
