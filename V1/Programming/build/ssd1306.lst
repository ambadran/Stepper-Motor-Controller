                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ssd1306
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _INIT_SSD1306
                                     12 	.globl _i2cStop
                                     13 	.globl _i2cSendByte
                                     14 	.globl _i2cStartCommand
                                     15 	.globl _i2cInitialiseMaster
                                     16 	.globl _memset
                                     17 	.globl _S1SM0_FE
                                     18 	.globl _T1IE
                                     19 	.globl _T0IE
                                     20 	.globl _T1RUN
                                     21 	.globl _T0RUN
                                     22 	.globl _CY
                                     23 	.globl _AC
                                     24 	.globl _F0
                                     25 	.globl _RS1
                                     26 	.globl _RS0
                                     27 	.globl _OV
                                     28 	.globl _F1
                                     29 	.globl _P
                                     30 	.globl _EA
                                     31 	.globl _INT1IE
                                     32 	.globl _INT0IE
                                     33 	.globl _INT1TR
                                     34 	.globl _INT0TR
                                     35 	.globl _P5_5
                                     36 	.globl _P5_4
                                     37 	.globl _P5_3
                                     38 	.globl _P5_2
                                     39 	.globl _P5_1
                                     40 	.globl _P5_0
                                     41 	.globl _P3_7
                                     42 	.globl _P3_6
                                     43 	.globl _P3_5
                                     44 	.globl _P3_4
                                     45 	.globl _P3_3
                                     46 	.globl _P3_2
                                     47 	.globl _P3_1
                                     48 	.globl _P3_0
                                     49 	.globl _P2_7
                                     50 	.globl _P2_6
                                     51 	.globl _P2_5
                                     52 	.globl _P2_4
                                     53 	.globl _P2_3
                                     54 	.globl _P2_2
                                     55 	.globl _P2_1
                                     56 	.globl _P2_0
                                     57 	.globl _P1_7
                                     58 	.globl _P1_6
                                     59 	.globl _P1_5
                                     60 	.globl _P1_4
                                     61 	.globl _P1_3
                                     62 	.globl _P1_2
                                     63 	.globl _P1_1
                                     64 	.globl _P1_0
                                     65 	.globl _USBADR
                                     66 	.globl _USBCON
                                     67 	.globl _USBDAT
                                     68 	.globl _USBCLK
                                     69 	.globl _S4BUF
                                     70 	.globl _S4CON
                                     71 	.globl _S3BUF
                                     72 	.globl _S3CON
                                     73 	.globl _S2BUF
                                     74 	.globl _S2CON
                                     75 	.globl _S1BUF
                                     76 	.globl _S1CON
                                     77 	.globl _SADEN
                                     78 	.globl _SADDR
                                     79 	.globl _AUXINTIF
                                     80 	.globl _T3
                                     81 	.globl _T3L
                                     82 	.globl _T3H
                                     83 	.globl _T4
                                     84 	.globl _T4L
                                     85 	.globl _T4H
                                     86 	.globl _T4T3M
                                     87 	.globl _WDT_CONTR
                                     88 	.globl _AUXR
                                     89 	.globl _T2
                                     90 	.globl _T2H
                                     91 	.globl _T2L
                                     92 	.globl _T1
                                     93 	.globl _T1H
                                     94 	.globl _T1L
                                     95 	.globl _T0
                                     96 	.globl _T0H
                                     97 	.globl _T0L
                                     98 	.globl _TMOD
                                     99 	.globl _TCON
                                    100 	.globl _IRTRIM
                                    101 	.globl _LIRTRIM
                                    102 	.globl _IRCBAND
                                    103 	.globl _SPDAT
                                    104 	.globl _SPCTL
                                    105 	.globl _SPSTAT
                                    106 	.globl _WKTC
                                    107 	.globl _WKTCH
                                    108 	.globl _WKTCL
                                    109 	.globl _BUS_SPEED
                                    110 	.globl _P_SW2
                                    111 	.globl _P_SW1
                                    112 	.globl _RSTCFG
                                    113 	.globl _PCON
                                    114 	.globl _B
                                    115 	.globl _ACC
                                    116 	.globl _PSW
                                    117 	.globl _SP
                                    118 	.globl _IP3H
                                    119 	.globl _IP3L
                                    120 	.globl _IP2H
                                    121 	.globl _IP2L
                                    122 	.globl _IE2
                                    123 	.globl _IP1H
                                    124 	.globl _IP1L
                                    125 	.globl _IE1
                                    126 	.globl _INT_CLKO
                                    127 	.globl _IAP_TPS
                                    128 	.globl _IAP_CONTR
                                    129 	.globl _IAP_TRIG
                                    130 	.globl _IAP_CMD
                                    131 	.globl _IAP_ADDR
                                    132 	.globl _IAP_ADDRL
                                    133 	.globl _IAP_ADDRH
                                    134 	.globl _IAP_DATA
                                    135 	.globl _P5M0
                                    136 	.globl _P5M1
                                    137 	.globl _P5
                                    138 	.globl _P3M0
                                    139 	.globl _P3M1
                                    140 	.globl _P3
                                    141 	.globl _P2M0
                                    142 	.globl _P2M1
                                    143 	.globl _P2
                                    144 	.globl _P1M0
                                    145 	.globl _P1M1
                                    146 	.globl _P1
                                    147 	.globl _TA
                                    148 	.globl _DPH1
                                    149 	.globl _DPL1
                                    150 	.globl _DPS
                                    151 	.globl _DP
                                    152 	.globl _DPH
                                    153 	.globl _DPL
                                    154 	.globl _CMPCR2
                                    155 	.globl _CMPCR1
                                    156 	.globl _DMA_ADC_AMT
                                    157 	.globl _ADCCFG
                                    158 	.globl _ADC_RES
                                    159 	.globl _ADC_RESL
                                    160 	.globl _ADC_RESH
                                    161 	.globl _ADC_CONTR
                                    162 	.globl _SSD1306_DrawLine_PARM_4
                                    163 	.globl _SSD1306_DrawLine_PARM_3
                                    164 	.globl _SSD1306_DrawLine_PARM_2
                                    165 	.globl _SSD1306_DrawPixel_PARM_2
                                    166 	.globl _SSD1306_SetPosition_PARM_2
                                    167 	.globl __counter
                                    168 	.globl _DMA_UR4R_TXAL
                                    169 	.globl _DMA_UR4R_TXAH
                                    170 	.globl _DMA_UR4R_DONE
                                    171 	.globl _DMA_UR4R_AMT
                                    172 	.globl _DMA_UR4R_STA
                                    173 	.globl _DMA_UR4R_CR
                                    174 	.globl _DMA_UR4R_CFG
                                    175 	.globl _DMA_UR4T_TXAL
                                    176 	.globl _DMA_UR4T_TXAH
                                    177 	.globl _DMA_UR4T_DONE
                                    178 	.globl _DMA_UR4T_AMT
                                    179 	.globl _DMA_UR4T_STA
                                    180 	.globl _DMA_UR4T_CR
                                    181 	.globl _DMA_UR4T_CFG
                                    182 	.globl _DMA_UR3R_TXAL
                                    183 	.globl _DMA_UR3R_TXAH
                                    184 	.globl _DMA_UR3R_DONE
                                    185 	.globl _DMA_UR3R_AMT
                                    186 	.globl _DMA_UR3R_STA
                                    187 	.globl _DMA_UR3R_CR
                                    188 	.globl _DMA_UR3R_CFG
                                    189 	.globl _DMA_UR3T_TXAL
                                    190 	.globl _DMA_UR3T_TXAH
                                    191 	.globl _DMA_UR3T_DONE
                                    192 	.globl _DMA_UR3T_AMT
                                    193 	.globl _DMA_UR3T_STA
                                    194 	.globl _DMA_UR3T_CR
                                    195 	.globl _DMA_UR3T_CFG
                                    196 	.globl _DMA_UR2R_TXAL
                                    197 	.globl _DMA_UR2R_TXAH
                                    198 	.globl _DMA_UR2R_DONE
                                    199 	.globl _DMA_UR2R_AMT
                                    200 	.globl _DMA_UR2R_STA
                                    201 	.globl _DMA_UR2R_CR
                                    202 	.globl _DMA_UR2R_CFG
                                    203 	.globl _DMA_UR2T_TXAL
                                    204 	.globl _DMA_UR2T_TXAH
                                    205 	.globl _DMA_UR2T_DONE
                                    206 	.globl _DMA_UR2T_AMT
                                    207 	.globl _DMA_UR2T_STA
                                    208 	.globl _DMA_UR2T_CR
                                    209 	.globl _DMA_UR2T_CFG
                                    210 	.globl _DMA_UR1R_TXAL
                                    211 	.globl _DMA_UR1R_TXAH
                                    212 	.globl _DMA_UR1R_DONE
                                    213 	.globl _DMA_UR1R_AMT
                                    214 	.globl _DMA_UR1R_STA
                                    215 	.globl _DMA_UR1R_CR
                                    216 	.globl _DMA_UR1R_CFG
                                    217 	.globl _DMA_UR1T_TXAL
                                    218 	.globl _DMA_UR1T_TXAH
                                    219 	.globl _DMA_UR1T_DONE
                                    220 	.globl _DMA_URTX_AMT
                                    221 	.globl _DMA_UR1T_STA
                                    222 	.globl _DMA_UR1T_CR
                                    223 	.globl _DMA_UR1T_CFG
                                    224 	.globl _TM4PS
                                    225 	.globl _TM3PS
                                    226 	.globl _TM2PS
                                    227 	.globl _IRC48MCR
                                    228 	.globl _IRCDB
                                    229 	.globl _MCLKOCR
                                    230 	.globl _CKSEL
                                    231 	.globl _IRC32KCR
                                    232 	.globl _XOSCCR
                                    233 	.globl _HIRCCR
                                    234 	.globl _CLKDIV
                                    235 	.globl _DMA_SPI_CFG2
                                    236 	.globl _DMA_SPI_RXAL
                                    237 	.globl _DMA_SPI_RXAH
                                    238 	.globl _DMA_SPI_TXAL
                                    239 	.globl _DMA_SPI_TXAH
                                    240 	.globl _DMA_SPI_DONE
                                    241 	.globl _DMA_SPI_AMT
                                    242 	.globl _DMA_SPI_STA
                                    243 	.globl _DMA_SPI_CR
                                    244 	.globl _DMA_SPI_CFG
                                    245 	.globl _SSEC
                                    246 	.globl _SEC
                                    247 	.globl _MIN
                                    248 	.globl _HOUR
                                    249 	.globl _DAY
                                    250 	.globl _MONTH
                                    251 	.globl _YEAR
                                    252 	.globl _INISSEC
                                    253 	.globl _INISEC
                                    254 	.globl _INIMIN
                                    255 	.globl _INIHOUR
                                    256 	.globl _INIDAY
                                    257 	.globl _INIMONTH
                                    258 	.globl _INIYEAR
                                    259 	.globl _ALASSEC
                                    260 	.globl _ALASEC
                                    261 	.globl _ALAMIN
                                    262 	.globl _ALAHOUR
                                    263 	.globl _RTCIF
                                    264 	.globl _RTCIEN
                                    265 	.globl _RTCCFG
                                    266 	.globl _RTCCR
                                    267 	.globl _PWMB_OISR
                                    268 	.globl _PWMB_DTR
                                    269 	.globl _PWMB_BKR
                                    270 	.globl _PWMB_CCR4L
                                    271 	.globl _PWMB_CCR4H
                                    272 	.globl _PWMB_CCR3L
                                    273 	.globl _PWMB_CCR3H
                                    274 	.globl _PWMB_CCR2L
                                    275 	.globl _PWMB_CCR2H
                                    276 	.globl _PWMB_CCR1L
                                    277 	.globl _PWMB_CCR1H
                                    278 	.globl _PWMB_RCR
                                    279 	.globl _PWMB_ARRL
                                    280 	.globl _PWMB_ARRH
                                    281 	.globl _PWMB_PSCRL
                                    282 	.globl _PWMB_PSCRH
                                    283 	.globl _PWMB_CNTRL
                                    284 	.globl _PWMB_CNTRH
                                    285 	.globl _PWMB_CCER2
                                    286 	.globl _PWMB_CCER1
                                    287 	.globl _PWMB_CCMR4
                                    288 	.globl _PWMB_CCMR3
                                    289 	.globl _PWMB_CCMR2
                                    290 	.globl _PWMB_CCMR1
                                    291 	.globl _PWMB_EGR
                                    292 	.globl _PWMB_SR2
                                    293 	.globl _PWMB_SR1
                                    294 	.globl _PWMB_IER
                                    295 	.globl _PWMB_ETR
                                    296 	.globl _PWMB_SMCR
                                    297 	.globl _PWMB_CR2
                                    298 	.globl _PWMB_CR1
                                    299 	.globl _PWMA_OISR
                                    300 	.globl _PWMA_DTR
                                    301 	.globl _PWMA_BKR
                                    302 	.globl _PWMA_CCR4L
                                    303 	.globl _PWMA_CCR4H
                                    304 	.globl _PWMA_CCR3L
                                    305 	.globl _PWMA_CCR3H
                                    306 	.globl _PWMA_CCR2L
                                    307 	.globl _PWMA_CCR2H
                                    308 	.globl _PWMA_CCR1L
                                    309 	.globl _PWMA_CCR1H
                                    310 	.globl _PWMA_RCR
                                    311 	.globl _PWMA_ARRL
                                    312 	.globl _PWMA_ARRH
                                    313 	.globl _PWMA_PSCRL
                                    314 	.globl _PWMA_PSCRH
                                    315 	.globl _PWMA_CNTRL
                                    316 	.globl _PWMA_CNTRH
                                    317 	.globl _PWMA_CCER2
                                    318 	.globl _PWMA_CCER1
                                    319 	.globl _PWMA_CCMR4
                                    320 	.globl _PWMA_CCMR3
                                    321 	.globl _PWMA_CCMR2
                                    322 	.globl _PWMA_CCMR1
                                    323 	.globl _PWMA_EGR
                                    324 	.globl _PWMA_SR2
                                    325 	.globl _PWMA_SR1
                                    326 	.globl _PWMA_IER
                                    327 	.globl _PWMA_ETR
                                    328 	.globl _PWMA_SMCR
                                    329 	.globl _PWMA_CR2
                                    330 	.globl _PWMA_CR1
                                    331 	.globl _PWMB_IOAUX
                                    332 	.globl _PWMB_PS
                                    333 	.globl _PWMB_ENO
                                    334 	.globl _PWMB_ETRPS
                                    335 	.globl _PWMA_IOAUX
                                    336 	.globl _PWMA_PS
                                    337 	.globl _PWMA_ENO
                                    338 	.globl _PWMA_ETRPS
                                    339 	.globl _RSTFLAG
                                    340 	.globl _SPFUNC
                                    341 	.globl _OPCON
                                    342 	.globl _ARCON
                                    343 	.globl _MD4
                                    344 	.globl _MD5
                                    345 	.globl _MD0
                                    346 	.globl _MD1
                                    347 	.globl _MD2
                                    348 	.globl _MD3
                                    349 	.globl _DMA_LCM_RXAL
                                    350 	.globl _DMA_LCM_RXAH
                                    351 	.globl _DMA_LCM_TXAL
                                    352 	.globl _DMA_LCM_TXAH
                                    353 	.globl _DMA_LCM_DONE
                                    354 	.globl _DMA_LCM_AMT
                                    355 	.globl _DMA_LCM_STA
                                    356 	.globl _DMA_LCM_CR
                                    357 	.globl _DMA_LCM_CFG
                                    358 	.globl _LCMIDDAT
                                    359 	.globl _LCMIDDATH
                                    360 	.globl _LCMIDDATL
                                    361 	.globl _LCMSTA
                                    362 	.globl _LCMCR
                                    363 	.globl _LCMCFG2
                                    364 	.globl _LCMCFG
                                    365 	.globl _I2CMSAUX
                                    366 	.globl _I2CRXD
                                    367 	.globl _I2CTXD
                                    368 	.globl _I2CSLADR
                                    369 	.globl _I2CSLST
                                    370 	.globl _I2CSLCR
                                    371 	.globl _I2CMSST
                                    372 	.globl _I2CMSCR
                                    373 	.globl _I2CCFG
                                    374 	.globl _PINIPH
                                    375 	.globl _PINIPL
                                    376 	.globl _P5IE
                                    377 	.globl _P5DR
                                    378 	.globl _P5SR
                                    379 	.globl _P5NCS
                                    380 	.globl _P5PU
                                    381 	.globl _P5WKUE
                                    382 	.globl _P5IM1
                                    383 	.globl _P5IM0
                                    384 	.globl _P5INTF
                                    385 	.globl _P5INTE
                                    386 	.globl _P3IE
                                    387 	.globl _P3DR
                                    388 	.globl _P3SR
                                    389 	.globl _P3NCS
                                    390 	.globl _P3PU
                                    391 	.globl _P3WKUE
                                    392 	.globl _P3IM1
                                    393 	.globl _P3IM0
                                    394 	.globl _P3INTF
                                    395 	.globl _P3INTE
                                    396 	.globl _P2IE
                                    397 	.globl _P2DR
                                    398 	.globl _P2SR
                                    399 	.globl _P2NCS
                                    400 	.globl _P2PU
                                    401 	.globl _P2WKUE
                                    402 	.globl _P2IM1
                                    403 	.globl _P2IM0
                                    404 	.globl _P2INTF
                                    405 	.globl _P2INTE
                                    406 	.globl _P1IE
                                    407 	.globl _P1DR
                                    408 	.globl _P1SR
                                    409 	.globl _P1NCS
                                    410 	.globl _P1PU
                                    411 	.globl _P1WKUE
                                    412 	.globl _P1IM1
                                    413 	.globl _P1IM0
                                    414 	.globl _P1INTF
                                    415 	.globl _P1INTE
                                    416 	.globl _DMA_M2M_RXAL
                                    417 	.globl _DMA_M2M_RXAH
                                    418 	.globl _DMA_M2M_TXAL
                                    419 	.globl _DMA_M2M_TXAH
                                    420 	.globl _DMA_M2M_DONE
                                    421 	.globl _DMA_M2M_AMT
                                    422 	.globl _DMA_M2M_STA
                                    423 	.globl _DMA_M2M_CR
                                    424 	.globl _DMA_M2M_CFG
                                    425 	.globl _CMPEXCFG
                                    426 	.globl _DMA_ADC_CHSW1
                                    427 	.globl _DMA_ADC_CHSW0
                                    428 	.globl _DMA_ADC_CFG2
                                    429 	.globl _DMA_ADC_RXAL
                                    430 	.globl _DMA_ADC_RXAH
                                    431 	.globl _DMA_ADC_STA
                                    432 	.globl _DMA_ADC_CR
                                    433 	.globl _DMA_ADC_CFG
                                    434 	.globl _ADCEXCFG
                                    435 	.globl _ADCTIM
                                    436 	.globl _SSD1306_Init
                                    437 	.globl _SSD1306_NormalScreen
                                    438 	.globl _SSD1306_InverseScreen
                                    439 	.globl _SSD1306_UpdateScreen
                                    440 	.globl _SSD1306_ClearScreen
                                    441 	.globl _SSD1306_SetPosition
                                    442 	.globl _SSD1306_UpdatePosition
                                    443 	.globl _SSD1306_DrawChar
                                    444 	.globl _SSD1306_DrawString
                                    445 	.globl _SSD1306_DrawPixel
                                    446 	.globl _SSD1306_DrawLine
                                    447 ;--------------------------------------------------------
                                    448 ; special function registers
                                    449 ;--------------------------------------------------------
                                    450 	.area RSEG    (ABS,DATA)
      000000                        451 	.org 0x0000
                           0000BC   452 _ADC_CONTR	=	0x00bc
                           0000BD   453 _ADC_RESH	=	0x00bd
                           0000BE   454 _ADC_RESL	=	0x00be
                           00BDBE   455 _ADC_RES	=	0xbdbe
                           0000DE   456 _ADCCFG	=	0x00de
                           0000FA   457 _DMA_ADC_AMT	=	0x00fa
                           0000E6   458 _CMPCR1	=	0x00e6
                           0000E7   459 _CMPCR2	=	0x00e7
                           000082   460 _DPL	=	0x0082
                           000083   461 _DPH	=	0x0083
                           008382   462 _DP	=	0x8382
                           0000E3   463 _DPS	=	0x00e3
                           0000E4   464 _DPL1	=	0x00e4
                           0000E5   465 _DPH1	=	0x00e5
                           0000AE   466 _TA	=	0x00ae
                           000090   467 _P1	=	0x0090
                           000091   468 _P1M1	=	0x0091
                           000092   469 _P1M0	=	0x0092
                           0000A0   470 _P2	=	0x00a0
                           000095   471 _P2M1	=	0x0095
                           000096   472 _P2M0	=	0x0096
                           0000B0   473 _P3	=	0x00b0
                           0000B1   474 _P3M1	=	0x00b1
                           0000B2   475 _P3M0	=	0x00b2
                           0000C8   476 _P5	=	0x00c8
                           0000C9   477 _P5M1	=	0x00c9
                           0000CA   478 _P5M0	=	0x00ca
                           0000C2   479 _IAP_DATA	=	0x00c2
                           0000C3   480 _IAP_ADDRH	=	0x00c3
                           0000C4   481 _IAP_ADDRL	=	0x00c4
                           00C3C4   482 _IAP_ADDR	=	0xc3c4
                           0000C5   483 _IAP_CMD	=	0x00c5
                           0000C6   484 _IAP_TRIG	=	0x00c6
                           0000C7   485 _IAP_CONTR	=	0x00c7
                           0000F5   486 _IAP_TPS	=	0x00f5
                           00008F   487 _INT_CLKO	=	0x008f
                           0000A8   488 _IE1	=	0x00a8
                           0000B8   489 _IP1L	=	0x00b8
                           0000B7   490 _IP1H	=	0x00b7
                           0000AF   491 _IE2	=	0x00af
                           0000B5   492 _IP2L	=	0x00b5
                           0000B6   493 _IP2H	=	0x00b6
                           0000DF   494 _IP3L	=	0x00df
                           0000EE   495 _IP3H	=	0x00ee
                           000081   496 _SP	=	0x0081
                           0000D0   497 _PSW	=	0x00d0
                           0000E0   498 _ACC	=	0x00e0
                           0000F0   499 _B	=	0x00f0
                           000087   500 _PCON	=	0x0087
                           0000FF   501 _RSTCFG	=	0x00ff
                           0000A2   502 _P_SW1	=	0x00a2
                           0000BA   503 _P_SW2	=	0x00ba
                           0000A1   504 _BUS_SPEED	=	0x00a1
                           0000AA   505 _WKTCL	=	0x00aa
                           0000AB   506 _WKTCH	=	0x00ab
                           00ABAA   507 _WKTC	=	0xabaa
                           0000CD   508 _SPSTAT	=	0x00cd
                           0000CE   509 _SPCTL	=	0x00ce
                           0000CF   510 _SPDAT	=	0x00cf
                           00009D   511 _IRCBAND	=	0x009d
                           00009E   512 _LIRTRIM	=	0x009e
                           00009F   513 _IRTRIM	=	0x009f
                           000088   514 _TCON	=	0x0088
                           000089   515 _TMOD	=	0x0089
                           00008A   516 _T0L	=	0x008a
                           00008C   517 _T0H	=	0x008c
                           008C8A   518 _T0	=	0x8c8a
                           00008B   519 _T1L	=	0x008b
                           00008D   520 _T1H	=	0x008d
                           008D8B   521 _T1	=	0x8d8b
                           0000D7   522 _T2L	=	0x00d7
                           0000D6   523 _T2H	=	0x00d6
                           00D6D7   524 _T2	=	0xd6d7
                           00008E   525 _AUXR	=	0x008e
                           0000C1   526 _WDT_CONTR	=	0x00c1
                           0000D1   527 _T4T3M	=	0x00d1
                           0000D2   528 _T4H	=	0x00d2
                           0000D3   529 _T4L	=	0x00d3
                           00D2D3   530 _T4	=	0xd2d3
                           0000D4   531 _T3H	=	0x00d4
                           0000D5   532 _T3L	=	0x00d5
                           00D4D5   533 _T3	=	0xd4d5
                           0000EF   534 _AUXINTIF	=	0x00ef
                           0000A9   535 _SADDR	=	0x00a9
                           0000B9   536 _SADEN	=	0x00b9
                           000098   537 _S1CON	=	0x0098
                           000099   538 _S1BUF	=	0x0099
                           00009A   539 _S2CON	=	0x009a
                           00009B   540 _S2BUF	=	0x009b
                           0000AC   541 _S3CON	=	0x00ac
                           0000AD   542 _S3BUF	=	0x00ad
                           000084   543 _S4CON	=	0x0084
                           000085   544 _S4BUF	=	0x0085
                           0000DC   545 _USBCLK	=	0x00dc
                           0000EC   546 _USBDAT	=	0x00ec
                           0000F4   547 _USBCON	=	0x00f4
                           0000FC   548 _USBADR	=	0x00fc
                                    549 ;--------------------------------------------------------
                                    550 ; special function bits
                                    551 ;--------------------------------------------------------
                                    552 	.area RSEG    (ABS,DATA)
      000000                        553 	.org 0x0000
                           000090   554 _P1_0	=	0x0090
                           000091   555 _P1_1	=	0x0091
                           000092   556 _P1_2	=	0x0092
                           000093   557 _P1_3	=	0x0093
                           000094   558 _P1_4	=	0x0094
                           000095   559 _P1_5	=	0x0095
                           000096   560 _P1_6	=	0x0096
                           000097   561 _P1_7	=	0x0097
                           0000A0   562 _P2_0	=	0x00a0
                           0000A1   563 _P2_1	=	0x00a1
                           0000A2   564 _P2_2	=	0x00a2
                           0000A3   565 _P2_3	=	0x00a3
                           0000A4   566 _P2_4	=	0x00a4
                           0000A5   567 _P2_5	=	0x00a5
                           0000A6   568 _P2_6	=	0x00a6
                           0000A7   569 _P2_7	=	0x00a7
                           0000B0   570 _P3_0	=	0x00b0
                           0000B1   571 _P3_1	=	0x00b1
                           0000B2   572 _P3_2	=	0x00b2
                           0000B3   573 _P3_3	=	0x00b3
                           0000B4   574 _P3_4	=	0x00b4
                           0000B5   575 _P3_5	=	0x00b5
                           0000B6   576 _P3_6	=	0x00b6
                           0000B7   577 _P3_7	=	0x00b7
                           0000C8   578 _P5_0	=	0x00c8
                           0000C9   579 _P5_1	=	0x00c9
                           0000CA   580 _P5_2	=	0x00ca
                           0000CB   581 _P5_3	=	0x00cb
                           0000CC   582 _P5_4	=	0x00cc
                           0000CD   583 _P5_5	=	0x00cd
                           000088   584 _INT0TR	=	0x0088
                           00008A   585 _INT1TR	=	0x008a
                           0000A8   586 _INT0IE	=	0x00a8
                           0000AA   587 _INT1IE	=	0x00aa
                           0000AF   588 _EA	=	0x00af
                           0000D0   589 _P	=	0x00d0
                           0000D1   590 _F1	=	0x00d1
                           0000D2   591 _OV	=	0x00d2
                           0000D3   592 _RS0	=	0x00d3
                           0000D4   593 _RS1	=	0x00d4
                           0000D5   594 _F0	=	0x00d5
                           0000D6   595 _AC	=	0x00d6
                           0000D7   596 _CY	=	0x00d7
                           00008C   597 _T0RUN	=	0x008c
                           00008E   598 _T1RUN	=	0x008e
                           0000A9   599 _T0IE	=	0x00a9
                           0000AB   600 _T1IE	=	0x00ab
                           00009F   601 _S1SM0_FE	=	0x009f
                                    602 ;--------------------------------------------------------
                                    603 ; overlayable register banks
                                    604 ;--------------------------------------------------------
                                    605 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        606 	.ds 8
                                    607 ;--------------------------------------------------------
                                    608 ; internal ram data
                                    609 ;--------------------------------------------------------
                                    610 	.area DSEG    (DATA)
      000000                        611 _SSD1306_DrawLine_sloc0_1_0:
      000000                        612 	.ds 2
      000002                        613 _SSD1306_DrawLine_sloc1_1_0:
      000002                        614 	.ds 1
      000003                        615 _SSD1306_DrawLine_sloc2_1_0:
      000003                        616 	.ds 2
      000005                        617 _SSD1306_DrawLine_sloc3_1_0:
      000005                        618 	.ds 2
      000007                        619 _SSD1306_DrawLine_sloc4_1_0:
      000007                        620 	.ds 1
      000008                        621 _SSD1306_DrawLine_sloc5_1_0:
      000008                        622 	.ds 2
      00000A                        623 _SSD1306_DrawLine_sloc6_1_0:
      00000A                        624 	.ds 2
                                    625 ;--------------------------------------------------------
                                    626 ; overlayable items in internal ram 
                                    627 ;--------------------------------------------------------
                                    628 ;--------------------------------------------------------
                                    629 ; indirectly addressable internal ram data
                                    630 ;--------------------------------------------------------
                                    631 	.area ISEG    (DATA)
                                    632 ;--------------------------------------------------------
                                    633 ; absolute internal ram data
                                    634 ;--------------------------------------------------------
                                    635 	.area IABS    (ABS,DATA)
                                    636 	.area IABS    (ABS,DATA)
                                    637 ;--------------------------------------------------------
                                    638 ; bit data
                                    639 ;--------------------------------------------------------
                                    640 	.area BSEG    (BIT)
                                    641 ;--------------------------------------------------------
                                    642 ; paged external ram data
                                    643 ;--------------------------------------------------------
                                    644 	.area PSEG    (PAG,XDATA)
                                    645 ;--------------------------------------------------------
                                    646 ; external ram data
                                    647 ;--------------------------------------------------------
                                    648 	.area XSEG    (XDATA)
                           00FEA8   649 _ADCTIM	=	0xfea8
                           00FEAD   650 _ADCEXCFG	=	0xfead
                           00FA10   651 _DMA_ADC_CFG	=	0xfa10
                           00FA11   652 _DMA_ADC_CR	=	0xfa11
                           00FA12   653 _DMA_ADC_STA	=	0xfa12
                           00FA17   654 _DMA_ADC_RXAH	=	0xfa17
                           00FA18   655 _DMA_ADC_RXAL	=	0xfa18
                           00FA19   656 _DMA_ADC_CFG2	=	0xfa19
                           00FA1A   657 _DMA_ADC_CHSW0	=	0xfa1a
                           00FA1B   658 _DMA_ADC_CHSW1	=	0xfa1b
                           00FEAE   659 _CMPEXCFG	=	0xfeae
                           00FA00   660 _DMA_M2M_CFG	=	0xfa00
                           00FA01   661 _DMA_M2M_CR	=	0xfa01
                           00FA02   662 _DMA_M2M_STA	=	0xfa02
                           00FA03   663 _DMA_M2M_AMT	=	0xfa03
                           00FA04   664 _DMA_M2M_DONE	=	0xfa04
                           00FA05   665 _DMA_M2M_TXAH	=	0xfa05
                           00FA06   666 _DMA_M2M_TXAL	=	0xfa06
                           00FA07   667 _DMA_M2M_RXAH	=	0xfa07
                           00FA08   668 _DMA_M2M_RXAL	=	0xfa08
                           00FD01   669 _P1INTE	=	0xfd01
                           00FD11   670 _P1INTF	=	0xfd11
                           00FD21   671 _P1IM0	=	0xfd21
                           00FD31   672 _P1IM1	=	0xfd31
                           00FD41   673 _P1WKUE	=	0xfd41
                           00FE11   674 _P1PU	=	0xfe11
                           00FE19   675 _P1NCS	=	0xfe19
                           00FE21   676 _P1SR	=	0xfe21
                           00FE29   677 _P1DR	=	0xfe29
                           00FE31   678 _P1IE	=	0xfe31
                           00FD02   679 _P2INTE	=	0xfd02
                           00FD12   680 _P2INTF	=	0xfd12
                           00FD22   681 _P2IM0	=	0xfd22
                           00FD32   682 _P2IM1	=	0xfd32
                           00FD42   683 _P2WKUE	=	0xfd42
                           00FE12   684 _P2PU	=	0xfe12
                           00FE1A   685 _P2NCS	=	0xfe1a
                           00FE22   686 _P2SR	=	0xfe22
                           00FE2A   687 _P2DR	=	0xfe2a
                           00FE32   688 _P2IE	=	0xfe32
                           00FD03   689 _P3INTE	=	0xfd03
                           00FD13   690 _P3INTF	=	0xfd13
                           00FD23   691 _P3IM0	=	0xfd23
                           00FD33   692 _P3IM1	=	0xfd33
                           00FD43   693 _P3WKUE	=	0xfd43
                           00FE13   694 _P3PU	=	0xfe13
                           00FE1B   695 _P3NCS	=	0xfe1b
                           00FE23   696 _P3SR	=	0xfe23
                           00FE2B   697 _P3DR	=	0xfe2b
                           00FE33   698 _P3IE	=	0xfe33
                           00FD05   699 _P5INTE	=	0xfd05
                           00FD15   700 _P5INTF	=	0xfd15
                           00FD25   701 _P5IM0	=	0xfd25
                           00FD35   702 _P5IM1	=	0xfd35
                           00FD45   703 _P5WKUE	=	0xfd45
                           00FE15   704 _P5PU	=	0xfe15
                           00FE1D   705 _P5NCS	=	0xfe1d
                           00FE25   706 _P5SR	=	0xfe25
                           00FE2D   707 _P5DR	=	0xfe2d
                           00FE35   708 _P5IE	=	0xfe35
                           00FD60   709 _PINIPL	=	0xfd60
                           00FD61   710 _PINIPH	=	0xfd61
                           00FE80   711 _I2CCFG	=	0xfe80
                           00FE81   712 _I2CMSCR	=	0xfe81
                           00FE82   713 _I2CMSST	=	0xfe82
                           00FE83   714 _I2CSLCR	=	0xfe83
                           00FE84   715 _I2CSLST	=	0xfe84
                           00FE85   716 _I2CSLADR	=	0xfe85
                           00FE86   717 _I2CTXD	=	0xfe86
                           00FE87   718 _I2CRXD	=	0xfe87
                           00FE88   719 _I2CMSAUX	=	0xfe88
                           00FE50   720 _LCMCFG	=	0xfe50
                           00FE51   721 _LCMCFG2	=	0xfe51
                           00FE52   722 _LCMCR	=	0xfe52
                           00FE53   723 _LCMSTA	=	0xfe53
                           00FE54   724 _LCMIDDATL	=	0xfe54
                           00FE55   725 _LCMIDDATH	=	0xfe55
                           00FE54   726 _LCMIDDAT	=	0xfe54
                           00FA70   727 _DMA_LCM_CFG	=	0xfa70
                           00FA71   728 _DMA_LCM_CR	=	0xfa71
                           00FA72   729 _DMA_LCM_STA	=	0xfa72
                           00FA73   730 _DMA_LCM_AMT	=	0xfa73
                           00FA74   731 _DMA_LCM_DONE	=	0xfa74
                           00FA75   732 _DMA_LCM_TXAH	=	0xfa75
                           00FA76   733 _DMA_LCM_TXAL	=	0xfa76
                           00FA77   734 _DMA_LCM_RXAH	=	0xfa77
                           00FA78   735 _DMA_LCM_RXAL	=	0xfa78
                           00FCF0   736 _MD3	=	0xfcf0
                           00FCF1   737 _MD2	=	0xfcf1
                           00FCF2   738 _MD1	=	0xfcf2
                           00FCF3   739 _MD0	=	0xfcf3
                           00FCF4   740 _MD5	=	0xfcf4
                           00FCF5   741 _MD4	=	0xfcf5
                           00FCF6   742 _ARCON	=	0xfcf6
                           00FCF7   743 _OPCON	=	0xfcf7
                           00FE08   744 _SPFUNC	=	0xfe08
                           00FE09   745 _RSTFLAG	=	0xfe09
                           00FEB0   746 _PWMA_ETRPS	=	0xfeb0
                           00FEB1   747 _PWMA_ENO	=	0xfeb1
                           00FEB2   748 _PWMA_PS	=	0xfeb2
                           00FEB3   749 _PWMA_IOAUX	=	0xfeb3
                           00FEB4   750 _PWMB_ETRPS	=	0xfeb4
                           00FEB5   751 _PWMB_ENO	=	0xfeb5
                           00FEB6   752 _PWMB_PS	=	0xfeb6
                           00FEB7   753 _PWMB_IOAUX	=	0xfeb7
                           00FEC0   754 _PWMA_CR1	=	0xfec0
                           00FEC1   755 _PWMA_CR2	=	0xfec1
                           00FEC2   756 _PWMA_SMCR	=	0xfec2
                           00FEC3   757 _PWMA_ETR	=	0xfec3
                           00FEC4   758 _PWMA_IER	=	0xfec4
                           00FEC5   759 _PWMA_SR1	=	0xfec5
                           00FEC6   760 _PWMA_SR2	=	0xfec6
                           00FEC7   761 _PWMA_EGR	=	0xfec7
                           00FEC8   762 _PWMA_CCMR1	=	0xfec8
                           00FEC9   763 _PWMA_CCMR2	=	0xfec9
                           00FECA   764 _PWMA_CCMR3	=	0xfeca
                           00FECB   765 _PWMA_CCMR4	=	0xfecb
                           00FECC   766 _PWMA_CCER1	=	0xfecc
                           00FECD   767 _PWMA_CCER2	=	0xfecd
                           00FECE   768 _PWMA_CNTRH	=	0xfece
                           00FECF   769 _PWMA_CNTRL	=	0xfecf
                           00FED0   770 _PWMA_PSCRH	=	0xfed0
                           00FED1   771 _PWMA_PSCRL	=	0xfed1
                           00FED2   772 _PWMA_ARRH	=	0xfed2
                           00FED3   773 _PWMA_ARRL	=	0xfed3
                           00FED4   774 _PWMA_RCR	=	0xfed4
                           00FED5   775 _PWMA_CCR1H	=	0xfed5
                           00FED6   776 _PWMA_CCR1L	=	0xfed6
                           00FED7   777 _PWMA_CCR2H	=	0xfed7
                           00FED8   778 _PWMA_CCR2L	=	0xfed8
                           00FED9   779 _PWMA_CCR3H	=	0xfed9
                           00FEDA   780 _PWMA_CCR3L	=	0xfeda
                           00FEDB   781 _PWMA_CCR4H	=	0xfedb
                           00FEDC   782 _PWMA_CCR4L	=	0xfedc
                           00FEDD   783 _PWMA_BKR	=	0xfedd
                           00FEDE   784 _PWMA_DTR	=	0xfede
                           00FEDF   785 _PWMA_OISR	=	0xfedf
                           00FEE0   786 _PWMB_CR1	=	0xfee0
                           00FEE1   787 _PWMB_CR2	=	0xfee1
                           00FEE2   788 _PWMB_SMCR	=	0xfee2
                           00FEE3   789 _PWMB_ETR	=	0xfee3
                           00FEE4   790 _PWMB_IER	=	0xfee4
                           00FEE5   791 _PWMB_SR1	=	0xfee5
                           00FEE6   792 _PWMB_SR2	=	0xfee6
                           00FEE7   793 _PWMB_EGR	=	0xfee7
                           00FEE8   794 _PWMB_CCMR1	=	0xfee8
                           00FEE9   795 _PWMB_CCMR2	=	0xfee9
                           00FEEA   796 _PWMB_CCMR3	=	0xfeea
                           00FEEB   797 _PWMB_CCMR4	=	0xfeeb
                           00FEEC   798 _PWMB_CCER1	=	0xfeec
                           00FEED   799 _PWMB_CCER2	=	0xfeed
                           00FEEE   800 _PWMB_CNTRH	=	0xfeee
                           00FEEF   801 _PWMB_CNTRL	=	0xfeef
                           00FEF0   802 _PWMB_PSCRH	=	0xfef0
                           00FEF1   803 _PWMB_PSCRL	=	0xfef1
                           00FEF2   804 _PWMB_ARRH	=	0xfef2
                           00FEF3   805 _PWMB_ARRL	=	0xfef3
                           00FEF4   806 _PWMB_RCR	=	0xfef4
                           00FEF5   807 _PWMB_CCR1H	=	0xfef5
                           00FEF6   808 _PWMB_CCR1L	=	0xfef6
                           00FEF7   809 _PWMB_CCR2H	=	0xfef7
                           00FEF8   810 _PWMB_CCR2L	=	0xfef8
                           00FEF9   811 _PWMB_CCR3H	=	0xfef9
                           00FEFA   812 _PWMB_CCR3L	=	0xfefa
                           00FEFB   813 _PWMB_CCR4H	=	0xfefb
                           00FEFC   814 _PWMB_CCR4L	=	0xfefc
                           00FEFD   815 _PWMB_BKR	=	0xfefd
                           00FEFE   816 _PWMB_DTR	=	0xfefe
                           00FEFF   817 _PWMB_OISR	=	0xfeff
                           00FE60   818 _RTCCR	=	0xfe60
                           00FE61   819 _RTCCFG	=	0xfe61
                           00FE62   820 _RTCIEN	=	0xfe62
                           00FE63   821 _RTCIF	=	0xfe63
                           00FE64   822 _ALAHOUR	=	0xfe64
                           00FE65   823 _ALAMIN	=	0xfe65
                           00FE66   824 _ALASEC	=	0xfe66
                           00FE67   825 _ALASSEC	=	0xfe67
                           00FE68   826 _INIYEAR	=	0xfe68
                           00FE69   827 _INIMONTH	=	0xfe69
                           00FE6A   828 _INIDAY	=	0xfe6a
                           00FE6B   829 _INIHOUR	=	0xfe6b
                           00FE6C   830 _INIMIN	=	0xfe6c
                           00FE6D   831 _INISEC	=	0xfe6d
                           00FE6E   832 _INISSEC	=	0xfe6e
                           00FE70   833 _YEAR	=	0xfe70
                           00FE71   834 _MONTH	=	0xfe71
                           00FE72   835 _DAY	=	0xfe72
                           00FE73   836 _HOUR	=	0xfe73
                           00FE74   837 _MIN	=	0xfe74
                           00FE75   838 _SEC	=	0xfe75
                           00FE76   839 _SSEC	=	0xfe76
                           00FA20   840 _DMA_SPI_CFG	=	0xfa20
                           00FA21   841 _DMA_SPI_CR	=	0xfa21
                           00FA22   842 _DMA_SPI_STA	=	0xfa22
                           00FA23   843 _DMA_SPI_AMT	=	0xfa23
                           00FA24   844 _DMA_SPI_DONE	=	0xfa24
                           00FA25   845 _DMA_SPI_TXAH	=	0xfa25
                           00FA26   846 _DMA_SPI_TXAL	=	0xfa26
                           00FA27   847 _DMA_SPI_RXAH	=	0xfa27
                           00FA28   848 _DMA_SPI_RXAL	=	0xfa28
                           00FA29   849 _DMA_SPI_CFG2	=	0xfa29
                           00FE01   850 _CLKDIV	=	0xfe01
                           00FE02   851 _HIRCCR	=	0xfe02
                           00FE03   852 _XOSCCR	=	0xfe03
                           00FE04   853 _IRC32KCR	=	0xfe04
                           00FE00   854 _CKSEL	=	0xfe00
                           00FE05   855 _MCLKOCR	=	0xfe05
                           00FE06   856 _IRCDB	=	0xfe06
                           00FE07   857 _IRC48MCR	=	0xfe07
                           00FEA2   858 _TM2PS	=	0xfea2
                           00FEA3   859 _TM3PS	=	0xfea3
                           00FEA4   860 _TM4PS	=	0xfea4
                           00FA30   861 _DMA_UR1T_CFG	=	0xfa30
                           00FA31   862 _DMA_UR1T_CR	=	0xfa31
                           00FA32   863 _DMA_UR1T_STA	=	0xfa32
                           00FA33   864 _DMA_URTX_AMT	=	0xfa33
                           00FA34   865 _DMA_UR1T_DONE	=	0xfa34
                           00FA35   866 _DMA_UR1T_TXAH	=	0xfa35
                           00FA36   867 _DMA_UR1T_TXAL	=	0xfa36
                           00FA38   868 _DMA_UR1R_CFG	=	0xfa38
                           00FA39   869 _DMA_UR1R_CR	=	0xfa39
                           00FA3A   870 _DMA_UR1R_STA	=	0xfa3a
                           00FA3B   871 _DMA_UR1R_AMT	=	0xfa3b
                           00FA3C   872 _DMA_UR1R_DONE	=	0xfa3c
                           00FA3D   873 _DMA_UR1R_TXAH	=	0xfa3d
                           00FA3E   874 _DMA_UR1R_TXAL	=	0xfa3e
                           00FA30   875 _DMA_UR2T_CFG	=	0xfa30
                           00FA31   876 _DMA_UR2T_CR	=	0xfa31
                           00FA32   877 _DMA_UR2T_STA	=	0xfa32
                           00FA33   878 _DMA_UR2T_AMT	=	0xfa33
                           00FA34   879 _DMA_UR2T_DONE	=	0xfa34
                           00FA35   880 _DMA_UR2T_TXAH	=	0xfa35
                           00FA36   881 _DMA_UR2T_TXAL	=	0xfa36
                           00FA38   882 _DMA_UR2R_CFG	=	0xfa38
                           00FA39   883 _DMA_UR2R_CR	=	0xfa39
                           00FA3A   884 _DMA_UR2R_STA	=	0xfa3a
                           00FA3B   885 _DMA_UR2R_AMT	=	0xfa3b
                           00FA3C   886 _DMA_UR2R_DONE	=	0xfa3c
                           00FA3D   887 _DMA_UR2R_TXAH	=	0xfa3d
                           00FA3E   888 _DMA_UR2R_TXAL	=	0xfa3e
                           00FA30   889 _DMA_UR3T_CFG	=	0xfa30
                           00FA31   890 _DMA_UR3T_CR	=	0xfa31
                           00FA32   891 _DMA_UR3T_STA	=	0xfa32
                           00FA33   892 _DMA_UR3T_AMT	=	0xfa33
                           00FA34   893 _DMA_UR3T_DONE	=	0xfa34
                           00FA35   894 _DMA_UR3T_TXAH	=	0xfa35
                           00FA36   895 _DMA_UR3T_TXAL	=	0xfa36
                           00FA38   896 _DMA_UR3R_CFG	=	0xfa38
                           00FA39   897 _DMA_UR3R_CR	=	0xfa39
                           00FA3A   898 _DMA_UR3R_STA	=	0xfa3a
                           00FA3B   899 _DMA_UR3R_AMT	=	0xfa3b
                           00FA3C   900 _DMA_UR3R_DONE	=	0xfa3c
                           00FA3D   901 _DMA_UR3R_TXAH	=	0xfa3d
                           00FA3E   902 _DMA_UR3R_TXAL	=	0xfa3e
                           00FA30   903 _DMA_UR4T_CFG	=	0xfa30
                           00FA31   904 _DMA_UR4T_CR	=	0xfa31
                           00FA32   905 _DMA_UR4T_STA	=	0xfa32
                           00FA33   906 _DMA_UR4T_AMT	=	0xfa33
                           00FA34   907 _DMA_UR4T_DONE	=	0xfa34
                           00FA35   908 _DMA_UR4T_TXAH	=	0xfa35
                           00FA36   909 _DMA_UR4T_TXAL	=	0xfa36
                           00FA38   910 _DMA_UR4R_CFG	=	0xfa38
                           00FA39   911 _DMA_UR4R_CR	=	0xfa39
                           00FA3A   912 _DMA_UR4R_STA	=	0xfa3a
                           00FA3B   913 _DMA_UR4R_AMT	=	0xfa3b
                           00FA3C   914 _DMA_UR4R_DONE	=	0xfa3c
                           00FA3D   915 _DMA_UR4R_TXAH	=	0xfa3d
                           00FA3E   916 _DMA_UR4R_TXAL	=	0xfa3e
      000000                        917 _uartGetCharacter_result_65536_69:
      000000                        918 	.ds 1
      000001                        919 __counter::
      000001                        920 	.ds 2
      000003                        921 _cacheMemLcd:
      000003                        922 	.ds 1024
      000403                        923 _SSD1306_Init_list_65537_150:
      000403                        924 	.ds 3
      000406                        925 _SSD1306_SetPosition_PARM_2:
      000406                        926 	.ds 1
      000407                        927 _SSD1306_SetPosition_x_65536_162:
      000407                        928 	.ds 1
      000408                        929 _SSD1306_DrawChar_character_65536_169:
      000408                        930 	.ds 1
      000409                        931 _SSD1306_DrawString_str_65536_173:
      000409                        932 	.ds 3
      00040C                        933 _SSD1306_DrawPixel_PARM_2:
      00040C                        934 	.ds 1
      00040D                        935 _SSD1306_DrawPixel_x_65536_176:
      00040D                        936 	.ds 1
      00040E                        937 _SSD1306_DrawLine_PARM_2:
      00040E                        938 	.ds 1
      00040F                        939 _SSD1306_DrawLine_PARM_3:
      00040F                        940 	.ds 1
      000410                        941 _SSD1306_DrawLine_PARM_4:
      000410                        942 	.ds 1
      000411                        943 _SSD1306_DrawLine_x1_65536_179:
      000411                        944 	.ds 1
      000412                        945 _SSD1306_DrawLine_D_65536_180:
      000412                        946 	.ds 2
      000414                        947 _SSD1306_DrawLine_delta_x_65536_180:
      000414                        948 	.ds 2
      000416                        949 _SSD1306_DrawLine_delta_y_65536_180:
      000416                        950 	.ds 2
      000418                        951 _SSD1306_DrawLine_trace_x_65536_180:
      000418                        952 	.ds 2
      00041A                        953 _SSD1306_DrawLine_trace_y_65536_180:
      00041A                        954 	.ds 2
                                    955 ;--------------------------------------------------------
                                    956 ; absolute external ram data
                                    957 ;--------------------------------------------------------
                                    958 	.area XABS    (ABS,XDATA)
                                    959 ;--------------------------------------------------------
                                    960 ; external initialized ram data
                                    961 ;--------------------------------------------------------
                                    962 	.area XISEG   (XDATA)
                                    963 	.area HOME    (CODE)
                                    964 	.area GSINIT0 (CODE)
                                    965 	.area GSINIT1 (CODE)
                                    966 	.area GSINIT2 (CODE)
                                    967 	.area GSINIT3 (CODE)
                                    968 	.area GSINIT4 (CODE)
                                    969 	.area GSINIT5 (CODE)
                                    970 	.area GSINIT  (CODE)
                                    971 	.area GSFINAL (CODE)
                                    972 	.area CSEG    (CODE)
                                    973 ;--------------------------------------------------------
                                    974 ; global & static initialisations
                                    975 ;--------------------------------------------------------
                                    976 	.area HOME    (CODE)
                                    977 	.area GSINIT  (CODE)
                                    978 	.area GSFINAL (CODE)
                                    979 	.area GSINIT  (CODE)
                                    980 ;--------------------------------------------------------
                                    981 ; Home
                                    982 ;--------------------------------------------------------
                                    983 	.area HOME    (CODE)
                                    984 	.area HOME    (CODE)
                                    985 ;--------------------------------------------------------
                                    986 ; code
                                    987 ;--------------------------------------------------------
                                    988 	.area CSEG    (CODE)
                                    989 ;------------------------------------------------------------
                                    990 ;Allocation info for local variables in function 'SSD1306_Init'
                                    991 ;------------------------------------------------------------
                                    992 ;list                      Allocated with name '_SSD1306_Init_list_65537_150'
                                    993 ;arguments                 Allocated with name '_SSD1306_Init_arguments_65537_150'
                                    994 ;commands                  Allocated with name '_SSD1306_Init_commands_65537_150'
                                    995 ;------------------------------------------------------------
                                    996 ;	ssd1306.c:37: void SSD1306_Init(void) { 
                                    997 ;	-----------------------------------------
                                    998 ;	 function SSD1306_Init
                                    999 ;	-----------------------------------------
      000000                       1000 _SSD1306_Init:
                           000007  1001 	ar7 = 0x07
                           000006  1002 	ar6 = 0x06
                           000005  1003 	ar5 = 0x05
                           000004  1004 	ar4 = 0x04
                           000003  1005 	ar3 = 0x03
                           000002  1006 	ar2 = 0x02
                           000001  1007 	ar1 = 0x01
                           000000  1008 	ar0 = 0x00
                                   1009 ;	ssd1306.c:40: i2cInitialiseMaster(0, I2C_CLOCK_400kHz);
      000000 90r00r00         [24] 1010 	mov	dptr,#_i2cInitialiseMaster_PARM_2
      000003 74 80            [12] 1011 	mov	a,#0x80
      000005 F0               [24] 1012 	movx	@dptr,a
      000006 74 1A            [12] 1013 	mov	a,#0x1a
      000008 A3               [24] 1014 	inc	dptr
      000009 F0               [24] 1015 	movx	@dptr,a
      00000A 74 06            [12] 1016 	mov	a,#0x06
      00000C A3               [24] 1017 	inc	dptr
      00000D F0               [24] 1018 	movx	@dptr,a
      00000E E4               [12] 1019 	clr	a
      00000F A3               [24] 1020 	inc	dptr
      000010 F0               [24] 1021 	movx	@dptr,a
      000011 75 82 00         [24] 1022 	mov	dpl,#0x00
      000014 12r00r00         [24] 1023 	lcall	_i2cInitialiseMaster
                                   1024 ;	ssd1306.c:49: const uint8_t * list = INIT_SSD1306;
                                   1025 ;	ssd1306.c:51: uint8_t commands = *list++;
      000017 90r01rE0         [24] 1026 	mov	dptr,#_INIT_SSD1306
      00001A E4               [12] 1027 	clr	a
      00001B 93               [24] 1028 	movc	a,@a+dptr
      00001C FF               [12] 1029 	mov	r7,a
      00001D 90r04r03         [24] 1030 	mov	dptr,#_SSD1306_Init_list_65537_150
      000020 74 01            [12] 1031 	mov	a,#0x01
      000022 24rE0            [12] 1032 	add	a,#_INIT_SSD1306
      000024 F0               [24] 1033 	movx	@dptr,a
      000025 E4               [12] 1034 	clr	a
      000026 34s01            [12] 1035 	addc	a,#(_INIT_SSD1306 >> 8)
      000028 A3               [24] 1036 	inc	dptr
      000029 F0               [24] 1037 	movx	@dptr,a
      00002A 74 80            [12] 1038 	mov	a,#0x80
      00002C A3               [24] 1039 	inc	dptr
      00002D F0               [24] 1040 	movx	@dptr,a
                                   1041 ;	ssd1306.c:54: i2cStartCommand(SSD1306_ADDRESS, I2C_WRITE);
      00002E 90r00r00         [24] 1042 	mov	dptr,#_i2cStartCommand_PARM_2
      000031 E4               [12] 1043 	clr	a
      000032 F0               [24] 1044 	movx	@dptr,a
      000033 75 82 3C         [24] 1045 	mov	dpl,#0x3c
      000036 C0 07            [24] 1046 	push	ar7
      000038 12r00r00         [24] 1047 	lcall	_i2cStartCommand
      00003B D0 07            [24] 1048 	pop	ar7
                                   1049 ;	ssd1306.c:55: while (commands--) {
      00003D                       1050 00104$:
      00003D 8F 06            [24] 1051 	mov	ar6,r7
      00003F 1F               [12] 1052 	dec	r7
      000040 EE               [12] 1053 	mov	a,r6
      000041 70 03            [24] 1054 	jnz	00126$
      000043 02r00r00         [24] 1055 	ljmp	_i2cStop
      000046                       1056 00126$:
                                   1057 ;	ssd1306.c:56: i2cSendByte(SSD1306_COMMAND);
      000046 75 82 80         [24] 1058 	mov	dpl,#0x80
      000049 C0 07            [24] 1059 	push	ar7
      00004B 12r00r00         [24] 1060 	lcall	_i2cSendByte
                                   1061 ;	ssd1306.c:57: i2cSendByte(*list++);
      00004E 90r04r03         [24] 1062 	mov	dptr,#_SSD1306_Init_list_65537_150
      000051 E0               [24] 1063 	movx	a,@dptr
      000052 FC               [12] 1064 	mov	r4,a
      000053 A3               [24] 1065 	inc	dptr
      000054 E0               [24] 1066 	movx	a,@dptr
      000055 FD               [12] 1067 	mov	r5,a
      000056 A3               [24] 1068 	inc	dptr
      000057 E0               [24] 1069 	movx	a,@dptr
      000058 FE               [12] 1070 	mov	r6,a
      000059 8C 82            [24] 1071 	mov	dpl,r4
      00005B 8D 83            [24] 1072 	mov	dph,r5
      00005D 8E F0            [24] 1073 	mov	b,r6
      00005F 12r00r00         [24] 1074 	lcall	__gptrget
      000062 FB               [12] 1075 	mov	r3,a
      000063 90r04r03         [24] 1076 	mov	dptr,#_SSD1306_Init_list_65537_150
      000066 74 01            [12] 1077 	mov	a,#0x01
      000068 2C               [12] 1078 	add	a,r4
      000069 F0               [24] 1079 	movx	@dptr,a
      00006A E4               [12] 1080 	clr	a
      00006B 3D               [12] 1081 	addc	a,r5
      00006C A3               [24] 1082 	inc	dptr
      00006D F0               [24] 1083 	movx	@dptr,a
      00006E EE               [12] 1084 	mov	a,r6
      00006F A3               [24] 1085 	inc	dptr
      000070 F0               [24] 1086 	movx	@dptr,a
      000071 8B 82            [24] 1087 	mov	dpl,r3
      000073 12r00r00         [24] 1088 	lcall	_i2cSendByte
      000076 D0 07            [24] 1089 	pop	ar7
                                   1090 ;	ssd1306.c:58: arguments = *list++;
      000078 90r04r03         [24] 1091 	mov	dptr,#_SSD1306_Init_list_65537_150
      00007B E0               [24] 1092 	movx	a,@dptr
      00007C FC               [12] 1093 	mov	r4,a
      00007D A3               [24] 1094 	inc	dptr
      00007E E0               [24] 1095 	movx	a,@dptr
      00007F FD               [12] 1096 	mov	r5,a
      000080 A3               [24] 1097 	inc	dptr
      000081 E0               [24] 1098 	movx	a,@dptr
      000082 FE               [12] 1099 	mov	r6,a
      000083 8C 82            [24] 1100 	mov	dpl,r4
      000085 8D 83            [24] 1101 	mov	dph,r5
      000087 8E F0            [24] 1102 	mov	b,r6
      000089 12r00r00         [24] 1103 	lcall	__gptrget
      00008C FB               [12] 1104 	mov	r3,a
      00008D 90r04r03         [24] 1105 	mov	dptr,#_SSD1306_Init_list_65537_150
      000090 74 01            [12] 1106 	mov	a,#0x01
      000092 2C               [12] 1107 	add	a,r4
      000093 F0               [24] 1108 	movx	@dptr,a
      000094 E4               [12] 1109 	clr	a
      000095 3D               [12] 1110 	addc	a,r5
      000096 A3               [24] 1111 	inc	dptr
      000097 F0               [24] 1112 	movx	@dptr,a
      000098 EE               [12] 1113 	mov	a,r6
      000099 A3               [24] 1114 	inc	dptr
      00009A F0               [24] 1115 	movx	@dptr,a
                                   1116 ;	ssd1306.c:59: while (arguments--) {
      00009B 90r04r03         [24] 1117 	mov	dptr,#_SSD1306_Init_list_65537_150
      00009E E0               [24] 1118 	movx	a,@dptr
      00009F FC               [12] 1119 	mov	r4,a
      0000A0 A3               [24] 1120 	inc	dptr
      0000A1 E0               [24] 1121 	movx	a,@dptr
      0000A2 FD               [12] 1122 	mov	r5,a
      0000A3 A3               [24] 1123 	inc	dptr
      0000A4 E0               [24] 1124 	movx	a,@dptr
      0000A5 FE               [12] 1125 	mov	r6,a
      0000A6                       1126 00101$:
      0000A6 8B 02            [24] 1127 	mov	ar2,r3
      0000A8 1B               [12] 1128 	dec	r3
      0000A9 EA               [12] 1129 	mov	a,r2
      0000AA 60 91            [24] 1130 	jz	00104$
                                   1131 ;	ssd1306.c:60: i2cSendByte(SSD1306_COMMAND);
      0000AC 75 82 80         [24] 1132 	mov	dpl,#0x80
      0000AF C0 07            [24] 1133 	push	ar7
      0000B1 C0 06            [24] 1134 	push	ar6
      0000B3 C0 05            [24] 1135 	push	ar5
      0000B5 C0 04            [24] 1136 	push	ar4
      0000B7 C0 03            [24] 1137 	push	ar3
      0000B9 12r00r00         [24] 1138 	lcall	_i2cSendByte
      0000BC D0 03            [24] 1139 	pop	ar3
      0000BE D0 04            [24] 1140 	pop	ar4
      0000C0 D0 05            [24] 1141 	pop	ar5
      0000C2 D0 06            [24] 1142 	pop	ar6
                                   1143 ;	ssd1306.c:61: i2cSendByte(*list++); // argument
      0000C4 8C 82            [24] 1144 	mov	dpl,r4
      0000C6 8D 83            [24] 1145 	mov	dph,r5
      0000C8 8E F0            [24] 1146 	mov	b,r6
      0000CA 12r00r00         [24] 1147 	lcall	__gptrget
      0000CD FA               [12] 1148 	mov	r2,a
      0000CE A3               [24] 1149 	inc	dptr
      0000CF AC 82            [24] 1150 	mov	r4,dpl
      0000D1 AD 83            [24] 1151 	mov	r5,dph
      0000D3 90r04r03         [24] 1152 	mov	dptr,#_SSD1306_Init_list_65537_150
      0000D6 EC               [12] 1153 	mov	a,r4
      0000D7 F0               [24] 1154 	movx	@dptr,a
      0000D8 ED               [12] 1155 	mov	a,r5
      0000D9 A3               [24] 1156 	inc	dptr
      0000DA F0               [24] 1157 	movx	@dptr,a
      0000DB EE               [12] 1158 	mov	a,r6
      0000DC A3               [24] 1159 	inc	dptr
      0000DD F0               [24] 1160 	movx	@dptr,a
      0000DE 8A 82            [24] 1161 	mov	dpl,r2
      0000E0 C0 06            [24] 1162 	push	ar6
      0000E2 C0 05            [24] 1163 	push	ar5
      0000E4 C0 04            [24] 1164 	push	ar4
      0000E6 C0 03            [24] 1165 	push	ar3
      0000E8 12r00r00         [24] 1166 	lcall	_i2cSendByte
      0000EB D0 03            [24] 1167 	pop	ar3
      0000ED D0 04            [24] 1168 	pop	ar4
      0000EF D0 05            [24] 1169 	pop	ar5
      0000F1 D0 06            [24] 1170 	pop	ar6
      0000F3 D0 07            [24] 1171 	pop	ar7
                                   1172 ;	ssd1306.c:65: i2cStop();
                                   1173 ;	ssd1306.c:67: }
      0000F5 80 AF            [24] 1174 	sjmp	00101$
                                   1175 ;------------------------------------------------------------
                                   1176 ;Allocation info for local variables in function 'SSD1306_NormalScreen'
                                   1177 ;------------------------------------------------------------
                                   1178 ;	ssd1306.c:69: void SSD1306_NormalScreen(void) {
                                   1179 ;	-----------------------------------------
                                   1180 ;	 function SSD1306_NormalScreen
                                   1181 ;	-----------------------------------------
      0000F7                       1182 _SSD1306_NormalScreen:
                                   1183 ;	ssd1306.c:70: i2cStartCommand(SSD1306_ADDRESS, I2C_WRITE);
      0000F7 90r00r00         [24] 1184 	mov	dptr,#_i2cStartCommand_PARM_2
      0000FA E4               [12] 1185 	clr	a
      0000FB F0               [24] 1186 	movx	@dptr,a
      0000FC 75 82 3C         [24] 1187 	mov	dpl,#0x3c
      0000FF 12r00r00         [24] 1188 	lcall	_i2cStartCommand
                                   1189 ;	ssd1306.c:71: i2cSendByte(SSD1306_COMMAND);
      000102 75 82 80         [24] 1190 	mov	dpl,#0x80
      000105 12r00r00         [24] 1191 	lcall	_i2cSendByte
                                   1192 ;	ssd1306.c:72: i2cSendByte(SSD1306_DIS_NORMAL);
      000108 75 82 A6         [24] 1193 	mov	dpl,#0xa6
      00010B 12r00r00         [24] 1194 	lcall	_i2cSendByte
                                   1195 ;	ssd1306.c:73: i2cStop();
                                   1196 ;	ssd1306.c:74: }
      00010E 02r00r00         [24] 1197 	ljmp	_i2cStop
                                   1198 ;------------------------------------------------------------
                                   1199 ;Allocation info for local variables in function 'SSD1306_InverseScreen'
                                   1200 ;------------------------------------------------------------
                                   1201 ;	ssd1306.c:76: void SSD1306_InverseScreen(void) {
                                   1202 ;	-----------------------------------------
                                   1203 ;	 function SSD1306_InverseScreen
                                   1204 ;	-----------------------------------------
      000111                       1205 _SSD1306_InverseScreen:
                                   1206 ;	ssd1306.c:78: i2cStartCommand(SSD1306_ADDRESS, I2C_WRITE);
      000111 90r00r00         [24] 1207 	mov	dptr,#_i2cStartCommand_PARM_2
      000114 E4               [12] 1208 	clr	a
      000115 F0               [24] 1209 	movx	@dptr,a
      000116 75 82 3C         [24] 1210 	mov	dpl,#0x3c
      000119 12r00r00         [24] 1211 	lcall	_i2cStartCommand
                                   1212 ;	ssd1306.c:79: i2cSendByte(SSD1306_COMMAND);
      00011C 75 82 80         [24] 1213 	mov	dpl,#0x80
      00011F 12r00r00         [24] 1214 	lcall	_i2cSendByte
                                   1215 ;	ssd1306.c:80: i2cSendByte(SSD1306_DIS_INVERSE);
      000122 75 82 A7         [24] 1216 	mov	dpl,#0xa7
      000125 12r00r00         [24] 1217 	lcall	_i2cSendByte
                                   1218 ;	ssd1306.c:81: i2cStop();
                                   1219 ;	ssd1306.c:83: }
      000128 02r00r00         [24] 1220 	ljmp	_i2cStop
                                   1221 ;------------------------------------------------------------
                                   1222 ;Allocation info for local variables in function 'SSD1306_UpdateScreen'
                                   1223 ;------------------------------------------------------------
                                   1224 ;i                         Allocated with name '_SSD1306_UpdateScreen_i_65536_158'
                                   1225 ;------------------------------------------------------------
                                   1226 ;	ssd1306.c:85: uint8_t SSD1306_UpdateScreen(void) {
                                   1227 ;	-----------------------------------------
                                   1228 ;	 function SSD1306_UpdateScreen
                                   1229 ;	-----------------------------------------
      00012B                       1230 _SSD1306_UpdateScreen:
                                   1231 ;	ssd1306.c:88: i2cStartCommand(SSD1306_ADDRESS, I2C_WRITE);
      00012B 90r00r00         [24] 1232 	mov	dptr,#_i2cStartCommand_PARM_2
      00012E E4               [12] 1233 	clr	a
      00012F F0               [24] 1234 	movx	@dptr,a
      000130 75 82 3C         [24] 1235 	mov	dpl,#0x3c
      000133 12r00r00         [24] 1236 	lcall	_i2cStartCommand
                                   1237 ;	ssd1306.c:89: i2cSendByte(SSD1306_DATA_STREAM);
      000136 75 82 40         [24] 1238 	mov	dpl,#0x40
      000139 12r00r00         [24] 1239 	lcall	_i2cSendByte
                                   1240 ;	ssd1306.c:90: while (i < CACHE_SIZE_MEM) {
      00013C 7E 00            [12] 1241 	mov	r6,#0x00
      00013E 7F 00            [12] 1242 	mov	r7,#0x00
      000140                       1243 00101$:
      000140 8E 04            [24] 1244 	mov	ar4,r6
      000142 8F 05            [24] 1245 	mov	ar5,r7
      000144 74 FC            [12] 1246 	mov	a,#0x100 - 0x04
      000146 2D               [12] 1247 	add	a,r5
      000147 40 1F            [24] 1248 	jc	00103$
                                   1249 ;	ssd1306.c:91: i2cSendByte(cacheMemLcd[i++]);  // send data
      000149 EE               [12] 1250 	mov	a,r6
      00014A 24r03            [12] 1251 	add	a,#_cacheMemLcd
      00014C F5 82            [12] 1252 	mov	dpl,a
      00014E EF               [12] 1253 	mov	a,r7
      00014F 34s00            [12] 1254 	addc	a,#(_cacheMemLcd >> 8)
      000151 F5 83            [12] 1255 	mov	dph,a
      000153 0E               [12] 1256 	inc	r6
      000154 BE 00 01         [24] 1257 	cjne	r6,#0x00,00116$
      000157 0F               [12] 1258 	inc	r7
      000158                       1259 00116$:
      000158 E0               [24] 1260 	movx	a,@dptr
      000159 F5 82            [12] 1261 	mov	dpl,a
      00015B C0 07            [24] 1262 	push	ar7
      00015D C0 06            [24] 1263 	push	ar6
      00015F 12r00r00         [24] 1264 	lcall	_i2cSendByte
      000162 D0 06            [24] 1265 	pop	ar6
      000164 D0 07            [24] 1266 	pop	ar7
      000166 80 D8            [24] 1267 	sjmp	00101$
      000168                       1268 00103$:
                                   1269 ;	ssd1306.c:93: i2cStop();
      000168 12r00r00         [24] 1270 	lcall	_i2cStop
                                   1271 ;	ssd1306.c:95: return SSD1306_SUCCESS;
      00016B 75 82 00         [24] 1272 	mov	dpl,#0x00
                                   1273 ;	ssd1306.c:96: }
      00016E 22               [24] 1274 	ret
                                   1275 ;------------------------------------------------------------
                                   1276 ;Allocation info for local variables in function 'SSD1306_ClearScreen'
                                   1277 ;------------------------------------------------------------
                                   1278 ;	ssd1306.c:98: void SSD1306_ClearScreen(void) {
                                   1279 ;	-----------------------------------------
                                   1280 ;	 function SSD1306_ClearScreen
                                   1281 ;	-----------------------------------------
      00016F                       1282 _SSD1306_ClearScreen:
                                   1283 ;	ssd1306.c:99: memset (cacheMemLcd, 0x00, CACHE_SIZE_MEM);                     // null cache memory lcd
      00016F 90r00r00         [24] 1284 	mov	dptr,#_memset_PARM_2
      000172 E4               [12] 1285 	clr	a
      000173 F0               [24] 1286 	movx	@dptr,a
      000174 90r00r00         [24] 1287 	mov	dptr,#_memset_PARM_3
      000177 F0               [24] 1288 	movx	@dptr,a
      000178 74 04            [12] 1289 	mov	a,#0x04
      00017A A3               [24] 1290 	inc	dptr
      00017B F0               [24] 1291 	movx	@dptr,a
      00017C 90r00r03         [24] 1292 	mov	dptr,#_cacheMemLcd
      00017F 75 F0 00         [24] 1293 	mov	b,#0x00
                                   1294 ;	ssd1306.c:100: }
      000182 02r00r00         [24] 1295 	ljmp	_memset
                                   1296 ;------------------------------------------------------------
                                   1297 ;Allocation info for local variables in function 'SSD1306_SetPosition'
                                   1298 ;------------------------------------------------------------
                                   1299 ;y                         Allocated with name '_SSD1306_SetPosition_PARM_2'
                                   1300 ;x                         Allocated with name '_SSD1306_SetPosition_x_65536_162'
                                   1301 ;------------------------------------------------------------
                                   1302 ;	ssd1306.c:102: void SSD1306_SetPosition(uint8_t x, uint8_t y) {
                                   1303 ;	-----------------------------------------
                                   1304 ;	 function SSD1306_SetPosition
                                   1305 ;	-----------------------------------------
      000185                       1306 _SSD1306_SetPosition:
      000185 E5 82            [12] 1307 	mov	a,dpl
      000187 90r04r07         [24] 1308 	mov	dptr,#_SSD1306_SetPosition_x_65536_162
      00018A F0               [24] 1309 	movx	@dptr,a
                                   1310 ;	ssd1306.c:103: _counter = x + (y << 7);                                        // update counter
      00018B E0               [24] 1311 	movx	a,@dptr
      00018C FF               [12] 1312 	mov	r7,a
      00018D 7E 00            [12] 1313 	mov	r6,#0x00
      00018F 90r04r06         [24] 1314 	mov	dptr,#_SSD1306_SetPosition_PARM_2
      000192 E0               [24] 1315 	movx	a,@dptr
      000193 FD               [12] 1316 	mov	r5,a
      000194 E4               [12] 1317 	clr	a
      000195 54 01            [12] 1318 	anl	a,#0x01
      000197 A2 E0            [12] 1319 	mov	c,acc.0
      000199 CD               [12] 1320 	xch	a,r5
      00019A 13               [12] 1321 	rrc	a
      00019B CD               [12] 1322 	xch	a,r5
      00019C 13               [12] 1323 	rrc	a
      00019D CD               [12] 1324 	xch	a,r5
      00019E FC               [12] 1325 	mov	r4,a
      00019F 90r00r01         [24] 1326 	mov	dptr,#__counter
      0001A2 ED               [12] 1327 	mov	a,r5
      0001A3 2F               [12] 1328 	add	a,r7
      0001A4 F0               [24] 1329 	movx	@dptr,a
      0001A5 EC               [12] 1330 	mov	a,r4
      0001A6 3E               [12] 1331 	addc	a,r6
      0001A7 A3               [24] 1332 	inc	dptr
      0001A8 F0               [24] 1333 	movx	@dptr,a
                                   1334 ;	ssd1306.c:104: }
      0001A9 22               [24] 1335 	ret
                                   1336 ;------------------------------------------------------------
                                   1337 ;Allocation info for local variables in function 'SSD1306_UpdatePosition'
                                   1338 ;------------------------------------------------------------
                                   1339 ;y                         Allocated with name '_SSD1306_UpdatePosition_y_65536_165'
                                   1340 ;x                         Allocated with name '_SSD1306_UpdatePosition_x_65536_165'
                                   1341 ;x_new                     Allocated with name '_SSD1306_UpdatePosition_x_new_65536_165'
                                   1342 ;------------------------------------------------------------
                                   1343 ;	ssd1306.c:106: uint8_t SSD1306_UpdatePosition(void) {
                                   1344 ;	-----------------------------------------
                                   1345 ;	 function SSD1306_UpdatePosition
                                   1346 ;	-----------------------------------------
      0001AA                       1347 _SSD1306_UpdatePosition:
                                   1348 ;	ssd1306.c:107: uint8_t y = _counter >> 7;                                      // y / 8
      0001AA 90r00r01         [24] 1349 	mov	dptr,#__counter
      0001AD E0               [24] 1350 	movx	a,@dptr
      0001AE FE               [12] 1351 	mov	r6,a
      0001AF A3               [24] 1352 	inc	dptr
      0001B0 E0               [24] 1353 	movx	a,@dptr
      0001B1 8E 04            [24] 1354 	mov	ar4,r6
      0001B3 A2 E7            [12] 1355 	mov	c,acc.7
      0001B5 CC               [12] 1356 	xch	a,r4
      0001B6 33               [12] 1357 	rlc	a
      0001B7 CC               [12] 1358 	xch	a,r4
      0001B8 33               [12] 1359 	rlc	a
      0001B9 CC               [12] 1360 	xch	a,r4
      0001BA 54 01            [12] 1361 	anl	a,#0x01
                                   1362 ;	ssd1306.c:108: uint8_t x = _counter - (y << 7);                                // y % 8
      0001BC 8C 07            [24] 1363 	mov	ar7,r4
      0001BE EF               [12] 1364 	mov	a,r7
      0001BF 03               [12] 1365 	rr	a
      0001C0 54 80            [12] 1366 	anl	a,#0x80
      0001C2 FF               [12] 1367 	mov	r7,a
      0001C3 EE               [12] 1368 	mov	a,r6
      0001C4 C3               [12] 1369 	clr	c
      0001C5 9F               [12] 1370 	subb	a,r7
                                   1371 ;	ssd1306.c:109: uint8_t x_new = x + CHARS_COLS_LENGTH + 1;                      // x + character length + 1
                                   1372 ;	ssd1306.c:111: if (x_new > END_COLUMN_ADDR) {                                  // check position
      0001C6 24 06            [12] 1373 	add	a,#0x06
      0001C8 24 80            [12] 1374 	add	a,#0xff - 0x7f
      0001CA 50 1F            [24] 1375 	jnc	00107$
                                   1376 ;	ssd1306.c:112: if (y > END_PAGE_ADDR) {                                      // if more than allowable number of pages
      0001CC EC               [12] 1377 	mov	a,r4
      0001CD 24 F8            [12] 1378 	add	a,#0xff - 0x07
      0001CF 50 04            [24] 1379 	jnc	00104$
                                   1380 ;	ssd1306.c:113: return SSD1306_ERROR;                                       // return out of range
      0001D1 75 82 01         [24] 1381 	mov	dpl,#0x01
      0001D4 22               [24] 1382 	ret
      0001D5                       1383 00104$:
                                   1384 ;	ssd1306.c:114: } else if (y < (END_PAGE_ADDR-1)) {                           // if x reach the end but page in range
      0001D5 BC 06 00         [24] 1385 	cjne	r4,#0x06,00124$
      0001D8                       1386 00124$:
      0001D8 50 11            [24] 1387 	jnc	00107$
                                   1388 ;	ssd1306.c:115: _counter = ((++y) << 7);                                    // update
      0001DA 0C               [12] 1389 	inc	r4
      0001DB E4               [12] 1390 	clr	a
      0001DC C3               [12] 1391 	clr	c
      0001DD CC               [12] 1392 	xch	a,r4
      0001DE 13               [12] 1393 	rrc	a
      0001DF CC               [12] 1394 	xch	a,r4
      0001E0 13               [12] 1395 	rrc	a
      0001E1 CC               [12] 1396 	xch	a,r4
      0001E2 FF               [12] 1397 	mov	r7,a
      0001E3 90r00r01         [24] 1398 	mov	dptr,#__counter
      0001E6 EC               [12] 1399 	mov	a,r4
      0001E7 F0               [24] 1400 	movx	@dptr,a
      0001E8 EF               [12] 1401 	mov	a,r7
      0001E9 A3               [24] 1402 	inc	dptr
      0001EA F0               [24] 1403 	movx	@dptr,a
      0001EB                       1404 00107$:
                                   1405 ;	ssd1306.c:119: return SSD1306_SUCCESS;
      0001EB 75 82 00         [24] 1406 	mov	dpl,#0x00
                                   1407 ;	ssd1306.c:120: }
      0001EE 22               [24] 1408 	ret
                                   1409 ;------------------------------------------------------------
                                   1410 ;Allocation info for local variables in function 'SSD1306_DrawChar'
                                   1411 ;------------------------------------------------------------
                                   1412 ;character                 Allocated with name '_SSD1306_DrawChar_character_65536_169'
                                   1413 ;i                         Allocated with name '_SSD1306_DrawChar_i_65536_170'
                                   1414 ;------------------------------------------------------------
                                   1415 ;	ssd1306.c:122: uint8_t SSD1306_DrawChar(char character) {
                                   1416 ;	-----------------------------------------
                                   1417 ;	 function SSD1306_DrawChar
                                   1418 ;	-----------------------------------------
      0001EF                       1419 _SSD1306_DrawChar:
      0001EF E5 82            [12] 1420 	mov	a,dpl
      0001F1 90r04r08         [24] 1421 	mov	dptr,#_SSD1306_DrawChar_character_65536_169
      0001F4 F0               [24] 1422 	movx	@dptr,a
                                   1423 ;	ssd1306.c:125: if (SSD1306_UpdatePosition () == SSD1306_ERROR) {
      0001F5 12r01rAA         [24] 1424 	lcall	_SSD1306_UpdatePosition
      0001F8 AF 82            [24] 1425 	mov	r7,dpl
      0001FA BF 01 04         [24] 1426 	cjne	r7,#0x01,00110$
                                   1427 ;	ssd1306.c:126: return SSD1306_ERROR;
      0001FD 75 82 01         [24] 1428 	mov	dpl,#0x01
      000200 22               [24] 1429 	ret
                                   1430 ;	ssd1306.c:128: while (i < CHARS_COLS_LENGTH) {
      000201                       1431 00110$:
      000201 90r04r08         [24] 1432 	mov	dptr,#_SSD1306_DrawChar_character_65536_169
      000204 E0               [24] 1433 	movx	a,@dptr
      000205 FF               [12] 1434 	mov	r7,a
      000206 7E 00            [12] 1435 	mov	r6,#0x00
      000208                       1436 00103$:
      000208 BE 05 00         [24] 1437 	cjne	r6,#0x05,00123$
      00020B                       1438 00123$:
      00020B 50 66            [24] 1439 	jnc	00105$
                                   1440 ;	ssd1306.c:129: cacheMemLcd[_counter++] = FONTS[character-32][i++];
      00020D 90r00r01         [24] 1441 	mov	dptr,#__counter
      000210 E0               [24] 1442 	movx	a,@dptr
      000211 FC               [12] 1443 	mov	r4,a
      000212 A3               [24] 1444 	inc	dptr
      000213 E0               [24] 1445 	movx	a,@dptr
      000214 FD               [12] 1446 	mov	r5,a
      000215 90r00r01         [24] 1447 	mov	dptr,#__counter
      000218 74 01            [12] 1448 	mov	a,#0x01
      00021A 2C               [12] 1449 	add	a,r4
      00021B F0               [24] 1450 	movx	@dptr,a
      00021C E4               [12] 1451 	clr	a
      00021D 3D               [12] 1452 	addc	a,r5
      00021E A3               [24] 1453 	inc	dptr
      00021F F0               [24] 1454 	movx	@dptr,a
      000220 EC               [12] 1455 	mov	a,r4
      000221 24r03            [12] 1456 	add	a,#_cacheMemLcd
      000223 FC               [12] 1457 	mov	r4,a
      000224 ED               [12] 1458 	mov	a,r5
      000225 34s00            [12] 1459 	addc	a,#(_cacheMemLcd >> 8)
      000227 FD               [12] 1460 	mov	r5,a
      000228 8F 02            [24] 1461 	mov	ar2,r7
      00022A 7B 00            [12] 1462 	mov	r3,#0x00
      00022C EA               [12] 1463 	mov	a,r2
      00022D 24 E0            [12] 1464 	add	a,#0xe0
      00022F FA               [12] 1465 	mov	r2,a
      000230 EB               [12] 1466 	mov	a,r3
      000231 34 FF            [12] 1467 	addc	a,#0xff
      000233 FB               [12] 1468 	mov	r3,a
      000234 90r00r00         [24] 1469 	mov	dptr,#__mulint_PARM_2
      000237 EA               [12] 1470 	mov	a,r2
      000238 F0               [24] 1471 	movx	@dptr,a
      000239 EB               [12] 1472 	mov	a,r3
      00023A A3               [24] 1473 	inc	dptr
      00023B F0               [24] 1474 	movx	@dptr,a
      00023C 90 00 05         [24] 1475 	mov	dptr,#0x0005
      00023F C0 07            [24] 1476 	push	ar7
      000241 C0 06            [24] 1477 	push	ar6
      000243 C0 05            [24] 1478 	push	ar5
      000245 C0 04            [24] 1479 	push	ar4
      000247 12r00r00         [24] 1480 	lcall	__mulint
      00024A AA 82            [24] 1481 	mov	r2,dpl
      00024C AB 83            [24] 1482 	mov	r3,dph
      00024E D0 04            [24] 1483 	pop	ar4
      000250 D0 05            [24] 1484 	pop	ar5
      000252 D0 06            [24] 1485 	pop	ar6
      000254 D0 07            [24] 1486 	pop	ar7
      000256 EA               [12] 1487 	mov	a,r2
      000257 24r00            [12] 1488 	add	a,#_FONTS
      000259 FA               [12] 1489 	mov	r2,a
      00025A EB               [12] 1490 	mov	a,r3
      00025B 34s00            [12] 1491 	addc	a,#(_FONTS >> 8)
      00025D FB               [12] 1492 	mov	r3,a
      00025E 8E 01            [24] 1493 	mov	ar1,r6
      000260 0E               [12] 1494 	inc	r6
      000261 E9               [12] 1495 	mov	a,r1
      000262 2A               [12] 1496 	add	a,r2
      000263 F5 82            [12] 1497 	mov	dpl,a
      000265 E4               [12] 1498 	clr	a
      000266 3B               [12] 1499 	addc	a,r3
      000267 F5 83            [12] 1500 	mov	dph,a
      000269 E4               [12] 1501 	clr	a
      00026A 93               [24] 1502 	movc	a,@a+dptr
      00026B FB               [12] 1503 	mov	r3,a
      00026C 8C 82            [24] 1504 	mov	dpl,r4
      00026E 8D 83            [24] 1505 	mov	dph,r5
      000270 F0               [24] 1506 	movx	@dptr,a
      000271 80 95            [24] 1507 	sjmp	00103$
      000273                       1508 00105$:
                                   1509 ;	ssd1306.c:131: _counter++;
      000273 90r00r01         [24] 1510 	mov	dptr,#__counter
      000276 E0               [24] 1511 	movx	a,@dptr
      000277 24 01            [12] 1512 	add	a,#0x01
      000279 F0               [24] 1513 	movx	@dptr,a
      00027A A3               [24] 1514 	inc	dptr
      00027B E0               [24] 1515 	movx	a,@dptr
      00027C 34 00            [12] 1516 	addc	a,#0x00
      00027E F0               [24] 1517 	movx	@dptr,a
                                   1518 ;	ssd1306.c:133: return SSD1306_SUCCESS;
      00027F 75 82 00         [24] 1519 	mov	dpl,#0x00
                                   1520 ;	ssd1306.c:134: }
      000282 22               [24] 1521 	ret
                                   1522 ;------------------------------------------------------------
                                   1523 ;Allocation info for local variables in function 'SSD1306_DrawString'
                                   1524 ;------------------------------------------------------------
                                   1525 ;str                       Allocated with name '_SSD1306_DrawString_str_65536_173'
                                   1526 ;i                         Allocated with name '_SSD1306_DrawString_i_65536_174'
                                   1527 ;------------------------------------------------------------
                                   1528 ;	ssd1306.c:136: void SSD1306_DrawString(char *str) {
                                   1529 ;	-----------------------------------------
                                   1530 ;	 function SSD1306_DrawString
                                   1531 ;	-----------------------------------------
      000283                       1532 _SSD1306_DrawString:
      000283 AF F0            [24] 1533 	mov	r7,b
      000285 AE 83            [24] 1534 	mov	r6,dph
      000287 E5 82            [12] 1535 	mov	a,dpl
      000289 90r04r09         [24] 1536 	mov	dptr,#_SSD1306_DrawString_str_65536_173
      00028C F0               [24] 1537 	movx	@dptr,a
      00028D EE               [12] 1538 	mov	a,r6
      00028E A3               [24] 1539 	inc	dptr
      00028F F0               [24] 1540 	movx	@dptr,a
      000290 EF               [12] 1541 	mov	a,r7
      000291 A3               [24] 1542 	inc	dptr
      000292 F0               [24] 1543 	movx	@dptr,a
                                   1544 ;	ssd1306.c:138: while (str[i] != '\0') {
      000293 90r04r09         [24] 1545 	mov	dptr,#_SSD1306_DrawString_str_65536_173
      000296 E0               [24] 1546 	movx	a,@dptr
      000297 FD               [12] 1547 	mov	r5,a
      000298 A3               [24] 1548 	inc	dptr
      000299 E0               [24] 1549 	movx	a,@dptr
      00029A FE               [12] 1550 	mov	r6,a
      00029B A3               [24] 1551 	inc	dptr
      00029C E0               [24] 1552 	movx	a,@dptr
      00029D FF               [12] 1553 	mov	r7,a
      00029E 7B 00            [12] 1554 	mov	r3,#0x00
      0002A0 7C 00            [12] 1555 	mov	r4,#0x00
      0002A2                       1556 00101$:
      0002A2 EB               [12] 1557 	mov	a,r3
      0002A3 2D               [12] 1558 	add	a,r5
      0002A4 F8               [12] 1559 	mov	r0,a
      0002A5 EC               [12] 1560 	mov	a,r4
      0002A6 3E               [12] 1561 	addc	a,r6
      0002A7 F9               [12] 1562 	mov	r1,a
      0002A8 8F 02            [24] 1563 	mov	ar2,r7
      0002AA 88 82            [24] 1564 	mov	dpl,r0
      0002AC 89 83            [24] 1565 	mov	dph,r1
      0002AE 8A F0            [24] 1566 	mov	b,r2
      0002B0 12r00r00         [24] 1567 	lcall	__gptrget
      0002B3 60 31            [24] 1568 	jz	00104$
                                   1569 ;	ssd1306.c:139: SSD1306_DrawChar(str[i++]);
      0002B5 EB               [12] 1570 	mov	a,r3
      0002B6 2D               [12] 1571 	add	a,r5
      0002B7 F8               [12] 1572 	mov	r0,a
      0002B8 EC               [12] 1573 	mov	a,r4
      0002B9 3E               [12] 1574 	addc	a,r6
      0002BA F9               [12] 1575 	mov	r1,a
      0002BB 8F 02            [24] 1576 	mov	ar2,r7
      0002BD 0B               [12] 1577 	inc	r3
      0002BE BB 00 01         [24] 1578 	cjne	r3,#0x00,00116$
      0002C1 0C               [12] 1579 	inc	r4
      0002C2                       1580 00116$:
      0002C2 88 82            [24] 1581 	mov	dpl,r0
      0002C4 89 83            [24] 1582 	mov	dph,r1
      0002C6 8A F0            [24] 1583 	mov	b,r2
      0002C8 12r00r00         [24] 1584 	lcall	__gptrget
      0002CB F5 82            [12] 1585 	mov	dpl,a
      0002CD C0 07            [24] 1586 	push	ar7
      0002CF C0 06            [24] 1587 	push	ar6
      0002D1 C0 05            [24] 1588 	push	ar5
      0002D3 C0 04            [24] 1589 	push	ar4
      0002D5 C0 03            [24] 1590 	push	ar3
      0002D7 12r01rEF         [24] 1591 	lcall	_SSD1306_DrawChar
      0002DA D0 03            [24] 1592 	pop	ar3
      0002DC D0 04            [24] 1593 	pop	ar4
      0002DE D0 05            [24] 1594 	pop	ar5
      0002E0 D0 06            [24] 1595 	pop	ar6
      0002E2 D0 07            [24] 1596 	pop	ar7
      0002E4 80 BC            [24] 1597 	sjmp	00101$
      0002E6                       1598 00104$:
                                   1599 ;	ssd1306.c:141: }
      0002E6 22               [24] 1600 	ret
                                   1601 ;------------------------------------------------------------
                                   1602 ;Allocation info for local variables in function 'SSD1306_DrawPixel'
                                   1603 ;------------------------------------------------------------
                                   1604 ;y                         Allocated with name '_SSD1306_DrawPixel_PARM_2'
                                   1605 ;x                         Allocated with name '_SSD1306_DrawPixel_x_65536_176'
                                   1606 ;page                      Allocated with name '_SSD1306_DrawPixel_page_65536_177'
                                   1607 ;pixel                     Allocated with name '_SSD1306_DrawPixel_pixel_65536_177'
                                   1608 ;__655360012               Allocated with name '_SSD1306_DrawPixel___655360012_65536_177'
                                   1609 ;------------------------------------------------------------
                                   1610 ;	ssd1306.c:143: uint8_t SSD1306_DrawPixel(uint8_t x, uint8_t y) {
                                   1611 ;	-----------------------------------------
                                   1612 ;	 function SSD1306_DrawPixel
                                   1613 ;	-----------------------------------------
      0002E7                       1614 _SSD1306_DrawPixel:
      0002E7 E5 82            [12] 1615 	mov	a,dpl
      0002E9 90r04r0D         [24] 1616 	mov	dptr,#_SSD1306_DrawPixel_x_65536_176
      0002EC F0               [24] 1617 	movx	@dptr,a
                                   1618 ;	ssd1306.c:147: if ((x > MAX_X) || (y > MAX_Y)) {                               // if out of range
      0002ED E0               [24] 1619 	movx	a,@dptr
      0002EE FF               [12] 1620 	mov  r7,a
      0002EF 24 80            [12] 1621 	add	a,#0xff - 0x7f
      0002F1 40 09            [24] 1622 	jc	00101$
      0002F3 90r04r0C         [24] 1623 	mov	dptr,#_SSD1306_DrawPixel_PARM_2
      0002F6 E0               [24] 1624 	movx	a,@dptr
      0002F7 FE               [12] 1625 	mov  r6,a
      0002F8 24 BF            [12] 1626 	add	a,#0xff - 0x40
      0002FA 50 04            [24] 1627 	jnc	00102$
      0002FC                       1628 00101$:
                                   1629 ;	ssd1306.c:148: return SSD1306_ERROR;                                         // out of range
      0002FC 75 82 01         [24] 1630 	mov	dpl,#0x01
      0002FF 22               [24] 1631 	ret
      000300                       1632 00102$:
                                   1633 ;	ssd1306.c:150: page = y >> 3;                                                  // find page (y / 8)
      000300 EE               [12] 1634 	mov	a,r6
      000301 C4               [12] 1635 	swap	a
      000302 23               [12] 1636 	rl	a
      000303 54 1F            [12] 1637 	anl	a,#0x1f
                                   1638 ;	ssd1306.c:151: pixel = 1 << (y - (page << 3));                                 // which pixel (y % 8)
      000305 FD               [12] 1639 	mov	r5,a
      000306 C4               [12] 1640 	swap	a
      000307 03               [12] 1641 	rr	a
      000308 54 F8            [12] 1642 	anl	a,#0xf8
      00030A FC               [12] 1643 	mov	r4,a
      00030B EE               [12] 1644 	mov	a,r6
      00030C C3               [12] 1645 	clr	c
      00030D 9C               [12] 1646 	subb	a,r4
      00030E F5 F0            [12] 1647 	mov	b,a
      000310 05 F0            [12] 1648 	inc	b
      000312 74 01            [12] 1649 	mov	a,#0x01
      000314 80 02            [24] 1650 	sjmp	00114$
      000316                       1651 00112$:
      000316 25 E0            [12] 1652 	add	a,acc
      000318                       1653 00114$:
      000318 D5 F0 FB         [24] 1654 	djnz	b,00112$
      00031B FE               [12] 1655 	mov	r6,a
                                   1656 ;	ssd1306.c:152: _counter = x + (page << 7);                                     // update counter
      00031C E4               [12] 1657 	clr	a
      00031D FC               [12] 1658 	mov	r4,a
      00031E 54 01            [12] 1659 	anl	a,#0x01
      000320 A2 E0            [12] 1660 	mov	c,acc.0
      000322 CD               [12] 1661 	xch	a,r5
      000323 13               [12] 1662 	rrc	a
      000324 CD               [12] 1663 	xch	a,r5
      000325 13               [12] 1664 	rrc	a
      000326 CD               [12] 1665 	xch	a,r5
      000327 FB               [12] 1666 	mov	r3,a
      000328 ED               [12] 1667 	mov	a,r5
      000329 2F               [12] 1668 	add	a,r7
      00032A FF               [12] 1669 	mov	r7,a
      00032B EB               [12] 1670 	mov	a,r3
      00032C 3C               [12] 1671 	addc	a,r4
      00032D FC               [12] 1672 	mov	r4,a
                                   1673 ;	ssd1306.c:153: cacheMemLcd[_counter++] |= pixel;                               // save pixel
      00032E 90r00r01         [24] 1674 	mov	dptr,#__counter
      000331 74 01            [12] 1675 	mov	a,#0x01
      000333 2F               [12] 1676 	add	a,r7
      000334 F0               [24] 1677 	movx	@dptr,a
      000335 E4               [12] 1678 	clr	a
      000336 3C               [12] 1679 	addc	a,r4
      000337 A3               [24] 1680 	inc	dptr
      000338 F0               [24] 1681 	movx	@dptr,a
      000339 EF               [12] 1682 	mov	a,r7
      00033A 24r03            [12] 1683 	add	a,#_cacheMemLcd
      00033C FF               [12] 1684 	mov	r7,a
      00033D EC               [12] 1685 	mov	a,r4
      00033E 34s00            [12] 1686 	addc	a,#(_cacheMemLcd >> 8)
      000340 FC               [12] 1687 	mov	r4,a
      000341 8F 82            [24] 1688 	mov	dpl,r7
      000343 8C 83            [24] 1689 	mov	dph,r4
      000345 E0               [24] 1690 	movx	a,@dptr
      000346 42 06            [12] 1691 	orl	ar6,a
      000348 8F 82            [24] 1692 	mov	dpl,r7
      00034A 8C 83            [24] 1693 	mov	dph,r4
      00034C EE               [12] 1694 	mov	a,r6
      00034D F0               [24] 1695 	movx	@dptr,a
                                   1696 ;	ssd1306.c:155: return SSD1306_SUCCESS;
      00034E 75 82 00         [24] 1697 	mov	dpl,#0x00
                                   1698 ;	ssd1306.c:156: }
      000351 22               [24] 1699 	ret
                                   1700 ;------------------------------------------------------------
                                   1701 ;Allocation info for local variables in function 'SSD1306_DrawLine'
                                   1702 ;------------------------------------------------------------
                                   1703 ;sloc0                     Allocated with name '_SSD1306_DrawLine_sloc0_1_0'
                                   1704 ;sloc1                     Allocated with name '_SSD1306_DrawLine_sloc1_1_0'
                                   1705 ;sloc2                     Allocated with name '_SSD1306_DrawLine_sloc2_1_0'
                                   1706 ;sloc3                     Allocated with name '_SSD1306_DrawLine_sloc3_1_0'
                                   1707 ;sloc4                     Allocated with name '_SSD1306_DrawLine_sloc4_1_0'
                                   1708 ;sloc5                     Allocated with name '_SSD1306_DrawLine_sloc5_1_0'
                                   1709 ;sloc6                     Allocated with name '_SSD1306_DrawLine_sloc6_1_0'
                                   1710 ;x2                        Allocated with name '_SSD1306_DrawLine_PARM_2'
                                   1711 ;y1                        Allocated with name '_SSD1306_DrawLine_PARM_3'
                                   1712 ;y2                        Allocated with name '_SSD1306_DrawLine_PARM_4'
                                   1713 ;x1                        Allocated with name '_SSD1306_DrawLine_x1_65536_179'
                                   1714 ;D                         Allocated with name '_SSD1306_DrawLine_D_65536_180'
                                   1715 ;delta_x                   Allocated with name '_SSD1306_DrawLine_delta_x_65536_180'
                                   1716 ;delta_y                   Allocated with name '_SSD1306_DrawLine_delta_y_65536_180'
                                   1717 ;trace_x                   Allocated with name '_SSD1306_DrawLine_trace_x_65536_180'
                                   1718 ;trace_y                   Allocated with name '_SSD1306_DrawLine_trace_y_65536_180'
                                   1719 ;------------------------------------------------------------
                                   1720 ;	ssd1306.c:158: uint8_t SSD1306_DrawLine (uint8_t x1, uint8_t x2, uint8_t y1, uint8_t y2) {
                                   1721 ;	-----------------------------------------
                                   1722 ;	 function SSD1306_DrawLine
                                   1723 ;	-----------------------------------------
      000352                       1724 _SSD1306_DrawLine:
      000352 E5 82            [12] 1725 	mov	a,dpl
      000354 90r04r11         [24] 1726 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      000357 F0               [24] 1727 	movx	@dptr,a
                                   1728 ;	ssd1306.c:161: int16_t trace_x = 1, trace_y = 1;                               // steps
      000358 90r04r18         [24] 1729 	mov	dptr,#_SSD1306_DrawLine_trace_x_65536_180
      00035B 74 01            [12] 1730 	mov	a,#0x01
      00035D F0               [24] 1731 	movx	@dptr,a
      00035E E4               [12] 1732 	clr	a
      00035F A3               [24] 1733 	inc	dptr
      000360 F0               [24] 1734 	movx	@dptr,a
      000361 90r04r1A         [24] 1735 	mov	dptr,#_SSD1306_DrawLine_trace_y_65536_180
      000364 04               [12] 1736 	inc	a
      000365 F0               [24] 1737 	movx	@dptr,a
      000366 E4               [12] 1738 	clr	a
      000367 A3               [24] 1739 	inc	dptr
      000368 F0               [24] 1740 	movx	@dptr,a
                                   1741 ;	ssd1306.c:163: delta_x = x2 - x1;                                              // delta x
      000369 90r04r0E         [24] 1742 	mov	dptr,#_SSD1306_DrawLine_PARM_2
      00036C E0               [24] 1743 	movx	a,@dptr
      00036D FF               [12] 1744 	mov	r7,a
      00036E FD               [12] 1745 	mov	r5,a
      00036F 7E 00            [12] 1746 	mov	r6,#0x00
      000371 90r04r11         [24] 1747 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      000374 E0               [24] 1748 	movx	a,@dptr
      000375 FC               [12] 1749 	mov	r4,a
      000376 7B 00            [12] 1750 	mov	r3,#0x00
      000378 ED               [12] 1751 	mov	a,r5
      000379 C3               [12] 1752 	clr	c
      00037A 9C               [12] 1753 	subb	a,r4
      00037B FD               [12] 1754 	mov	r5,a
      00037C EE               [12] 1755 	mov	a,r6
      00037D 9B               [12] 1756 	subb	a,r3
      00037E FE               [12] 1757 	mov	r6,a
      00037F 90r04r14         [24] 1758 	mov	dptr,#_SSD1306_DrawLine_delta_x_65536_180
      000382 ED               [12] 1759 	mov	a,r5
      000383 F0               [24] 1760 	movx	@dptr,a
      000384 EE               [12] 1761 	mov	a,r6
      000385 A3               [24] 1762 	inc	dptr
      000386 F0               [24] 1763 	movx	@dptr,a
                                   1764 ;	ssd1306.c:164: delta_y = y2 - y1;                                              // delta y
      000387 90r04r10         [24] 1765 	mov	dptr,#_SSD1306_DrawLine_PARM_4
      00038A E0               [24] 1766 	movx	a,@dptr
      00038B FC               [12] 1767 	mov	r4,a
      00038C 8C*00            [24] 1768 	mov	_SSD1306_DrawLine_sloc0_1_0,r4
                                   1769 ;	1-genFromRTrack replaced	mov	(_SSD1306_DrawLine_sloc0_1_0 + 1),#0x00
      00038E 8B*01            [24] 1770 	mov	(_SSD1306_DrawLine_sloc0_1_0 + 1),r3
      000390 90r04r0F         [24] 1771 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      000393 E0               [24] 1772 	movx	a,@dptr
      000394 F5*02            [12] 1773 	mov	_SSD1306_DrawLine_sloc1_1_0,a
      000396 A8*02            [24] 1774 	mov	r0,_SSD1306_DrawLine_sloc1_1_0
      000398 7B 00            [12] 1775 	mov	r3,#0x00
      00039A E5*00            [12] 1776 	mov	a,_SSD1306_DrawLine_sloc0_1_0
      00039C C3               [12] 1777 	clr	c
      00039D 98               [12] 1778 	subb	a,r0
      00039E F8               [12] 1779 	mov	r0,a
      00039F E5*01            [12] 1780 	mov	a,(_SSD1306_DrawLine_sloc0_1_0 + 1)
      0003A1 9B               [12] 1781 	subb	a,r3
      0003A2 FB               [12] 1782 	mov	r3,a
      0003A3 90r04r16         [24] 1783 	mov	dptr,#_SSD1306_DrawLine_delta_y_65536_180
      0003A6 E8               [12] 1784 	mov	a,r0
      0003A7 F0               [24] 1785 	movx	@dptr,a
      0003A8 EB               [12] 1786 	mov	a,r3
      0003A9 A3               [24] 1787 	inc	dptr
      0003AA F0               [24] 1788 	movx	@dptr,a
                                   1789 ;	ssd1306.c:166: if (delta_x < 0) {                                              // check if x2 > x1
      0003AB 8D 01            [24] 1790 	mov	ar1,r5
      0003AD 8E 02            [24] 1791 	mov	ar2,r6
      0003AF EA               [12] 1792 	mov	a,r2
      0003B0 30 E7 13         [24] 1793 	jnb	acc.7,00102$
                                   1794 ;	ssd1306.c:167: delta_x = -delta_x;                                           // negate delta x
      0003B3 90r04r14         [24] 1795 	mov	dptr,#_SSD1306_DrawLine_delta_x_65536_180
      0003B6 C3               [12] 1796 	clr	c
      0003B7 E4               [12] 1797 	clr	a
      0003B8 9D               [12] 1798 	subb	a,r5
      0003B9 F0               [24] 1799 	movx	@dptr,a
      0003BA E4               [12] 1800 	clr	a
      0003BB 9E               [12] 1801 	subb	a,r6
      0003BC A3               [24] 1802 	inc	dptr
      0003BD F0               [24] 1803 	movx	@dptr,a
                                   1804 ;	ssd1306.c:168: trace_x = -trace_x;                                           // negate step x
      0003BE 90r04r18         [24] 1805 	mov	dptr,#_SSD1306_DrawLine_trace_x_65536_180
      0003C1 74 FF            [12] 1806 	mov	a,#0xff
      0003C3 F0               [24] 1807 	movx	@dptr,a
      0003C4 A3               [24] 1808 	inc	dptr
      0003C5 F0               [24] 1809 	movx	@dptr,a
      0003C6                       1810 00102$:
                                   1811 ;	ssd1306.c:171: if (delta_y < 0) {                                              // check if y2 > y1
      0003C6 88 05            [24] 1812 	mov	ar5,r0
      0003C8 8B 06            [24] 1813 	mov	ar6,r3
      0003CA EE               [12] 1814 	mov	a,r6
      0003CB 30 E7 13         [24] 1815 	jnb	acc.7,00104$
                                   1816 ;	ssd1306.c:172: delta_y = -delta_y;                                           // negate detla y
      0003CE 90r04r16         [24] 1817 	mov	dptr,#_SSD1306_DrawLine_delta_y_65536_180
      0003D1 C3               [12] 1818 	clr	c
      0003D2 E4               [12] 1819 	clr	a
      0003D3 98               [12] 1820 	subb	a,r0
      0003D4 F0               [24] 1821 	movx	@dptr,a
      0003D5 E4               [12] 1822 	clr	a
      0003D6 9B               [12] 1823 	subb	a,r3
      0003D7 A3               [24] 1824 	inc	dptr
      0003D8 F0               [24] 1825 	movx	@dptr,a
                                   1826 ;	ssd1306.c:173: trace_y = -trace_y;                                           // negate step y
      0003D9 90r04r1A         [24] 1827 	mov	dptr,#_SSD1306_DrawLine_trace_y_65536_180
      0003DC 74 FF            [12] 1828 	mov	a,#0xff
      0003DE F0               [24] 1829 	movx	@dptr,a
      0003DF A3               [24] 1830 	inc	dptr
      0003E0 F0               [24] 1831 	movx	@dptr,a
      0003E1                       1832 00104$:
                                   1833 ;	ssd1306.c:178: if (delta_y < delta_x) {
      0003E1 90r04r16         [24] 1834 	mov	dptr,#_SSD1306_DrawLine_delta_y_65536_180
      0003E4 E0               [24] 1835 	movx	a,@dptr
      0003E5 FD               [12] 1836 	mov	r5,a
      0003E6 A3               [24] 1837 	inc	dptr
      0003E7 E0               [24] 1838 	movx	a,@dptr
      0003E8 FE               [12] 1839 	mov	r6,a
      0003E9 90r04r14         [24] 1840 	mov	dptr,#_SSD1306_DrawLine_delta_x_65536_180
      0003EC E0               [24] 1841 	movx	a,@dptr
      0003ED FA               [12] 1842 	mov	r2,a
      0003EE A3               [24] 1843 	inc	dptr
      0003EF E0               [24] 1844 	movx	a,@dptr
      0003F0 FB               [12] 1845 	mov	r3,a
      0003F1 C3               [12] 1846 	clr	c
      0003F2 ED               [12] 1847 	mov	a,r5
      0003F3 9A               [12] 1848 	subb	a,r2
      0003F4 EE               [12] 1849 	mov	a,r6
      0003F5 64 80            [12] 1850 	xrl	a,#0x80
      0003F7 8B F0            [24] 1851 	mov	b,r3
      0003F9 63 F0 80         [24] 1852 	xrl	b,#0x80
      0003FC 95 F0            [12] 1853 	subb	a,b
      0003FE 40 03            [24] 1854 	jc	00158$
      000400 02r04rE5         [24] 1855 	ljmp	00116$
      000403                       1856 00158$:
                                   1857 ;	ssd1306.c:179: D = (delta_y << 1) - delta_x;                                 // calculate determinant
      000403 ED               [12] 1858 	mov	a,r5
      000404 2D               [12] 1859 	add	a,r5
      000405 F8               [12] 1860 	mov	r0,a
      000406 EE               [12] 1861 	mov	a,r6
      000407 33               [12] 1862 	rlc	a
      000408 F9               [12] 1863 	mov	r1,a
      000409 90r04r12         [24] 1864 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      00040C E8               [12] 1865 	mov	a,r0
      00040D C3               [12] 1866 	clr	c
      00040E 9A               [12] 1867 	subb	a,r2
      00040F F0               [24] 1868 	movx	@dptr,a
      000410 E9               [12] 1869 	mov	a,r1
      000411 9B               [12] 1870 	subb	a,r3
      000412 A3               [24] 1871 	inc	dptr
      000413 F0               [24] 1872 	movx	@dptr,a
                                   1873 ;	ssd1306.c:180: SSD1306_DrawPixel (x1, y1);                                   // draw first pixel
      000414 90r04r11         [24] 1874 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      000417 E0               [24] 1875 	movx	a,@dptr
      000418 F9               [12] 1876 	mov	r1,a
      000419 90r04r0C         [24] 1877 	mov	dptr,#_SSD1306_DrawPixel_PARM_2
      00041C E5*02            [12] 1878 	mov	a,_SSD1306_DrawLine_sloc1_1_0
      00041E F0               [24] 1879 	movx	@dptr,a
      00041F 89 82            [24] 1880 	mov	dpl,r1
      000421 C0 07            [24] 1881 	push	ar7
      000423 C0 06            [24] 1882 	push	ar6
      000425 C0 05            [24] 1883 	push	ar5
      000427 C0 03            [24] 1884 	push	ar3
      000429 C0 02            [24] 1885 	push	ar2
      00042B 12r02rE7         [24] 1886 	lcall	_SSD1306_DrawPixel
      00042E D0 02            [24] 1887 	pop	ar2
      000430 D0 03            [24] 1888 	pop	ar3
      000432 D0 05            [24] 1889 	pop	ar5
      000434 D0 06            [24] 1890 	pop	ar6
      000436 D0 07            [24] 1891 	pop	ar7
                                   1892 ;	ssd1306.c:181: while (x1 != x2) {                                            // check if x1 equal x2
      000438 90r04r1A         [24] 1893 	mov	dptr,#_SSD1306_DrawLine_trace_y_65536_180
      00043B E0               [24] 1894 	movx	a,@dptr
      00043C F5*0A            [12] 1895 	mov	_SSD1306_DrawLine_sloc6_1_0,a
      00043E A3               [24] 1896 	inc	dptr
      00043F E0               [24] 1897 	movx	a,@dptr
      000440 F5*0B            [12] 1898 	mov	(_SSD1306_DrawLine_sloc6_1_0 + 1),a
      000442 8A*00            [24] 1899 	mov	_SSD1306_DrawLine_sloc0_1_0,r2
      000444 8B*01            [24] 1900 	mov	(_SSD1306_DrawLine_sloc0_1_0 + 1),r3
      000446 90r04r18         [24] 1901 	mov	dptr,#_SSD1306_DrawLine_trace_x_65536_180
      000449 E0               [24] 1902 	movx	a,@dptr
      00044A F5*03            [12] 1903 	mov	_SSD1306_DrawLine_sloc2_1_0,a
      00044C A3               [24] 1904 	inc	dptr
      00044D E0               [24] 1905 	movx	a,@dptr
      00044E F5*04            [12] 1906 	mov	(_SSD1306_DrawLine_sloc2_1_0 + 1),a
      000450 8D*05            [24] 1907 	mov	_SSD1306_DrawLine_sloc3_1_0,r5
      000452 8E*06            [24] 1908 	mov	(_SSD1306_DrawLine_sloc3_1_0 + 1),r6
      000454                       1909 00107$:
      000454 90r04r11         [24] 1910 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      000457 E0               [24] 1911 	movx	a,@dptr
      000458 F5*07            [12] 1912 	mov	_SSD1306_DrawLine_sloc4_1_0,a
      00045A EF               [12] 1913 	mov	a,r7
      00045B B5*07 03         [24] 1914 	cjne	a,_SSD1306_DrawLine_sloc4_1_0,00159$
      00045E 02r05rEC         [24] 1915 	ljmp	00117$
      000461                       1916 00159$:
                                   1917 ;	ssd1306.c:182: x1 += trace_x;                                              // update x1
      000461 A9*03            [24] 1918 	mov	r1,_SSD1306_DrawLine_sloc2_1_0
      000463 A8*07            [24] 1919 	mov	r0,_SSD1306_DrawLine_sloc4_1_0
      000465 90r04r11         [24] 1920 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      000468 E9               [12] 1921 	mov	a,r1
      000469 28               [12] 1922 	add	a,r0
      00046A F0               [24] 1923 	movx	@dptr,a
                                   1924 ;	ssd1306.c:183: if (D >= 0) {                                               // check if determinant is positive
      00046B 90r04r12         [24] 1925 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      00046E E0               [24] 1926 	movx	a,@dptr
      00046F F8               [12] 1927 	mov	r0,a
      000470 A3               [24] 1928 	inc	dptr
      000471 E0               [24] 1929 	movx	a,@dptr
      000472 F9               [12] 1930 	mov	r1,a
      000473 88*08            [24] 1931 	mov	_SSD1306_DrawLine_sloc5_1_0,r0
      000475 E9               [12] 1932 	mov	a,r1
      000476 F5*09            [12] 1933 	mov	(_SSD1306_DrawLine_sloc5_1_0 + 1),a
      000478 20 E7 29         [24] 1934 	jb	acc.7,00106$
                                   1935 ;	ssd1306.c:184: y1 += trace_y;                                            // update y1
      00047B C0 07            [24] 1936 	push	ar7
      00047D 85*0A*07         [24] 1937 	mov	_SSD1306_DrawLine_sloc4_1_0,_SSD1306_DrawLine_sloc6_1_0
      000480 90r04r0F         [24] 1938 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      000483 E0               [24] 1939 	movx	a,@dptr
      000484 25*07            [12] 1940 	add	a,_SSD1306_DrawLine_sloc4_1_0
      000486 F0               [24] 1941 	movx	@dptr,a
                                   1942 ;	ssd1306.c:185: D -= 2*delta_x;                                           // update determinant
      000487 A9*00            [24] 1943 	mov	r1,_SSD1306_DrawLine_sloc0_1_0
      000489 AF*01            [24] 1944 	mov	r7,(_SSD1306_DrawLine_sloc0_1_0 + 1)
      00048B E9               [12] 1945 	mov	a,r1
      00048C 29               [12] 1946 	add	a,r1
      00048D F9               [12] 1947 	mov	r1,a
      00048E EF               [12] 1948 	mov	a,r7
      00048F 33               [12] 1949 	rlc	a
      000490 FF               [12] 1950 	mov	r7,a
      000491 E5*08            [12] 1951 	mov	a,_SSD1306_DrawLine_sloc5_1_0
      000493 C3               [12] 1952 	clr	c
      000494 99               [12] 1953 	subb	a,r1
      000495 F9               [12] 1954 	mov	r1,a
      000496 E5*09            [12] 1955 	mov	a,(_SSD1306_DrawLine_sloc5_1_0 + 1)
      000498 9F               [12] 1956 	subb	a,r7
      000499 FF               [12] 1957 	mov	r7,a
      00049A 90r04r12         [24] 1958 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      00049D E9               [12] 1959 	mov	a,r1
      00049E F0               [24] 1960 	movx	@dptr,a
      00049F EF               [12] 1961 	mov	a,r7
      0004A0 A3               [24] 1962 	inc	dptr
      0004A1 F0               [24] 1963 	movx	@dptr,a
                                   1964 ;	ssd1306.c:206: return SSD1306_SUCCESS;
      0004A2 D0 07            [24] 1965 	pop	ar7
                                   1966 ;	ssd1306.c:185: D -= 2*delta_x;                                           // update determinant
      0004A4                       1967 00106$:
                                   1968 ;	ssd1306.c:187: D += 2*delta_y;                                             // update deteminant
      0004A4 C0 07            [24] 1969 	push	ar7
      0004A6 A8*05            [24] 1970 	mov	r0,_SSD1306_DrawLine_sloc3_1_0
      0004A8 A9*06            [24] 1971 	mov	r1,(_SSD1306_DrawLine_sloc3_1_0 + 1)
      0004AA E8               [12] 1972 	mov	a,r0
      0004AB 28               [12] 1973 	add	a,r0
      0004AC F5*08            [12] 1974 	mov	_SSD1306_DrawLine_sloc5_1_0,a
      0004AE E9               [12] 1975 	mov	a,r1
      0004AF 33               [12] 1976 	rlc	a
      0004B0 F5*09            [12] 1977 	mov	(_SSD1306_DrawLine_sloc5_1_0 + 1),a
      0004B2 90r04r12         [24] 1978 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      0004B5 E0               [24] 1979 	movx	a,@dptr
      0004B6 F9               [12] 1980 	mov	r1,a
      0004B7 A3               [24] 1981 	inc	dptr
      0004B8 E0               [24] 1982 	movx	a,@dptr
      0004B9 FF               [12] 1983 	mov	r7,a
      0004BA E5*08            [12] 1984 	mov	a,_SSD1306_DrawLine_sloc5_1_0
      0004BC 29               [12] 1985 	add	a,r1
      0004BD F9               [12] 1986 	mov	r1,a
      0004BE E5*09            [12] 1987 	mov	a,(_SSD1306_DrawLine_sloc5_1_0 + 1)
      0004C0 3F               [12] 1988 	addc	a,r7
      0004C1 FF               [12] 1989 	mov	r7,a
      0004C2 90r04r12         [24] 1990 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      0004C5 E9               [12] 1991 	mov	a,r1
      0004C6 F0               [24] 1992 	movx	@dptr,a
      0004C7 EF               [12] 1993 	mov	a,r7
      0004C8 A3               [24] 1994 	inc	dptr
      0004C9 F0               [24] 1995 	movx	@dptr,a
                                   1996 ;	ssd1306.c:188: SSD1306_DrawPixel (x1, y1);                                 // draw next pixel
      0004CA 90r04r11         [24] 1997 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      0004CD E0               [24] 1998 	movx	a,@dptr
      0004CE FF               [12] 1999 	mov	r7,a
      0004CF 90r04r0F         [24] 2000 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      0004D2 E0               [24] 2001 	movx	a,@dptr
      0004D3 90r04r0C         [24] 2002 	mov	dptr,#_SSD1306_DrawPixel_PARM_2
      0004D6 F0               [24] 2003 	movx	@dptr,a
      0004D7 8F 82            [24] 2004 	mov	dpl,r7
      0004D9 C0 07            [24] 2005 	push	ar7
      0004DB 12r02rE7         [24] 2006 	lcall	_SSD1306_DrawPixel
      0004DE D0 07            [24] 2007 	pop	ar7
      0004E0 D0 07            [24] 2008 	pop	ar7
      0004E2 02r04r54         [24] 2009 	ljmp	00107$
      0004E5                       2010 00116$:
                                   2011 ;	ssd1306.c:193: D = delta_y - (delta_x << 1);                                 // calculate determinant
      0004E5 EA               [12] 2012 	mov	a,r2
      0004E6 2A               [12] 2013 	add	a,r2
      0004E7 F9               [12] 2014 	mov	r1,a
      0004E8 EB               [12] 2015 	mov	a,r3
      0004E9 33               [12] 2016 	rlc	a
      0004EA FF               [12] 2017 	mov	r7,a
      0004EB 90r04r12         [24] 2018 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      0004EE ED               [12] 2019 	mov	a,r5
      0004EF C3               [12] 2020 	clr	c
      0004F0 99               [12] 2021 	subb	a,r1
      0004F1 F0               [24] 2022 	movx	@dptr,a
      0004F2 EE               [12] 2023 	mov	a,r6
      0004F3 9F               [12] 2024 	subb	a,r7
      0004F4 A3               [24] 2025 	inc	dptr
      0004F5 F0               [24] 2026 	movx	@dptr,a
                                   2027 ;	ssd1306.c:194: SSD1306_DrawPixel (x1, y1);                                   // draw first pixel
      0004F6 90r04r11         [24] 2028 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      0004F9 E0               [24] 2029 	movx	a,@dptr
      0004FA FF               [12] 2030 	mov	r7,a
      0004FB 90r04r0C         [24] 2031 	mov	dptr,#_SSD1306_DrawPixel_PARM_2
      0004FE E5*02            [12] 2032 	mov	a,_SSD1306_DrawLine_sloc1_1_0
      000500 F0               [24] 2033 	movx	@dptr,a
      000501 8F 82            [24] 2034 	mov	dpl,r7
      000503 C0 06            [24] 2035 	push	ar6
      000505 C0 05            [24] 2036 	push	ar5
      000507 C0 04            [24] 2037 	push	ar4
      000509 C0 03            [24] 2038 	push	ar3
      00050B C0 02            [24] 2039 	push	ar2
      00050D 12r02rE7         [24] 2040 	lcall	_SSD1306_DrawPixel
      000510 D0 02            [24] 2041 	pop	ar2
      000512 D0 03            [24] 2042 	pop	ar3
      000514 D0 04            [24] 2043 	pop	ar4
      000516 D0 05            [24] 2044 	pop	ar5
      000518 D0 06            [24] 2045 	pop	ar6
                                   2046 ;	ssd1306.c:195: while (y1 != y2) {                                            // check if y2 equal y1
      00051A 90r04r18         [24] 2047 	mov	dptr,#_SSD1306_DrawLine_trace_x_65536_180
      00051D E0               [24] 2048 	movx	a,@dptr
      00051E F9               [12] 2049 	mov	r1,a
      00051F A3               [24] 2050 	inc	dptr
      000520 E0               [24] 2051 	movx	a,@dptr
      000521 FF               [12] 2052 	mov	r7,a
      000522 90r04r1A         [24] 2053 	mov	dptr,#_SSD1306_DrawLine_trace_y_65536_180
      000525 E0               [24] 2054 	movx	a,@dptr
      000526 F5*0A            [12] 2055 	mov	_SSD1306_DrawLine_sloc6_1_0,a
      000528 A3               [24] 2056 	inc	dptr
      000529 E0               [24] 2057 	movx	a,@dptr
      00052A F5*0B            [12] 2058 	mov	(_SSD1306_DrawLine_sloc6_1_0 + 1),a
      00052C                       2059 00112$:
      00052C 90r04r0F         [24] 2060 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      00052F E0               [24] 2061 	movx	a,@dptr
      000530 F8               [12] 2062 	mov	r0,a
      000531 B5 04 03         [24] 2063 	cjne	a,ar4,00161$
      000534 02r05rEC         [24] 2064 	ljmp	00117$
      000537                       2065 00161$:
                                   2066 ;	ssd1306.c:196: y1 += trace_y;                                              // update y1
      000537 C0 02            [24] 2067 	push	ar2
      000539 C0 03            [24] 2068 	push	ar3
      00053B AB*0A            [24] 2069 	mov	r3,_SSD1306_DrawLine_sloc6_1_0
      00053D 90r04r0F         [24] 2070 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      000540 EB               [12] 2071 	mov	a,r3
      000541 28               [12] 2072 	add	a,r0
      000542 F0               [24] 2073 	movx	@dptr,a
                                   2074 ;	ssd1306.c:197: if (D <= 0) {                                               // check if determinant is positive
      000543 90r04r12         [24] 2075 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      000546 E0               [24] 2076 	movx	a,@dptr
      000547 FA               [12] 2077 	mov	r2,a
      000548 A3               [24] 2078 	inc	dptr
      000549 E0               [24] 2079 	movx	a,@dptr
      00054A FB               [12] 2080 	mov	r3,a
      00054B 8A*08            [24] 2081 	mov	_SSD1306_DrawLine_sloc5_1_0,r2
      00054D 8B*09            [24] 2082 	mov	(_SSD1306_DrawLine_sloc5_1_0 + 1),r3
      00054F C3               [12] 2083 	clr	c
      000550 E4               [12] 2084 	clr	a
      000551 95*08            [12] 2085 	subb	a,_SSD1306_DrawLine_sloc5_1_0
      000553 74 80            [12] 2086 	mov	a,#(0x00 ^ 0x80)
      000555 85*09 F0         [24] 2087 	mov	b,(_SSD1306_DrawLine_sloc5_1_0 + 1)
      000558 63 F0 80         [24] 2088 	xrl	b,#0x80
      00055B 95 F0            [12] 2089 	subb	a,b
      00055D D0 03            [24] 2090 	pop	ar3
      00055F D0 02            [24] 2091 	pop	ar2
      000561 40 2A            [24] 2092 	jc	00111$
                                   2093 ;	ssd1306.c:198: x1 += trace_x;                                            // update y1
      000563 C0 02            [24] 2094 	push	ar2
      000565 C0 03            [24] 2095 	push	ar3
      000567 89 00            [24] 2096 	mov	ar0,r1
      000569 90r04r11         [24] 2097 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      00056C E0               [24] 2098 	movx	a,@dptr
      00056D 28               [12] 2099 	add	a,r0
      00056E F0               [24] 2100 	movx	@dptr,a
                                   2101 ;	ssd1306.c:199: D += 2*delta_y;                                           // update determinant
      00056F 8D 02            [24] 2102 	mov	ar2,r5
      000571 8E 03            [24] 2103 	mov	ar3,r6
      000573 EA               [12] 2104 	mov	a,r2
      000574 2A               [12] 2105 	add	a,r2
      000575 FA               [12] 2106 	mov	r2,a
      000576 EB               [12] 2107 	mov	a,r3
      000577 33               [12] 2108 	rlc	a
      000578 FB               [12] 2109 	mov	r3,a
      000579 EA               [12] 2110 	mov	a,r2
      00057A 25*08            [12] 2111 	add	a,_SSD1306_DrawLine_sloc5_1_0
      00057C FA               [12] 2112 	mov	r2,a
      00057D EB               [12] 2113 	mov	a,r3
      00057E 35*09            [12] 2114 	addc	a,(_SSD1306_DrawLine_sloc5_1_0 + 1)
      000580 FB               [12] 2115 	mov	r3,a
      000581 90r04r12         [24] 2116 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      000584 EA               [12] 2117 	mov	a,r2
      000585 F0               [24] 2118 	movx	@dptr,a
      000586 EB               [12] 2119 	mov	a,r3
      000587 A3               [24] 2120 	inc	dptr
      000588 F0               [24] 2121 	movx	@dptr,a
                                   2122 ;	ssd1306.c:206: return SSD1306_SUCCESS;
      000589 D0 03            [24] 2123 	pop	ar3
      00058B D0 02            [24] 2124 	pop	ar2
                                   2125 ;	ssd1306.c:199: D += 2*delta_y;                                           // update determinant
      00058D                       2126 00111$:
                                   2127 ;	ssd1306.c:201: D -= 2*delta_x;                                             // update deteminant
      00058D C0 05            [24] 2128 	push	ar5
      00058F C0 06            [24] 2129 	push	ar6
      000591 8A 00            [24] 2130 	mov	ar0,r2
      000593 8B 06            [24] 2131 	mov	ar6,r3
      000595 E8               [12] 2132 	mov	a,r0
      000596 28               [12] 2133 	add	a,r0
      000597 F5*08            [12] 2134 	mov	_SSD1306_DrawLine_sloc5_1_0,a
      000599 EE               [12] 2135 	mov	a,r6
      00059A 33               [12] 2136 	rlc	a
      00059B F5*09            [12] 2137 	mov	(_SSD1306_DrawLine_sloc5_1_0 + 1),a
      00059D 90r04r12         [24] 2138 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      0005A0 E0               [24] 2139 	movx	a,@dptr
      0005A1 FD               [12] 2140 	mov	r5,a
      0005A2 A3               [24] 2141 	inc	dptr
      0005A3 E0               [24] 2142 	movx	a,@dptr
      0005A4 FE               [12] 2143 	mov	r6,a
      0005A5 ED               [12] 2144 	mov	a,r5
      0005A6 C3               [12] 2145 	clr	c
      0005A7 95*08            [12] 2146 	subb	a,_SSD1306_DrawLine_sloc5_1_0
      0005A9 FD               [12] 2147 	mov	r5,a
      0005AA EE               [12] 2148 	mov	a,r6
      0005AB 95*09            [12] 2149 	subb	a,(_SSD1306_DrawLine_sloc5_1_0 + 1)
      0005AD FE               [12] 2150 	mov	r6,a
      0005AE 90r04r12         [24] 2151 	mov	dptr,#_SSD1306_DrawLine_D_65536_180
      0005B1 ED               [12] 2152 	mov	a,r5
      0005B2 F0               [24] 2153 	movx	@dptr,a
      0005B3 EE               [12] 2154 	mov	a,r6
      0005B4 A3               [24] 2155 	inc	dptr
      0005B5 F0               [24] 2156 	movx	@dptr,a
                                   2157 ;	ssd1306.c:202: SSD1306_DrawPixel (x1, y1);                                 // draw next pixel
      0005B6 90r04r11         [24] 2158 	mov	dptr,#_SSD1306_DrawLine_x1_65536_179
      0005B9 E0               [24] 2159 	movx	a,@dptr
      0005BA FE               [12] 2160 	mov	r6,a
      0005BB 90r04r0F         [24] 2161 	mov	dptr,#_SSD1306_DrawLine_PARM_3
      0005BE E0               [24] 2162 	movx	a,@dptr
      0005BF FD               [12] 2163 	mov	r5,a
      0005C0 90r04r0C         [24] 2164 	mov	dptr,#_SSD1306_DrawPixel_PARM_2
      0005C3 F0               [24] 2165 	movx	@dptr,a
      0005C4 8E 82            [24] 2166 	mov	dpl,r6
      0005C6 C0 07            [24] 2167 	push	ar7
      0005C8 C0 06            [24] 2168 	push	ar6
      0005CA C0 05            [24] 2169 	push	ar5
      0005CC C0 04            [24] 2170 	push	ar4
      0005CE C0 03            [24] 2171 	push	ar3
      0005D0 C0 02            [24] 2172 	push	ar2
      0005D2 C0 01            [24] 2173 	push	ar1
      0005D4 12r02rE7         [24] 2174 	lcall	_SSD1306_DrawPixel
      0005D7 D0 01            [24] 2175 	pop	ar1
      0005D9 D0 02            [24] 2176 	pop	ar2
      0005DB D0 03            [24] 2177 	pop	ar3
      0005DD D0 04            [24] 2178 	pop	ar4
      0005DF D0 05            [24] 2179 	pop	ar5
      0005E1 D0 06            [24] 2180 	pop	ar6
      0005E3 D0 07            [24] 2181 	pop	ar7
      0005E5 D0 06            [24] 2182 	pop	ar6
      0005E7 D0 05            [24] 2183 	pop	ar5
      0005E9 02r05r2C         [24] 2184 	ljmp	00112$
      0005EC                       2185 00117$:
                                   2186 ;	ssd1306.c:206: return SSD1306_SUCCESS;
      0005EC 75 82 00         [24] 2187 	mov	dpl,#0x00
                                   2188 ;	ssd1306.c:207: }
      0005EF 22               [24] 2189 	ret
                                   2190 	.area CSEG    (CODE)
                                   2191 	.area CONST   (CODE)
      000000                       2192 _FONTS:
      000000 00                    2193 	.db #0x00	; 0
      000001 00                    2194 	.db #0x00	; 0
      000002 00                    2195 	.db #0x00	; 0
      000003 00                    2196 	.db #0x00	; 0
      000004 00                    2197 	.db #0x00	; 0
      000005 81                    2198 	.db #0x81	; 129
      000006 81                    2199 	.db #0x81	; 129
      000007 18                    2200 	.db #0x18	; 24
      000008 81                    2201 	.db #0x81	; 129
      000009 81                    2202 	.db #0x81	; 129
      00000A 00                    2203 	.db #0x00	; 0
      00000B 07                    2204 	.db #0x07	; 7
      00000C 00                    2205 	.db #0x00	; 0
      00000D 07                    2206 	.db #0x07	; 7
      00000E 00                    2207 	.db #0x00	; 0
      00000F 14                    2208 	.db #0x14	; 20
      000010 7F                    2209 	.db #0x7f	; 127
      000011 14                    2210 	.db #0x14	; 20
      000012 7F                    2211 	.db #0x7f	; 127
      000013 14                    2212 	.db #0x14	; 20
      000014 24                    2213 	.db #0x24	; 36
      000015 2A                    2214 	.db #0x2a	; 42
      000016 7F                    2215 	.db #0x7f	; 127
      000017 2A                    2216 	.db #0x2a	; 42
      000018 12                    2217 	.db #0x12	; 18
      000019 23                    2218 	.db #0x23	; 35
      00001A 13                    2219 	.db #0x13	; 19
      00001B 08                    2220 	.db #0x08	; 8
      00001C 64                    2221 	.db #0x64	; 100	'd'
      00001D 62                    2222 	.db #0x62	; 98	'b'
      00001E 36                    2223 	.db #0x36	; 54	'6'
      00001F 49                    2224 	.db #0x49	; 73	'I'
      000020 55                    2225 	.db #0x55	; 85	'U'
      000021 22                    2226 	.db #0x22	; 34
      000022 50                    2227 	.db #0x50	; 80	'P'
      000023 00                    2228 	.db #0x00	; 0
      000024 05                    2229 	.db #0x05	; 5
      000025 03                    2230 	.db #0x03	; 3
      000026 00                    2231 	.db #0x00	; 0
      000027 00                    2232 	.db #0x00	; 0
      000028 00                    2233 	.db #0x00	; 0
      000029 1C                    2234 	.db #0x1c	; 28
      00002A 22                    2235 	.db #0x22	; 34
      00002B 41                    2236 	.db #0x41	; 65	'A'
      00002C 00                    2237 	.db #0x00	; 0
      00002D 00                    2238 	.db #0x00	; 0
      00002E 41                    2239 	.db #0x41	; 65	'A'
      00002F 22                    2240 	.db #0x22	; 34
      000030 1C                    2241 	.db #0x1c	; 28
      000031 00                    2242 	.db #0x00	; 0
      000032 14                    2243 	.db #0x14	; 20
      000033 08                    2244 	.db #0x08	; 8
      000034 3E                    2245 	.db #0x3e	; 62
      000035 08                    2246 	.db #0x08	; 8
      000036 14                    2247 	.db #0x14	; 20
      000037 08                    2248 	.db #0x08	; 8
      000038 08                    2249 	.db #0x08	; 8
      000039 3E                    2250 	.db #0x3e	; 62
      00003A 08                    2251 	.db #0x08	; 8
      00003B 08                    2252 	.db #0x08	; 8
      00003C 00                    2253 	.db #0x00	; 0
      00003D 50                    2254 	.db #0x50	; 80	'P'
      00003E 30                    2255 	.db #0x30	; 48	'0'
      00003F 00                    2256 	.db #0x00	; 0
      000040 00                    2257 	.db #0x00	; 0
      000041 08                    2258 	.db #0x08	; 8
      000042 08                    2259 	.db #0x08	; 8
      000043 08                    2260 	.db #0x08	; 8
      000044 08                    2261 	.db #0x08	; 8
      000045 08                    2262 	.db #0x08	; 8
      000046 00                    2263 	.db #0x00	; 0
      000047 60                    2264 	.db #0x60	; 96
      000048 60                    2265 	.db #0x60	; 96
      000049 00                    2266 	.db #0x00	; 0
      00004A 00                    2267 	.db #0x00	; 0
      00004B 20                    2268 	.db #0x20	; 32
      00004C 10                    2269 	.db #0x10	; 16
      00004D 08                    2270 	.db #0x08	; 8
      00004E 04                    2271 	.db #0x04	; 4
      00004F 02                    2272 	.db #0x02	; 2
      000050 3E                    2273 	.db #0x3e	; 62
      000051 51                    2274 	.db #0x51	; 81	'Q'
      000052 49                    2275 	.db #0x49	; 73	'I'
      000053 45                    2276 	.db #0x45	; 69	'E'
      000054 3E                    2277 	.db #0x3e	; 62
      000055 00                    2278 	.db #0x00	; 0
      000056 42                    2279 	.db #0x42	; 66	'B'
      000057 7F                    2280 	.db #0x7f	; 127
      000058 40                    2281 	.db #0x40	; 64
      000059 00                    2282 	.db #0x00	; 0
      00005A 42                    2283 	.db #0x42	; 66	'B'
      00005B 61                    2284 	.db #0x61	; 97	'a'
      00005C 51                    2285 	.db #0x51	; 81	'Q'
      00005D 49                    2286 	.db #0x49	; 73	'I'
      00005E 46                    2287 	.db #0x46	; 70	'F'
      00005F 21                    2288 	.db #0x21	; 33
      000060 41                    2289 	.db #0x41	; 65	'A'
      000061 45                    2290 	.db #0x45	; 69	'E'
      000062 4B                    2291 	.db #0x4b	; 75	'K'
      000063 31                    2292 	.db #0x31	; 49	'1'
      000064 18                    2293 	.db #0x18	; 24
      000065 14                    2294 	.db #0x14	; 20
      000066 12                    2295 	.db #0x12	; 18
      000067 7F                    2296 	.db #0x7f	; 127
      000068 10                    2297 	.db #0x10	; 16
      000069 27                    2298 	.db #0x27	; 39
      00006A 45                    2299 	.db #0x45	; 69	'E'
      00006B 45                    2300 	.db #0x45	; 69	'E'
      00006C 45                    2301 	.db #0x45	; 69	'E'
      00006D 39                    2302 	.db #0x39	; 57	'9'
      00006E 3C                    2303 	.db #0x3c	; 60
      00006F 4A                    2304 	.db #0x4a	; 74	'J'
      000070 49                    2305 	.db #0x49	; 73	'I'
      000071 49                    2306 	.db #0x49	; 73	'I'
      000072 30                    2307 	.db #0x30	; 48	'0'
      000073 01                    2308 	.db #0x01	; 1
      000074 71                    2309 	.db #0x71	; 113	'q'
      000075 09                    2310 	.db #0x09	; 9
      000076 05                    2311 	.db #0x05	; 5
      000077 03                    2312 	.db #0x03	; 3
      000078 36                    2313 	.db #0x36	; 54	'6'
      000079 49                    2314 	.db #0x49	; 73	'I'
      00007A 49                    2315 	.db #0x49	; 73	'I'
      00007B 49                    2316 	.db #0x49	; 73	'I'
      00007C 36                    2317 	.db #0x36	; 54	'6'
      00007D 06                    2318 	.db #0x06	; 6
      00007E 49                    2319 	.db #0x49	; 73	'I'
      00007F 49                    2320 	.db #0x49	; 73	'I'
      000080 29                    2321 	.db #0x29	; 41
      000081 1E                    2322 	.db #0x1e	; 30
      000082 00                    2323 	.db #0x00	; 0
      000083 36                    2324 	.db #0x36	; 54	'6'
      000084 36                    2325 	.db #0x36	; 54	'6'
      000085 00                    2326 	.db #0x00	; 0
      000086 00                    2327 	.db #0x00	; 0
      000087 00                    2328 	.db #0x00	; 0
      000088 56                    2329 	.db #0x56	; 86	'V'
      000089 36                    2330 	.db #0x36	; 54	'6'
      00008A 00                    2331 	.db #0x00	; 0
      00008B 00                    2332 	.db #0x00	; 0
      00008C 08                    2333 	.db #0x08	; 8
      00008D 14                    2334 	.db #0x14	; 20
      00008E 22                    2335 	.db #0x22	; 34
      00008F 41                    2336 	.db #0x41	; 65	'A'
      000090 00                    2337 	.db #0x00	; 0
      000091 14                    2338 	.db #0x14	; 20
      000092 14                    2339 	.db #0x14	; 20
      000093 14                    2340 	.db #0x14	; 20
      000094 14                    2341 	.db #0x14	; 20
      000095 14                    2342 	.db #0x14	; 20
      000096 00                    2343 	.db #0x00	; 0
      000097 41                    2344 	.db #0x41	; 65	'A'
      000098 22                    2345 	.db #0x22	; 34
      000099 14                    2346 	.db #0x14	; 20
      00009A 08                    2347 	.db #0x08	; 8
      00009B 02                    2348 	.db #0x02	; 2
      00009C 01                    2349 	.db #0x01	; 1
      00009D 51                    2350 	.db #0x51	; 81	'Q'
      00009E 09                    2351 	.db #0x09	; 9
      00009F 06                    2352 	.db #0x06	; 6
      0000A0 32                    2353 	.db #0x32	; 50	'2'
      0000A1 49                    2354 	.db #0x49	; 73	'I'
      0000A2 79                    2355 	.db #0x79	; 121	'y'
      0000A3 41                    2356 	.db #0x41	; 65	'A'
      0000A4 3E                    2357 	.db #0x3e	; 62
      0000A5 7E                    2358 	.db #0x7e	; 126
      0000A6 11                    2359 	.db #0x11	; 17
      0000A7 11                    2360 	.db #0x11	; 17
      0000A8 11                    2361 	.db #0x11	; 17
      0000A9 7E                    2362 	.db #0x7e	; 126
      0000AA 7F                    2363 	.db #0x7f	; 127
      0000AB 49                    2364 	.db #0x49	; 73	'I'
      0000AC 49                    2365 	.db #0x49	; 73	'I'
      0000AD 49                    2366 	.db #0x49	; 73	'I'
      0000AE 36                    2367 	.db #0x36	; 54	'6'
      0000AF 3E                    2368 	.db #0x3e	; 62
      0000B0 41                    2369 	.db #0x41	; 65	'A'
      0000B1 41                    2370 	.db #0x41	; 65	'A'
      0000B2 41                    2371 	.db #0x41	; 65	'A'
      0000B3 22                    2372 	.db #0x22	; 34
      0000B4 7F                    2373 	.db #0x7f	; 127
      0000B5 41                    2374 	.db #0x41	; 65	'A'
      0000B6 41                    2375 	.db #0x41	; 65	'A'
      0000B7 22                    2376 	.db #0x22	; 34
      0000B8 1C                    2377 	.db #0x1c	; 28
      0000B9 7F                    2378 	.db #0x7f	; 127
      0000BA 49                    2379 	.db #0x49	; 73	'I'
      0000BB 49                    2380 	.db #0x49	; 73	'I'
      0000BC 49                    2381 	.db #0x49	; 73	'I'
      0000BD 41                    2382 	.db #0x41	; 65	'A'
      0000BE 7F                    2383 	.db #0x7f	; 127
      0000BF 09                    2384 	.db #0x09	; 9
      0000C0 09                    2385 	.db #0x09	; 9
      0000C1 09                    2386 	.db #0x09	; 9
      0000C2 01                    2387 	.db #0x01	; 1
      0000C3 3E                    2388 	.db #0x3e	; 62
      0000C4 41                    2389 	.db #0x41	; 65	'A'
      0000C5 49                    2390 	.db #0x49	; 73	'I'
      0000C6 49                    2391 	.db #0x49	; 73	'I'
      0000C7 7A                    2392 	.db #0x7a	; 122	'z'
      0000C8 7F                    2393 	.db #0x7f	; 127
      0000C9 08                    2394 	.db #0x08	; 8
      0000CA 08                    2395 	.db #0x08	; 8
      0000CB 08                    2396 	.db #0x08	; 8
      0000CC 7F                    2397 	.db #0x7f	; 127
      0000CD 00                    2398 	.db #0x00	; 0
      0000CE 41                    2399 	.db #0x41	; 65	'A'
      0000CF 7F                    2400 	.db #0x7f	; 127
      0000D0 41                    2401 	.db #0x41	; 65	'A'
      0000D1 00                    2402 	.db #0x00	; 0
      0000D2 20                    2403 	.db #0x20	; 32
      0000D3 40                    2404 	.db #0x40	; 64
      0000D4 41                    2405 	.db #0x41	; 65	'A'
      0000D5 3F                    2406 	.db #0x3f	; 63
      0000D6 01                    2407 	.db #0x01	; 1
      0000D7 7F                    2408 	.db #0x7f	; 127
      0000D8 08                    2409 	.db #0x08	; 8
      0000D9 14                    2410 	.db #0x14	; 20
      0000DA 22                    2411 	.db #0x22	; 34
      0000DB 41                    2412 	.db #0x41	; 65	'A'
      0000DC 7F                    2413 	.db #0x7f	; 127
      0000DD 40                    2414 	.db #0x40	; 64
      0000DE 40                    2415 	.db #0x40	; 64
      0000DF 40                    2416 	.db #0x40	; 64
      0000E0 40                    2417 	.db #0x40	; 64
      0000E1 7F                    2418 	.db #0x7f	; 127
      0000E2 02                    2419 	.db #0x02	; 2
      0000E3 0C                    2420 	.db #0x0c	; 12
      0000E4 02                    2421 	.db #0x02	; 2
      0000E5 7F                    2422 	.db #0x7f	; 127
      0000E6 7F                    2423 	.db #0x7f	; 127
      0000E7 04                    2424 	.db #0x04	; 4
      0000E8 08                    2425 	.db #0x08	; 8
      0000E9 10                    2426 	.db #0x10	; 16
      0000EA 7F                    2427 	.db #0x7f	; 127
      0000EB 3E                    2428 	.db #0x3e	; 62
      0000EC 41                    2429 	.db #0x41	; 65	'A'
      0000ED 41                    2430 	.db #0x41	; 65	'A'
      0000EE 41                    2431 	.db #0x41	; 65	'A'
      0000EF 3E                    2432 	.db #0x3e	; 62
      0000F0 7F                    2433 	.db #0x7f	; 127
      0000F1 09                    2434 	.db #0x09	; 9
      0000F2 09                    2435 	.db #0x09	; 9
      0000F3 09                    2436 	.db #0x09	; 9
      0000F4 06                    2437 	.db #0x06	; 6
      0000F5 3E                    2438 	.db #0x3e	; 62
      0000F6 41                    2439 	.db #0x41	; 65	'A'
      0000F7 51                    2440 	.db #0x51	; 81	'Q'
      0000F8 21                    2441 	.db #0x21	; 33
      0000F9 5E                    2442 	.db #0x5e	; 94
      0000FA 7F                    2443 	.db #0x7f	; 127
      0000FB 09                    2444 	.db #0x09	; 9
      0000FC 19                    2445 	.db #0x19	; 25
      0000FD 29                    2446 	.db #0x29	; 41
      0000FE 46                    2447 	.db #0x46	; 70	'F'
      0000FF 46                    2448 	.db #0x46	; 70	'F'
      000100 49                    2449 	.db #0x49	; 73	'I'
      000101 49                    2450 	.db #0x49	; 73	'I'
      000102 49                    2451 	.db #0x49	; 73	'I'
      000103 31                    2452 	.db #0x31	; 49	'1'
      000104 01                    2453 	.db #0x01	; 1
      000105 01                    2454 	.db #0x01	; 1
      000106 7F                    2455 	.db #0x7f	; 127
      000107 01                    2456 	.db #0x01	; 1
      000108 01                    2457 	.db #0x01	; 1
      000109 3F                    2458 	.db #0x3f	; 63
      00010A 40                    2459 	.db #0x40	; 64
      00010B 40                    2460 	.db #0x40	; 64
      00010C 40                    2461 	.db #0x40	; 64
      00010D 3F                    2462 	.db #0x3f	; 63
      00010E 1F                    2463 	.db #0x1f	; 31
      00010F 20                    2464 	.db #0x20	; 32
      000110 40                    2465 	.db #0x40	; 64
      000111 20                    2466 	.db #0x20	; 32
      000112 1F                    2467 	.db #0x1f	; 31
      000113 3F                    2468 	.db #0x3f	; 63
      000114 40                    2469 	.db #0x40	; 64
      000115 38                    2470 	.db #0x38	; 56	'8'
      000116 40                    2471 	.db #0x40	; 64
      000117 3F                    2472 	.db #0x3f	; 63
      000118 63                    2473 	.db #0x63	; 99	'c'
      000119 14                    2474 	.db #0x14	; 20
      00011A 08                    2475 	.db #0x08	; 8
      00011B 14                    2476 	.db #0x14	; 20
      00011C 63                    2477 	.db #0x63	; 99	'c'
      00011D 07                    2478 	.db #0x07	; 7
      00011E 08                    2479 	.db #0x08	; 8
      00011F 70                    2480 	.db #0x70	; 112	'p'
      000120 08                    2481 	.db #0x08	; 8
      000121 07                    2482 	.db #0x07	; 7
      000122 61                    2483 	.db #0x61	; 97	'a'
      000123 51                    2484 	.db #0x51	; 81	'Q'
      000124 49                    2485 	.db #0x49	; 73	'I'
      000125 45                    2486 	.db #0x45	; 69	'E'
      000126 43                    2487 	.db #0x43	; 67	'C'
      000127 00                    2488 	.db #0x00	; 0
      000128 7F                    2489 	.db #0x7f	; 127
      000129 41                    2490 	.db #0x41	; 65	'A'
      00012A 41                    2491 	.db #0x41	; 65	'A'
      00012B 00                    2492 	.db #0x00	; 0
      00012C 02                    2493 	.db #0x02	; 2
      00012D 04                    2494 	.db #0x04	; 4
      00012E 08                    2495 	.db #0x08	; 8
      00012F 10                    2496 	.db #0x10	; 16
      000130 20                    2497 	.db #0x20	; 32
      000131 00                    2498 	.db #0x00	; 0
      000132 41                    2499 	.db #0x41	; 65	'A'
      000133 41                    2500 	.db #0x41	; 65	'A'
      000134 7F                    2501 	.db #0x7f	; 127
      000135 00                    2502 	.db #0x00	; 0
      000136 04                    2503 	.db #0x04	; 4
      000137 02                    2504 	.db #0x02	; 2
      000138 01                    2505 	.db #0x01	; 1
      000139 02                    2506 	.db #0x02	; 2
      00013A 04                    2507 	.db #0x04	; 4
      00013B 40                    2508 	.db #0x40	; 64
      00013C 40                    2509 	.db #0x40	; 64
      00013D 40                    2510 	.db #0x40	; 64
      00013E 40                    2511 	.db #0x40	; 64
      00013F 40                    2512 	.db #0x40	; 64
      000140 00                    2513 	.db #0x00	; 0
      000141 01                    2514 	.db #0x01	; 1
      000142 02                    2515 	.db #0x02	; 2
      000143 04                    2516 	.db #0x04	; 4
      000144 00                    2517 	.db #0x00	; 0
      000145 20                    2518 	.db #0x20	; 32
      000146 54                    2519 	.db #0x54	; 84	'T'
      000147 54                    2520 	.db #0x54	; 84	'T'
      000148 54                    2521 	.db #0x54	; 84	'T'
      000149 78                    2522 	.db #0x78	; 120	'x'
      00014A 7F                    2523 	.db #0x7f	; 127
      00014B 48                    2524 	.db #0x48	; 72	'H'
      00014C 44                    2525 	.db #0x44	; 68	'D'
      00014D 44                    2526 	.db #0x44	; 68	'D'
      00014E 38                    2527 	.db #0x38	; 56	'8'
      00014F 38                    2528 	.db #0x38	; 56	'8'
      000150 44                    2529 	.db #0x44	; 68	'D'
      000151 44                    2530 	.db #0x44	; 68	'D'
      000152 44                    2531 	.db #0x44	; 68	'D'
      000153 20                    2532 	.db #0x20	; 32
      000154 38                    2533 	.db #0x38	; 56	'8'
      000155 44                    2534 	.db #0x44	; 68	'D'
      000156 44                    2535 	.db #0x44	; 68	'D'
      000157 48                    2536 	.db #0x48	; 72	'H'
      000158 7F                    2537 	.db #0x7f	; 127
      000159 38                    2538 	.db #0x38	; 56	'8'
      00015A 54                    2539 	.db #0x54	; 84	'T'
      00015B 54                    2540 	.db #0x54	; 84	'T'
      00015C 54                    2541 	.db #0x54	; 84	'T'
      00015D 18                    2542 	.db #0x18	; 24
      00015E 08                    2543 	.db #0x08	; 8
      00015F 7E                    2544 	.db #0x7e	; 126
      000160 09                    2545 	.db #0x09	; 9
      000161 01                    2546 	.db #0x01	; 1
      000162 02                    2547 	.db #0x02	; 2
      000163 0C                    2548 	.db #0x0c	; 12
      000164 52                    2549 	.db #0x52	; 82	'R'
      000165 52                    2550 	.db #0x52	; 82	'R'
      000166 52                    2551 	.db #0x52	; 82	'R'
      000167 3E                    2552 	.db #0x3e	; 62
      000168 7F                    2553 	.db #0x7f	; 127
      000169 08                    2554 	.db #0x08	; 8
      00016A 04                    2555 	.db #0x04	; 4
      00016B 04                    2556 	.db #0x04	; 4
      00016C 78                    2557 	.db #0x78	; 120	'x'
      00016D 00                    2558 	.db #0x00	; 0
      00016E 44                    2559 	.db #0x44	; 68	'D'
      00016F 7D                    2560 	.db #0x7d	; 125
      000170 40                    2561 	.db #0x40	; 64
      000171 00                    2562 	.db #0x00	; 0
      000172 20                    2563 	.db #0x20	; 32
      000173 40                    2564 	.db #0x40	; 64
      000174 44                    2565 	.db #0x44	; 68	'D'
      000175 3D                    2566 	.db #0x3d	; 61
      000176 00                    2567 	.db #0x00	; 0
      000177 7F                    2568 	.db #0x7f	; 127
      000178 10                    2569 	.db #0x10	; 16
      000179 28                    2570 	.db #0x28	; 40
      00017A 44                    2571 	.db #0x44	; 68	'D'
      00017B 00                    2572 	.db #0x00	; 0
      00017C 00                    2573 	.db #0x00	; 0
      00017D 41                    2574 	.db #0x41	; 65	'A'
      00017E 7F                    2575 	.db #0x7f	; 127
      00017F 40                    2576 	.db #0x40	; 64
      000180 00                    2577 	.db #0x00	; 0
      000181 7C                    2578 	.db #0x7c	; 124
      000182 04                    2579 	.db #0x04	; 4
      000183 18                    2580 	.db #0x18	; 24
      000184 04                    2581 	.db #0x04	; 4
      000185 78                    2582 	.db #0x78	; 120	'x'
      000186 7C                    2583 	.db #0x7c	; 124
      000187 08                    2584 	.db #0x08	; 8
      000188 04                    2585 	.db #0x04	; 4
      000189 04                    2586 	.db #0x04	; 4
      00018A 78                    2587 	.db #0x78	; 120	'x'
      00018B 38                    2588 	.db #0x38	; 56	'8'
      00018C 44                    2589 	.db #0x44	; 68	'D'
      00018D 44                    2590 	.db #0x44	; 68	'D'
      00018E 44                    2591 	.db #0x44	; 68	'D'
      00018F 38                    2592 	.db #0x38	; 56	'8'
      000190 7C                    2593 	.db #0x7c	; 124
      000191 14                    2594 	.db #0x14	; 20
      000192 14                    2595 	.db #0x14	; 20
      000193 14                    2596 	.db #0x14	; 20
      000194 08                    2597 	.db #0x08	; 8
      000195 08                    2598 	.db #0x08	; 8
      000196 14                    2599 	.db #0x14	; 20
      000197 14                    2600 	.db #0x14	; 20
      000198 14                    2601 	.db #0x14	; 20
      000199 7C                    2602 	.db #0x7c	; 124
      00019A 7C                    2603 	.db #0x7c	; 124
      00019B 08                    2604 	.db #0x08	; 8
      00019C 04                    2605 	.db #0x04	; 4
      00019D 04                    2606 	.db #0x04	; 4
      00019E 08                    2607 	.db #0x08	; 8
      00019F 48                    2608 	.db #0x48	; 72	'H'
      0001A0 54                    2609 	.db #0x54	; 84	'T'
      0001A1 54                    2610 	.db #0x54	; 84	'T'
      0001A2 54                    2611 	.db #0x54	; 84	'T'
      0001A3 20                    2612 	.db #0x20	; 32
      0001A4 04                    2613 	.db #0x04	; 4
      0001A5 3F                    2614 	.db #0x3f	; 63
      0001A6 44                    2615 	.db #0x44	; 68	'D'
      0001A7 40                    2616 	.db #0x40	; 64
      0001A8 20                    2617 	.db #0x20	; 32
      0001A9 3C                    2618 	.db #0x3c	; 60
      0001AA 40                    2619 	.db #0x40	; 64
      0001AB 40                    2620 	.db #0x40	; 64
      0001AC 20                    2621 	.db #0x20	; 32
      0001AD 7C                    2622 	.db #0x7c	; 124
      0001AE 1C                    2623 	.db #0x1c	; 28
      0001AF 20                    2624 	.db #0x20	; 32
      0001B0 40                    2625 	.db #0x40	; 64
      0001B1 20                    2626 	.db #0x20	; 32
      0001B2 1C                    2627 	.db #0x1c	; 28
      0001B3 3C                    2628 	.db #0x3c	; 60
      0001B4 40                    2629 	.db #0x40	; 64
      0001B5 30                    2630 	.db #0x30	; 48	'0'
      0001B6 40                    2631 	.db #0x40	; 64
      0001B7 3C                    2632 	.db #0x3c	; 60
      0001B8 44                    2633 	.db #0x44	; 68	'D'
      0001B9 28                    2634 	.db #0x28	; 40
      0001BA 10                    2635 	.db #0x10	; 16
      0001BB 28                    2636 	.db #0x28	; 40
      0001BC 44                    2637 	.db #0x44	; 68	'D'
      0001BD 0C                    2638 	.db #0x0c	; 12
      0001BE 50                    2639 	.db #0x50	; 80	'P'
      0001BF 50                    2640 	.db #0x50	; 80	'P'
      0001C0 50                    2641 	.db #0x50	; 80	'P'
      0001C1 3C                    2642 	.db #0x3c	; 60
      0001C2 44                    2643 	.db #0x44	; 68	'D'
      0001C3 64                    2644 	.db #0x64	; 100	'd'
      0001C4 54                    2645 	.db #0x54	; 84	'T'
      0001C5 4C                    2646 	.db #0x4c	; 76	'L'
      0001C6 44                    2647 	.db #0x44	; 68	'D'
      0001C7 00                    2648 	.db #0x00	; 0
      0001C8 08                    2649 	.db #0x08	; 8
      0001C9 36                    2650 	.db #0x36	; 54	'6'
      0001CA 41                    2651 	.db #0x41	; 65	'A'
      0001CB 00                    2652 	.db #0x00	; 0
      0001CC 00                    2653 	.db #0x00	; 0
      0001CD 00                    2654 	.db #0x00	; 0
      0001CE 7F                    2655 	.db #0x7f	; 127
      0001CF 00                    2656 	.db #0x00	; 0
      0001D0 00                    2657 	.db #0x00	; 0
      0001D1 00                    2658 	.db #0x00	; 0
      0001D2 41                    2659 	.db #0x41	; 65	'A'
      0001D3 36                    2660 	.db #0x36	; 54	'6'
      0001D4 08                    2661 	.db #0x08	; 8
      0001D5 00                    2662 	.db #0x00	; 0
      0001D6 10                    2663 	.db #0x10	; 16
      0001D7 08                    2664 	.db #0x08	; 8
      0001D8 08                    2665 	.db #0x08	; 8
      0001D9 10                    2666 	.db #0x10	; 16
      0001DA 08                    2667 	.db #0x08	; 8
      0001DB 00                    2668 	.db #0x00	; 0
      0001DC 00                    2669 	.db #0x00	; 0
      0001DD 00                    2670 	.db #0x00	; 0
      0001DE 00                    2671 	.db #0x00	; 0
      0001DF 00                    2672 	.db #0x00	; 0
      0001E0                       2673 _INIT_SSD1306:
      0001E0 11                    2674 	.db #0x11	; 17
      0001E1 AE                    2675 	.db #0xae	; 174
      0001E2 00                    2676 	.db #0x00	; 0
      0001E3 A8                    2677 	.db #0xa8	; 168
      0001E4 01                    2678 	.db #0x01	; 1
      0001E5 3F                    2679 	.db #0x3f	; 63
      0001E6 20                    2680 	.db #0x20	; 32
      0001E7 01                    2681 	.db #0x01	; 1
      0001E8 00                    2682 	.db #0x00	; 0
      0001E9 40                    2683 	.db #0x40	; 64
      0001EA 00                    2684 	.db #0x00	; 0
      0001EB D3                    2685 	.db #0xd3	; 211
      0001EC 01                    2686 	.db #0x01	; 1
      0001ED 00                    2687 	.db #0x00	; 0
      0001EE A1                    2688 	.db #0xa1	; 161
      0001EF 00                    2689 	.db #0x00	; 0
      0001F0 C8                    2690 	.db #0xc8	; 200
      0001F1 00                    2691 	.db #0x00	; 0
      0001F2 DA                    2692 	.db #0xda	; 218
      0001F3 01                    2693 	.db #0x01	; 1
      0001F4 12                    2694 	.db #0x12	; 18
      0001F5 81                    2695 	.db #0x81	; 129
      0001F6 01                    2696 	.db #0x01	; 1
      0001F7 7F                    2697 	.db #0x7f	; 127
      0001F8 A4                    2698 	.db #0xa4	; 164
      0001F9 00                    2699 	.db #0x00	; 0
      0001FA A6                    2700 	.db #0xa6	; 166
      0001FB 00                    2701 	.db #0x00	; 0
      0001FC D5                    2702 	.db #0xd5	; 213
      0001FD 01                    2703 	.db #0x01	; 1
      0001FE 80                    2704 	.db #0x80	; 128
      0001FF D9                    2705 	.db #0xd9	; 217
      000200 01                    2706 	.db #0x01	; 1
      000201 C2                    2707 	.db #0xc2	; 194
      000202 DB                    2708 	.db #0xdb	; 219
      000203 01                    2709 	.db #0x01	; 1
      000204 20                    2710 	.db #0x20	; 32
      000205 8D                    2711 	.db #0x8d	; 141
      000206 01                    2712 	.db #0x01	; 1
      000207 14                    2713 	.db #0x14	; 20
      000208 2E                    2714 	.db #0x2e	; 46
      000209 00                    2715 	.db #0x00	; 0
      00020A AF                    2716 	.db #0xaf	; 175
      00020B 00                    2717 	.db #0x00	; 0
                                   2718 	.area XINIT   (CODE)
                                   2719 	.area CABS    (ABS,CODE)
